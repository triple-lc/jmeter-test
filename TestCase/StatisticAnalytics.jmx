<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.1" jmeter="3.1 r1770033">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="StatisticAnalyticsTest" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="StatisticAnalyticsInterfaceTest" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1489982599000</longProp>
        <longProp name="ThreadGroup.end_time">1489982599000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="now_sec" elementType="Argument">
              <stringProp name="Argument.name">now_sec</stringProp>
              <stringProp name="Argument.value">${__time(/1000,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">当前时间的10位时间戳</stringProp>
            </elementProp>
            <elementProp name="today_zero_milli" elementType="Argument">
              <stringProp name="Argument.name">today_zero_milli</stringProp>
              <stringProp name="Argument.value">${__javaScript(Date.parse(&quot;${__time(yyyy/MM/dd,)}&quot;))}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">今天0点的13位时间戳</stringProp>
            </elementProp>
            <elementProp name="today_zero_sec" elementType="Argument">
              <stringProp name="Argument.name">today_zero_sec</stringProp>
              <stringProp name="Argument.value">${__javaScript(Math.round(Date.parse(&quot;${__time(yyyy/MM/dd,)}&quot;))/1000)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">今天0点的10位时间戳</stringProp>
            </elementProp>
            <elementProp name="now_milli" elementType="Argument">
              <stringProp name="Argument.name">now_milli</stringProp>
              <stringProp name="Argument.value">${__time(,)}</stringProp>
              <stringProp name="Argument.desc">当前时间的13位时间戳</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="test" elementType="Argument">
              <stringProp name="Argument.name">test</stringProp>
              <stringProp name="Argument.value">${__javaScript(Date.parse(&quot;${__time(yyyy-MM-dd,)}&quot;))}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="job_metric_type" elementType="Argument">
              <stringProp name="Argument.name">job_metric_type</stringProp>
              <stringProp name="Argument.value">${__chooseRandom(time,io,num,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="top_data_type" elementType="Argument">
              <stringProp name="Argument.name">top_data_type</stringProp>
              <stringProp name="Argument.value">${__chooseRandom(mr,hive,spark,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="top_data_metric" elementType="Argument">
              <stringProp name="Argument.name">top_data_metric</stringProp>
              <stringProp name="Argument.value">${__chooseRandom(elapsedTime,HDFS,totaltaskcount,jobtaskphysicalmemorybytes,jobtaskcpumilliseconds,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="MR_type" elementType="Argument">
              <stringProp name="Argument.name">MR_type</stringProp>
              <stringProp name="Argument.value">${__chooseRandom(mr,hive,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="MR_metricType" elementType="Argument">
              <stringProp name="Argument.name">MR_metricType</stringProp>
              <stringProp name="Argument.value">${__chooseRandom(totalcount_totaltime,totalcount_jobtaskcpumilliseconds,totalcount_jobtaskgctimemillis,totalcount_jobtaskphysicalmemorybytes,jobtaskphysicalmemorybytes_jobtaskvirtualmemorybytes,totalcount_jobfilesystemhdfsreadopt,totalcount_jobfilesystemhdfswriteopt,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="LoginController" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LoginPage" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="loginName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">guifangwang</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">loginName</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">12345</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/bigdata-web/api/auth/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assetion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                <stringProp name="0"></stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LoginEnter" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cluster" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">cdh</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">cluster</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/bigdata-web/api/auth/clusterType/enter</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assetion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                <stringProp name="0"></stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script"></stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">10.11.159.117</stringProp>
          <stringProp name="HTTPSampler.port">80</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie 管理器" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Statistic_Analytics_Total_Overview" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/overview/index/ov/storage" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="startTime" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${now_sec}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">startTime</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/index/ov/storage</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="67791721">&quot;code&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/overview/index/ov/job" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="startTime" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${now_sec}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">startTime</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/index/ov/job</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="67791721">&quot;code&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/overview/index/ov/hbase" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="startTime" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${now_sec}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">startTime</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/index/ov/hbase</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="67791721">&quot;code&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/overview/index/jobs/metric" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="startTime" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${now_sec}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">startTime</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${job_metric_type}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/index/jobs/metric</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="67791721">&quot;code&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/overview/index/jobs/compare" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="startTime" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${now_sec}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">startTime</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/index/jobs/compare</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="67791721">&quot;code&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/overview/index/hbase" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="startTime" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${now_sec}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">startTime</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/index/hbase</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="67791721">&quot;code&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/overview/index/top/data" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="startTime" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${now_sec}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">startTime</stringProp>
                </elementProp>
                <elementProp name="type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${top_data_type}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">type</stringProp>
                </elementProp>
                <elementProp name="metric" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${top_data_metric}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">metric</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/index/top/data</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="67791721">&quot;code&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/overview/index/hdfs/operation" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="startTime" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${now_sec}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">startTime</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/index/hdfs/operation</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="67791721">&quot;code&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/overview/index/hdfs/compare" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="startTime" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${now_sec}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">startTime</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/index/hdfs/compare</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="67791721">&quot;code&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Statistic_Analytics_Job" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/overview/jobs/overview" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="startTime" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${today_zero_sec}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">startTime</stringProp>
                </elementProp>
                <elementProp name="endTime" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${now_sec}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">endTime</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/jobs/overview</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="67791721">&quot;code&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/overview/jobs/jobTimeChart" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="startTime" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${today_zero_sec}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">startTime</stringProp>
                </elementProp>
                <elementProp name="endTime" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${now_sec}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">endTime</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/jobs/jobTimeChart</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="67791721">&quot;code&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/overview/jobs/jobIOChart" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="startTime" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${today_zero_sec}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">startTime</stringProp>
                </elementProp>
                <elementProp name="endTime" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${now_sec}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">endTime</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/jobs/jobIOChart</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="67791721">&quot;code&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/overview/jobs/jobAmountChart" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="startTime" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${today_zero_sec}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">startTime</stringProp>
                </elementProp>
                <elementProp name="endTime" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${now_sec}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">endTime</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/jobs/jobAmountChart</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="67791721">&quot;code&quot;:0</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Job_MR" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/overview/jobs/metricsMr" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/jobs/metricsMr</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/overview/jobs/headMr" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/jobs/headMr</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/overview/jobs/mrChart" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="jobType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${MR_type}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">jobType</stringProp>
                  </elementProp>
                  <elementProp name="metric" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">totaltime</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">metric</stringProp>
                  </elementProp>
                  <elementProp name="startTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${today_zero_sec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">startTime</stringProp>
                  </elementProp>
                  <elementProp name="endTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${now_sec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">endTime</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/jobs/mrChart</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/overview/jobs/dataMr" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="startIndex" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">startIndex</stringProp>
                  </elementProp>
                  <elementProp name="length" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">9</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">length</stringProp>
                  </elementProp>
                  <elementProp name="appType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">MR</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">appType</stringProp>
                  </elementProp>
                  <elementProp name="appName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">appName</stringProp>
                  </elementProp>
                  <elementProp name="isHigh" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">high</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">isHigh</stringProp>
                  </elementProp>
                  <elementProp name="metric" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">totaltime</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">metric</stringProp>
                  </elementProp>
                  <elementProp name="startTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${today_zero_sec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">startTime</stringProp>
                  </elementProp>
                  <elementProp name="endTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${now_sec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">endTime</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/jobs/dataMr</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/overview/jobs/jobDetail" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="jobDetail" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">jobDetail</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/jobs/jobDetail</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/overview/jobs/aggData" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="startTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${today_zero_sec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">startTime</stringProp>
                  </elementProp>
                  <elementProp name="endTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${now_sec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">endTime</stringProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${MR_type}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/jobs/aggData</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/overview/jobs/chart" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="startTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${today_zero_sec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">startTime</stringProp>
                  </elementProp>
                  <elementProp name="endTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${now_sec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">endTime</stringProp>
                  </elementProp>
                  <elementProp name="metricType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${MR_metricType}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">metricType</stringProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${MR_type}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/jobs/chart</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Job_Hive" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Hive_Overview_lastweek" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="startTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1489334400</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">startTime</stringProp>
                  </elementProp>
                  <elementProp name="endTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1489939200</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">endTime</stringProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">hive</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/jobs/aggData</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1426110856">{&quot;code&quot;:0,&quot;msg&quot;:&quot;&quot;,&quot;data&quot;:[{&quot;name&quot;:&quot;job总时间&quot;,&quot;value&quot;:&quot;0.00&quot;,&quot;icon&quot;:&quot;time&quot;,&quot;unit&quot;:&quot;h&quot;,&quot;tableData&quot;:[{&quot;name&quot;:&quot;appuser&quot;,&quot;value&quot;:&quot;589&quot;}]},{&quot;name&quot;:&quot;cpu时间&quot;,&quot;value&quot;:&quot;0.00&quot;,&quot;icon&quot;:&quot;time&quot;,&quot;unit&quot;:&quot;h&quot;,&quot;tableData&quot;:[{&quot;name&quot;:&quot;appuser&quot;,&quot;value&quot;:&quot;2169460&quot;}]},{&quot;name&quot;:&quot;gc总时间&quot;,&quot;value&quot;:&quot;0.00&quot;,&quot;icon&quot;:&quot;time&quot;,&quot;unit&quot;:&quot;h&quot;,&quot;tableData&quot;:[{&quot;name&quot;:&quot;appuser&quot;,&quot;value&quot;:&quot;64245&quot;}]},{&quot;name&quot;:&quot;job总数&quot;,&quot;value&quot;:&quot;8&quot;,&quot;icon&quot;:&quot;number&quot;,&quot;unit&quot;:&quot;&quot;,&quot;tableData&quot;:[{&quot;name&quot;:&quot;appuser&quot;,&quot;value&quot;:&quot;8&quot;}]},{&quot;name&quot;:&quot;成功job数&quot;,&quot;value&quot;:&quot;8&quot;,&quot;icon&quot;:&quot;number&quot;,&quot;unit&quot;:&quot;&quot;,&quot;tableData&quot;:[{&quot;name&quot;:&quot;appuser&quot;,&quot;value&quot;:&quot;8&quot;}]},{&quot;name&quot;:&quot;失败job数&quot;,&quot;value&quot;:&quot;0&quot;,&quot;icon&quot;:&quot;number&quot;,&quot;unit&quot;:&quot;&quot;,&quot;tableData&quot;:[{&quot;name&quot;:&quot;appuser&quot;,&quot;value&quot;:&quot;0&quot;}]},{&quot;name&quot;:&quot;hdfs读操作数&quot;,&quot;value&quot;:&quot;5426&quot;,&quot;icon&quot;:&quot;number&quot;,&quot;unit&quot;:&quot;&quot;,&quot;tableData&quot;:[{&quot;name&quot;:&quot;appuser&quot;,&quot;value&quot;:&quot;5426&quot;}]},{&quot;name&quot;:&quot;hdfs写操作数&quot;,&quot;value&quot;:&quot;2230&quot;,&quot;icon&quot;:&quot;number&quot;,&quot;unit&quot;:&quot;&quot;,&quot;tableData&quot;:[{&quot;name&quot;:&quot;appuser&quot;,&quot;value&quot;:&quot;2230&quot;}]},{&quot;name&quot;:&quot;map数&quot;,&quot;value&quot;:&quot;1115&quot;,&quot;icon&quot;:null,&quot;unit&quot;:&quot;&quot;,&quot;tableData&quot;:[{&quot;name&quot;:&quot;appuser&quot;,&quot;value&quot;:&quot;1115&quot;}]},{&quot;name&quot;:&quot;reduce数&quot;,&quot;value&quot;:&quot;0&quot;,&quot;icon&quot;:null,&quot;unit&quot;:&quot;&quot;,&quot;tableData&quot;:[{&quot;name&quot;:&quot;appuser&quot;,&quot;value&quot;:&quot;0&quot;}]},{&quot;name&quot;:&quot;HDFS读(G)&quot;,&quot;value&quot;:&quot;0.00&quot;,&quot;icon&quot;:null,&quot;unit&quot;:&quot;G&quot;,&quot;tableData&quot;:[{&quot;name&quot;:&quot;appuser&quot;,&quot;value&quot;:&quot;268464116&quot;}]},{&quot;name&quot;:&quot;HDFS写(G)&quot;,&quot;value&quot;:&quot;0.00&quot;,&quot;icon&quot;:null,&quot;unit&quot;:&quot;G&quot;,&quot;tableData&quot;:[{&quot;name&quot;:&quot;appuser&quot;,&quot;value&quot;:&quot;2741209&quot;}]}]}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Hive_Job_Virtual_Mem_lastweek" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="startTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1489334400</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">startTime</stringProp>
                  </elementProp>
                  <elementProp name="endTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1489939200</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">endTime</stringProp>
                  </elementProp>
                  <elementProp name="metricType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">jobtaskphysicalmemorybytes_jobtaskvirtualmemorybytes</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">metricType</stringProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">hive</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/jobs/chart</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-293221840">{&quot;code&quot;:0,&quot;msg&quot;:&quot;&quot;,&quot;data&quot;:{&quot;subtitle&quot;:&quot;jobtaskphysicalmemorybytes_jobtaskvirtualmemorybytes&quot;,&quot;title&quot;:&quot;物理内存_虚拟内存&quot;,&quot;start_time&quot;:1489334400,&quot;end_time&quot;:1489939200,&quot;y_unit&quot;:null,&quot;unit&quot;:&quot;3600&quot;,&quot;chart_type&quot;:&quot;spline&quot;,&quot;chart_name&quot;:null,&quot;datas&quot;:[{&quot;name&quot;:&quot;物理内存使用量&quot;,&quot;values&quot;:[&quot;71&quot;,&quot;1&quot;,&quot;36&quot;,&quot;36&quot;,&quot;107&quot;],&quot;times&quot;:[1489374000,1489377600,1489474800,1489500000,1489546800],&quot;y_unit&quot;:&quot;物理内存使用量G&quot;},{&quot;name&quot;:&quot;虚拟内存使用量&quot;,&quot;values&quot;:[&quot;750&quot;,&quot;5&quot;,&quot;375&quot;,&quot;375&quot;,&quot;1124&quot;],&quot;times&quot;:[1489374000,1489377600,1489474800,1489500000,1489546800],&quot;y_unit&quot;:&quot;虚拟内存使用量G&quot;}],&quot;tableData&quot;:[[&quot;appuser&quot;,&quot;250&quot;,&quot;2628&quot;]],&quot;tableHead&quot;:[&quot;name&quot;,&quot;jobtaskphysicalmemorybytes&quot;,&quot;jobtaskvirtualmemorybytes&quot;]}}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Hive_Single_Job_Index_Analytic_lastweek" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">hive</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                  <elementProp name="jobName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">jobName</stringProp>
                  </elementProp>
                  <elementProp name="startIndex" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">startIndex</stringProp>
                  </elementProp>
                  <elementProp name="length" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">10</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">length</stringProp>
                  </elementProp>
                  <elementProp name="startTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1489334400</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">startTime</stringProp>
                  </elementProp>
                  <elementProp name="endTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1489939200</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">endTime</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/bigdata-web/api/job/single/list</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-308279707">{&quot;code&quot;:0,&quot;msg&quot;:&quot;get top data Success&quot;,&quot;data&quot;:{&quot;datas&quot;:[{&quot;count&quot;:7,&quot;cputime&quot;:&quot;0.6&quot;,&quot;taskTotalCount&quot;:1113,&quot;jobName&quot;:&quot;select * FROM hdfs_audit left join user...10(Stage-3)&quot;,&quot;io&quot;:&quot;0.25&quot;,&quot;memory&quot;:&quot;249.78&quot;,&quot;totalTime&quot;:&quot;0.16&quot;},{&quot;count&quot;:1,&quot;cputime&quot;:&quot;0&quot;,&quot;taskTotalCount&quot;:2,&quot;jobName&quot;:&quot;select * from test001 left join user_te...10(Stage-3)&quot;,&quot;io&quot;:&quot;0&quot;,&quot;memory&quot;:&quot;0.51&quot;,&quot;totalTime&quot;:&quot;0.01&quot;}],&quot;totalCount&quot;:2}}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Job_Spark" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Spark_Overview_20170306_20170312" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="startTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1488729600</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">startTime</stringProp>
                  </elementProp>
                  <elementProp name="endTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1489248000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">endTime</stringProp>
                  </elementProp>
                  <elementProp name="sparkType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">sparkType</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/spark/agg_data</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="540825816">{&quot;code&quot;:0,&quot;msg&quot;:&quot;success&quot;,&quot;data&quot;:[{&quot;name&quot;:&quot;app数&quot;,&quot;value&quot;:&quot;1467&quot;,&quot;icon&quot;:&quot;number&quot;,&quot;unit&quot;:&quot;&quot;,&quot;tableData&quot;:[{&quot;name&quot;:&quot;appuser&quot;,&quot;value&quot;:0}]},{&quot;name&quot;:&quot;job数&quot;,&quot;value&quot;:&quot;52812&quot;,&quot;icon&quot;:&quot;number&quot;,&quot;unit&quot;:&quot;&quot;,&quot;tableData&quot;:[{&quot;name&quot;:&quot;appuser&quot;,&quot;value&quot;:&quot;52812&quot;}]},{&quot;name&quot;:&quot;stage数&quot;,&quot;value&quot;:&quot;104817&quot;,&quot;icon&quot;:null,&quot;unit&quot;:&quot;&quot;,&quot;tableData&quot;:[{&quot;name&quot;:&quot;appuser&quot;,&quot;value&quot;:&quot;104817&quot;}]},{&quot;name&quot;:&quot;task数&quot;,&quot;value&quot;:&quot;7837721&quot;,&quot;icon&quot;:&quot;number&quot;,&quot;unit&quot;:&quot;&quot;,&quot;tableData&quot;:[{&quot;name&quot;:&quot;appuser&quot;,&quot;value&quot;:&quot;7837721&quot;}]},{&quot;name&quot;:&quot;失败task数&quot;,&quot;value&quot;:&quot;86992&quot;,&quot;icon&quot;:null,&quot;unit&quot;:&quot;&quot;,&quot;tableData&quot;:[{&quot;name&quot;:&quot;appuser&quot;,&quot;value&quot;:&quot;86992&quot;}]},{&quot;name&quot;:&quot;app总时间(h)&quot;,&quot;value&quot;:&quot;148.35&quot;,&quot;icon&quot;:&quot;time&quot;,&quot;unit&quot;:&quot;h&quot;,&quot;tableData&quot;:[{&quot;name&quot;:&quot;appuser&quot;,&quot;value&quot;:&quot;355.95&quot;}]},{&quot;name&quot;:&quot;gc总时间(h)&quot;,&quot;value&quot;:&quot;2.37&quot;,&quot;icon&quot;:&quot;time&quot;,&quot;unit&quot;:&quot;h&quot;,&quot;tableData&quot;:[{&quot;name&quot;:&quot;appuser&quot;,&quot;value&quot;:&quot;2.37&quot;}]},{&quot;name&quot;:&quot;总内存(G)&quot;,&quot;value&quot;:&quot;19490&quot;,&quot;icon&quot;:&quot;byte&quot;,&quot;unit&quot;:&quot;G&quot;,&quot;tableData&quot;:[{&quot;name&quot;:&quot;appuser&quot;,&quot;value&quot;:&quot;19490&quot;}]}]}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Spark_Job_Job_Sum_Index_tends_lastweek" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="startTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1488729600</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">startTime</stringProp>
                  </elementProp>
                  <elementProp name="endTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1489248000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">endTime</stringProp>
                  </elementProp>
                  <elementProp name="metric" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">job_sum</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">metric</stringProp>
                  </elementProp>
                  <elementProp name="sparkType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">sparkType</stringProp>
                  </elementProp>
                  <elementProp name="chartName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">spark_metrics_spline</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">chartName</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/spark/detail/chart</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="312838033">{&quot;code&quot;:0,&quot;msg&quot;:&quot;success&quot;,&quot;data&quot;:{&quot;subtitle&quot;:null,&quot;title&quot;:&quot;job_sum指标项时间趋势图&quot;,&quot;start_time&quot;:1488729600,&quot;end_time&quot;:1489248000,&quot;y_unit&quot;:&quot;&quot;,&quot;unit&quot;:&quot;3600&quot;,&quot;chart_type&quot;:null,&quot;chart_name&quot;:null,&quot;datas&quot;:[{&quot;name&quot;:&quot;appuser&quot;,&quot;values&quot;:[361.0,360.0,363.0,587.0,361.0,362.0,361.0,360.0,364.0,361.0,362.0,361.0,361.0,353.0,367.0,361.0,361.0,361.0,356.0,362.0,364.0,361.0,359.0,363.0,361.0,361.0,361.0,551.0,360.0,362.0,361.0,363.0,362.0,360.0,355.0,367.0,362.0,364.0,361.0,361.0,347.0,373.0,364.0,359.0,363.0,362.0,362.0,361.0,361.0,362.0,361.0,502.0,361.0,360.0,364.0,362.0,361.0,357.0,313.0,413.0,361.0,361.0,361.0,361.0,359.0,362.0,361.0,360.0,361.0,362.0,361.0,361.0,362.0,363.0,360.0,509.0,351.0,371.0,360.0,363.0,361.0,362.0,359.0,361.0,344.0,350.0,345.0,327.0,357.0,357.0,309.0,373.0,372.0,361.0,364.0,353.0,368.0,363.0,348.0,485.0,361.0,361.0,359.0,364.0,362.0,358.0,307.0,387.0,361.0,385.0,332.0,355.0,380.0,368.0,382.0,360.0,361.0,359.0,363.0,361.0,361.0,361.0,351.0,466.0,361.0,342.0,382.0,361.0,362.0,360.0,361.0,361.0,362.0,361.0,360.0,363.0,362.0,361.0,361.0,361.0,361.0,362.0,361.0,361.0],&quot;times&quot;:[1488733200,1488736800,1488740400,1488744000,1488747600,1488751200,1488754800,1488758400,1488762000,1488765600,1488769200,1488772800,1488776400,1488780000,1488783600,1488787200,1488790800,1488794400,1488798000,1488801600,1488805200,1488808800,1488812400,1488816000,1488819600,1488823200,1488826800,1488830400,1488834000,1488837600,1488841200,1488844800,1488848400,1488852000,1488855600,1488859200,1488862800,1488866400,1488870000,1488873600,1488877200,1488880800,1488884400,1488888000,1488891600,1488895200,1488898800,1488902400,1488906000,1488909600,1488913200,1488916800,1488920400,1488924000,1488927600,1488931200,1488934800,1488938400,1488942000,1488945600,1488949200,1488952800,1488956400,1488960000,1488963600,1488967200,1488970800,1488974400,1488978000,1488981600,1488985200,1488988800,1488992400,1488996000,1488999600,1489003200,1489006800,1489010400,1489014000,1489017600,1489021200,1489024800,1489028400,1489032000,1489035600,1489039200,1489042800,1489046400,1489050000,1489053600,1489057200,1489060800,1489064400,1489068000,1489071600,1489075200,1489078800,1489082400,1489086000,1489089600,1489093200,1489096800,1489100400,1489104000,1489107600,1489111200,1489114800,1489118400,1489122000,1489125600,1489129200,1489132800,1489136400,1489140000,1489143600,1489147200,1489150800,1489154400,1489158000,1489161600,1489165200,1489168800,1489172400,1489176000,1489179600,1489183200,1489186800,1489190400,1489194000,1489197600,1489201200,1489204800,1489208400,1489212000,1489215600,1489219200,1489222800,1489226400,1489230000,1489233600,1489237200,1489240800,1489244400,1489248000],&quot;y_unit&quot;:null}]}}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Spark_Job_Stage_Sum_Index_tends_20170306_20170312" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="startTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1488729600</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">startTime</stringProp>
                  </elementProp>
                  <elementProp name="endTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1489248000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">endTime</stringProp>
                  </elementProp>
                  <elementProp name="metric" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">stage_sum</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">metric</stringProp>
                  </elementProp>
                  <elementProp name="sparkType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">sparkType</stringProp>
                  </elementProp>
                  <elementProp name="chartName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">spark_metrics_spline</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">chartName</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/spark/detail/chart</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-513963977">{&quot;code&quot;:0,&quot;msg&quot;:&quot;success&quot;,&quot;data&quot;:{&quot;subtitle&quot;:null,&quot;title&quot;:&quot;stage_sum指标项时间趋势图&quot;,&quot;start_time&quot;:1488729600,&quot;end_time&quot;:1489248000,&quot;y_unit&quot;:&quot;&quot;,&quot;unit&quot;:&quot;3600&quot;,&quot;chart_type&quot;:null,&quot;chart_name&quot;:null,&quot;datas&quot;:[{&quot;name&quot;:&quot;appuser&quot;,&quot;values&quot;:[722.0,715.0,726.0,1032.0,722.0,722.0,720.0,715.0,727.0,720.0,720.0,722.0,722.0,702.0,734.0,722.0,722.0,722.0,714.0,721.0,727.0,722.0,716.0,728.0,722.0,722.0,720.0,982.0,720.0,722.0,720.0,728.0,721.0,715.0,706.0,736.0,721.0,727.0,722.0,722.0,688.0,748.0,727.0,716.0,728.0,721.0,721.0,722.0,722.0,721.0,715.0,920.0,720.0,715.0,728.0,721.0,720.0,712.0,620.0,834.0,722.0,720.0,722.0,722.0,716.0,726.0,720.0,720.0,722.0,721.0,722.0,722.0,722.0,721.0,715.0,925.0,698.0,746.0,716.0,726.0,722.0,720.0,716.0,722.0,679.0,694.0,686.0,641.0,710.0,714.0,598.0,750.0,748.0,720.0,727.0,702.0,735.0,728.0,686.0,902.0,720.0,720.0,714.0,727.0,721.0,711.0,594.0,782.0,722.0,776.0,651.0,706.0,763.0,735.0,769.0,715.0,722.0,718.0,728.0,722.0,722.0,720.0,696.0,872.0,722.0,675.0,767.0,722.0,720.0,718.0,720.0,722.0,721.0,722.0,715.0,728.0,722.0,722.0,722.0,722.0,722.0,721.0,722.0,722.0],&quot;times&quot;:[1488733200,1488736800,1488740400,1488744000,1488747600,1488751200,1488754800,1488758400,1488762000,1488765600,1488769200,1488772800,1488776400,1488780000,1488783600,1488787200,1488790800,1488794400,1488798000,1488801600,1488805200,1488808800,1488812400,1488816000,1488819600,1488823200,1488826800,1488830400,1488834000,1488837600,1488841200,1488844800,1488848400,1488852000,1488855600,1488859200,1488862800,1488866400,1488870000,1488873600,1488877200,1488880800,1488884400,1488888000,1488891600,1488895200,1488898800,1488902400,1488906000,1488909600,1488913200,1488916800,1488920400,1488924000,1488927600,1488931200,1488934800,1488938400,1488942000,1488945600,1488949200,1488952800,1488956400,1488960000,1488963600,1488967200,1488970800,1488974400,1488978000,1488981600,1488985200,1488988800,1488992400,1488996000,1488999600,1489003200,1489006800,1489010400,1489014000,1489017600,1489021200,1489024800,1489028400,1489032000,1489035600,1489039200,1489042800,1489046400,1489050000,1489053600,1489057200,1489060800,1489064400,1489068000,1489071600,1489075200,1489078800,1489082400,1489086000,1489089600,1489093200,1489096800,1489100400,1489104000,1489107600,1489111200,1489114800,1489118400,1489122000,1489125600,1489129200,1489132800,1489136400,1489140000,1489143600,1489147200,1489150800,1489154400,1489158000,1489161600,1489165200,1489168800,1489172400,1489176000,1489179600,1489183200,1489186800,1489190400,1489194000,1489197600,1489201200,1489204800,1489208400,1489212000,1489215600,1489219200,1489222800,1489226400,1489230000,1489233600,1489237200,1489240800,1489244400,1489248000],&quot;y_unit&quot;:null}]}}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Spark_Job_Task_Sum_Index_tends_20170306_20170312" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="startTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1488729600</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">startTime</stringProp>
                  </elementProp>
                  <elementProp name="endTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1489248000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">endTime</stringProp>
                  </elementProp>
                  <elementProp name="metric" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">task_sum</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">metric</stringProp>
                  </elementProp>
                  <elementProp name="sparkType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">sparkType</stringProp>
                  </elementProp>
                  <elementProp name="chartName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">spark_metrics_spline</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">chartName</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/spark/detail/chart</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1208109620">{&quot;code&quot;:0,&quot;msg&quot;:&quot;success&quot;,&quot;data&quot;:{&quot;subtitle&quot;:null,&quot;title&quot;:&quot;task_sum指标项时间趋势图&quot;,&quot;start_time&quot;:1488729600,&quot;end_time&quot;:1489248000,&quot;y_unit&quot;:&quot;&quot;,&quot;unit&quot;:&quot;3600&quot;,&quot;chart_type&quot;:null,&quot;chart_name&quot;:null,&quot;datas&quot;:[{&quot;name&quot;:&quot;appuser&quot;,&quot;values&quot;:[55280.0,54159.0,55972.0,58091.0,55166.0,55734.0,55188.0,54358.0,56250.0,55618.0,55022.0,54974.0,55412.0,52652.0,58235.0,56552.0,55332.0,55286.0,55339.0,55150.0,56296.0,55024.0,53902.0,56386.0,55934.0,55892.0,55437.0,57257.0,55627.0,56002.0,55872.0,56618.0,55158.0,54646.0,53246.0,57650.0,55516.0,56138.0,55924.0,55170.0,50540.0,58306.0,56036.0,54204.0,56926.0,55448.0,55168.0,54772.0,54878.0,54936.0,54474.0,58426.0,54620.0,54402.0,56754.0,54524.0,54550.0,53768.0,49520.0,62650.0,55148.0,55186.0,55916.0,55140.0,53802.0,56009.0,54552.0,54884.0,54908.0,54622.0,54684.0,54722.0,54944.0,55346.0,54206.0,57941.0,52384.0,58510.0,55220.0,56272.0,55288.0,54668.0,54168.0,55422.0,49886.0,54754.0,52176.0,45301.0,53850.0,54930.0,39894.0,57062.0,56697.0,52914.0,54496.0,50648.0,54966.0,54298.0,49416.0,58707.0,53048.0,53994.0,53108.0,54412.0,53174.0,52926.0,38483.0,60948.0,54266.0,60208.0,45908.0,51465.0,59064.0,55650.0,58990.0,52138.0,54212.0,53290.0,54226.0,52652.0,52766.0,52519.0,50964.0,57273.0,53276.0,49092.0,57722.0,53066.0,52906.0,52673.0,52873.0,52812.0,52564.0,53380.0,52341.0,54034.0,52804.0,52634.0,53440.0,53396.0,52812.0,52670.0,52582.0,52656.0],&quot;times&quot;:[1488733200,1488736800,1488740400,1488744000,1488747600,1488751200,1488754800,1488758400,1488762000,1488765600,1488769200,1488772800,1488776400,1488780000,1488783600,1488787200,1488790800,1488794400,1488798000,1488801600,1488805200,1488808800,1488812400,1488816000,1488819600,1488823200,1488826800,1488830400,1488834000,1488837600,1488841200,1488844800,1488848400,1488852000,1488855600,1488859200,1488862800,1488866400,1488870000,1488873600,1488877200,1488880800,1488884400,1488888000,1488891600,1488895200,1488898800,1488902400,1488906000,1488909600,1488913200,1488916800,1488920400,1488924000,1488927600,1488931200,1488934800,1488938400,1488942000,1488945600,1488949200,1488952800,1488956400,1488960000,1488963600,1488967200,1488970800,1488974400,1488978000,1488981600,1488985200,1488988800,1488992400,1488996000,1488999600,1489003200,1489006800,1489010400,1489014000,1489017600,1489021200,1489024800,1489028400,1489032000,1489035600,1489039200,1489042800,1489046400,1489050000,1489053600,1489057200,1489060800,1489064400,1489068000,1489071600,1489075200,1489078800,1489082400,1489086000,1489089600,1489093200,1489096800,1489100400,1489104000,1489107600,1489111200,1489114800,1489118400,1489122000,1489125600,1489129200,1489132800,1489136400,1489140000,1489143600,1489147200,1489150800,1489154400,1489158000,1489161600,1489165200,1489168800,1489172400,1489176000,1489179600,1489183200,1489186800,1489190400,1489194000,1489197600,1489201200,1489204800,1489208400,1489212000,1489215600,1489219200,1489222800,1489226400,1489230000,1489233600,1489237200,1489240800,1489244400,1489248000],&quot;y_unit&quot;:null}]}}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Spark_Job_App_Sum_And_App_Total_Time_20170306_20170312" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="startTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1488729600</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">startTime</stringProp>
                  </elementProp>
                  <elementProp name="endTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1489248000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">endTime</stringProp>
                  </elementProp>
                  <elementProp name="metricType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">app_sum-app_total_time</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">metricType</stringProp>
                  </elementProp>
                  <elementProp name="sparkType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">sparkType</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/spark/chart</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="236660173">{&quot;code&quot;:0,&quot;msg&quot;:&quot;success&quot;,&quot;data&quot;:{&quot;subtitle&quot;:&quot;app_sum app_total_time&quot;,&quot;title&quot;:&quot;App总数和App总时间&quot;,&quot;start_time&quot;:1488729600,&quot;end_time&quot;:1489248000,&quot;y_unit&quot;:null,&quot;unit&quot;:&quot;3600&quot;,&quot;chart_type&quot;:&quot;spline&quot;,&quot;chart_name&quot;:null,&quot;datas&quot;:[{&quot;name&quot;:&quot;App总数&quot;,&quot;values&quot;:[&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;12&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;12&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;12&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;],&quot;times&quot;:[1488733200,1488736800,1488740400,1488744000,1488747600,1488751200,1488754800,1488758400,1488762000,1488765600,1488769200,1488772800,1488776400,1488780000,1488783600,1488787200,1488790800,1488794400,1488798000,1488801600,1488805200,1488808800,1488812400,1488816000,1488819600,1488823200,1488826800,1488830400,1488834000,1488837600,1488841200,1488844800,1488848400,1488852000,1488855600,1488859200,1488862800,1488866400,1488870000,1488873600,1488877200,1488880800,1488884400,1488888000,1488891600,1488895200,1488898800,1488902400,1488906000,1488909600,1488913200,1488916800,1488920400,1488924000,1488927600,1488931200,1488934800,1488938400,1488942000,1488945600,1488949200,1488952800,1488956400,1488960000,1488963600,1488967200,1488970800,1488974400,1488978000,1488981600,1488985200,1488988800,1488992400,1488996000,1488999600,1489003200,1489006800,1489010400,1489014000,1489017600,1489021200,1489024800,1489028400,1489032000,1489035600,1489039200,1489042800,1489046400,1489050000,1489053600,1489057200,1489060800,1489064400,1489068000,1489071600,1489075200,1489078800,1489082400,1489086000,1489089600,1489093200,1489096800,1489100400,1489104000,1489107600,1489111200,1489114800,1489118400,1489122000,1489125600,1489129200,1489132800,1489136400,1489140000,1489143600,1489147200,1489150800,1489154400,1489158000,1489161600,1489165200,1489168800,1489172400,1489176000,1489179600,1489183200,1489186800,1489190400,1489194000,1489197600,1489201200,1489204800,1489208400,1489212000,1489215600,1489219200,1489222800,1489226400,1489230000,1489233600,1489237200,1489240800,1489244400,1489248000],&quot;y_unit&quot;:&quot;App总数&quot;},{&quot;name&quot;:&quot;App总时间&quot;,&quot;values&quot;:[&quot;1.44&quot;,&quot;1.98&quot;,&quot;2.74&quot;,&quot;2.57&quot;,&quot;2.97&quot;,&quot;2.90&quot;,&quot;3.26&quot;,&quot;2.77&quot;,&quot;2.39&quot;,&quot;2.33&quot;,&quot;1.35&quot;,&quot;1.12&quot;,&quot;1.77&quot;,&quot;2.18&quot;,&quot;2.29&quot;,&quot;3.23&quot;,&quot;2.90&quot;,&quot;2.37&quot;,&quot;3.23&quot;,&quot;1.67&quot;,&quot;1.46&quot;,&quot;1.01&quot;,&quot;1.13&quot;,&quot;1.18&quot;,&quot;1.45&quot;,&quot;1.81&quot;,&quot;2.90&quot;,&quot;3.14&quot;,&quot;3.92&quot;,&quot;3.27&quot;,&quot;3.50&quot;,&quot;2.86&quot;,&quot;2.21&quot;,&quot;2.91&quot;,&quot;2.92&quot;,&quot;3.28&quot;,&quot;2.82&quot;,&quot;1.97&quot;,&quot;2.64&quot;,&quot;1.77&quot;,&quot;2.22&quot;,&quot;2.76&quot;,&quot;2.75&quot;,&quot;3.05&quot;,&quot;2.30&quot;,&quot;2.04&quot;,&quot;1.54&quot;,&quot;1.04&quot;,&quot;1.51&quot;,&quot;2.02&quot;,&quot;3.10&quot;,&quot;2.99&quot;,&quot;2.39&quot;,&quot;2.42&quot;,&quot;3.33&quot;,&quot;2.15&quot;,&quot;2.05&quot;,&quot;3.09&quot;,&quot;4.36&quot;,&quot;4.44&quot;,&quot;2.19&quot;,&quot;1.69&quot;,&quot;2.37&quot;,&quot;2.45&quot;,&quot;2.01&quot;,&quot;1.99&quot;,&quot;1.94&quot;,&quot;1.15&quot;,&quot;1.66&quot;,&quot;1.88&quot;,&quot;1.50&quot;,&quot;1.28&quot;,&quot;1.68&quot;,&quot;2.26&quot;,&quot;2.68&quot;,&quot;3.29&quot;,&quot;2.35&quot;,&quot;3.08&quot;,&quot;3.09&quot;,&quot;2.92&quot;,&quot;2.52&quot;,&quot;3.21&quot;,&quot;3.07&quot;,&quot;3.01&quot;,&quot;3.25&quot;,&quot;3.27&quot;,&quot;3.56&quot;,&quot;3.51&quot;,&quot;3.51&quot;,&quot;3.63&quot;,&quot;3.18&quot;,&quot;3.32&quot;,&quot;2.58&quot;,&quot;2.90&quot;,&quot;2.84&quot;,&quot;2.69&quot;,&quot;2.87&quot;,&quot;2.56&quot;,&quot;3.59&quot;,&quot;3.06&quot;,&quot;2.81&quot;,&quot;3.15&quot;,&quot;3.64&quot;,&quot;3.39&quot;,&quot;2.14&quot;,&quot;3.70&quot;,&quot;3.56&quot;,&quot;4.13&quot;,&quot;3.37&quot;,&quot;3.33&quot;,&quot;3.87&quot;,&quot;3.53&quot;,&quot;3.76&quot;,&quot;3.68&quot;,&quot;2.60&quot;,&quot;1.86&quot;,&quot;2.40&quot;,&quot;2.55&quot;,&quot;1.86&quot;,&quot;0.84&quot;,&quot;1.35&quot;,&quot;2.15&quot;,&quot;3.50&quot;,&quot;3.24&quot;,&quot;2.90&quot;,&quot;2.67&quot;,&quot;3.83&quot;,&quot;2.89&quot;,&quot;2.91&quot;,&quot;2.22&quot;,&quot;1.70&quot;,&quot;0.99&quot;,&quot;1.45&quot;,&quot;1.09&quot;,&quot;1.39&quot;,&quot;1.50&quot;,&quot;1.05&quot;,&quot;0.89&quot;,&quot;1.23&quot;,&quot;0.95&quot;,&quot;0.76&quot;,&quot;0.95&quot;,&quot;0.81&quot;,&quot;0.62&quot;],&quot;times&quot;:[1488733200,1488736800,1488740400,1488744000,1488747600,1488751200,1488754800,1488758400,1488762000,1488765600,1488769200,1488772800,1488776400,1488780000,1488783600,1488787200,1488790800,1488794400,1488798000,1488801600,1488805200,1488808800,1488812400,1488816000,1488819600,1488823200,1488826800,1488830400,1488834000,1488837600,1488841200,1488844800,1488848400,1488852000,1488855600,1488859200,1488862800,1488866400,1488870000,1488873600,1488877200,1488880800,1488884400,1488888000,1488891600,1488895200,1488898800,1488902400,1488906000,1488909600,1488913200,1488916800,1488920400,1488924000,1488927600,1488931200,1488934800,1488938400,1488942000,1488945600,1488949200,1488952800,1488956400,1488960000,1488963600,1488967200,1488970800,1488974400,1488978000,1488981600,1488985200,1488988800,1488992400,1488996000,1488999600,1489003200,1489006800,1489010400,1489014000,1489017600,1489021200,1489024800,1489028400,1489032000,1489035600,1489039200,1489042800,1489046400,1489050000,1489053600,1489057200,1489060800,1489064400,1489068000,1489071600,1489075200,1489078800,1489082400,1489086000,1489089600,1489093200,1489096800,1489100400,1489104000,1489107600,1489111200,1489114800,1489118400,1489122000,1489125600,1489129200,1489132800,1489136400,1489140000,1489143600,1489147200,1489150800,1489154400,1489158000,1489161600,1489165200,1489168800,1489172400,1489176000,1489179600,1489183200,1489186800,1489190400,1489194000,1489197600,1489201200,1489204800,1489208400,1489212000,1489215600,1489219200,1489222800,1489226400,1489230000,1489233600,1489237200,1489240800,1489244400,1489248000],&quot;y_unit&quot;:&quot;App总时间h&quot;}],&quot;tableData&quot;:[[&quot;appuser&quot;,153,&quot;0.10&quot;]],&quot;tableHead&quot;:[&quot;name&quot;,&quot;app_sum&quot;,&quot;app_total_time&quot;]}}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Spark_Job_App_Sum_And_Bytes_Read_20170306_20170312" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="startTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1488729600</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">startTime</stringProp>
                  </elementProp>
                  <elementProp name="endTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1489248000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">endTime</stringProp>
                  </elementProp>
                  <elementProp name="metricType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">app_sum-bytes_read</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">metricType</stringProp>
                  </elementProp>
                  <elementProp name="sparkType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">sparkType</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/spark/chart</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1035487595">{&quot;code&quot;:0,&quot;msg&quot;:&quot;success&quot;,&quot;data&quot;:{&quot;subtitle&quot;:&quot;app_sum bytes_read&quot;,&quot;title&quot;:&quot;App总数和读字节数&quot;,&quot;start_time&quot;:1488729600,&quot;end_time&quot;:1489248000,&quot;y_unit&quot;:null,&quot;unit&quot;:&quot;3600&quot;,&quot;chart_type&quot;:&quot;spline&quot;,&quot;chart_name&quot;:null,&quot;datas&quot;:[{&quot;name&quot;:&quot;App总数&quot;,&quot;values&quot;:[&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;12&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;12&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;12&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;],&quot;times&quot;:[1488733200,1488736800,1488740400,1488744000,1488747600,1488751200,1488754800,1488758400,1488762000,1488765600,1488769200,1488772800,1488776400,1488780000,1488783600,1488787200,1488790800,1488794400,1488798000,1488801600,1488805200,1488808800,1488812400,1488816000,1488819600,1488823200,1488826800,1488830400,1488834000,1488837600,1488841200,1488844800,1488848400,1488852000,1488855600,1488859200,1488862800,1488866400,1488870000,1488873600,1488877200,1488880800,1488884400,1488888000,1488891600,1488895200,1488898800,1488902400,1488906000,1488909600,1488913200,1488916800,1488920400,1488924000,1488927600,1488931200,1488934800,1488938400,1488942000,1488945600,1488949200,1488952800,1488956400,1488960000,1488963600,1488967200,1488970800,1488974400,1488978000,1488981600,1488985200,1488988800,1488992400,1488996000,1488999600,1489003200,1489006800,1489010400,1489014000,1489017600,1489021200,1489024800,1489028400,1489032000,1489035600,1489039200,1489042800,1489046400,1489050000,1489053600,1489057200,1489060800,1489064400,1489068000,1489071600,1489075200,1489078800,1489082400,1489086000,1489089600,1489093200,1489096800,1489100400,1489104000,1489107600,1489111200,1489114800,1489118400,1489122000,1489125600,1489129200,1489132800,1489136400,1489140000,1489143600,1489147200,1489150800,1489154400,1489158000,1489161600,1489165200,1489168800,1489172400,1489176000,1489179600,1489183200,1489186800,1489190400,1489194000,1489197600,1489201200,1489204800,1489208400,1489212000,1489215600,1489219200,1489222800,1489226400,1489230000,1489233600,1489237200,1489240800,1489244400,1489248000],&quot;y_unit&quot;:&quot;App总数&quot;},{&quot;name&quot;:&quot;读字节数&quot;,&quot;values&quot;:[&quot;0.45&quot;,&quot;0.64&quot;,&quot;0.73&quot;,&quot;0.72&quot;,&quot;0.74&quot;,&quot;0.69&quot;,&quot;0.83&quot;,&quot;0.74&quot;,&quot;0.64&quot;,&quot;0.64&quot;,&quot;0.41&quot;,&quot;0.35&quot;,&quot;0.54&quot;,&quot;0.63&quot;,&quot;0.58&quot;,&quot;0.84&quot;,&quot;0.82&quot;,&quot;0.74&quot;,&quot;0.96&quot;,&quot;0.51&quot;,&quot;0.44&quot;,&quot;0.35&quot;,&quot;0.38&quot;,&quot;0.34&quot;,&quot;0.43&quot;,&quot;0.55&quot;,&quot;0.82&quot;,&quot;0.89&quot;,&quot;0.93&quot;,&quot;0.75&quot;,&quot;0.82&quot;,&quot;0.80&quot;,&quot;0.65&quot;,&quot;0.80&quot;,&quot;0.88&quot;,&quot;0.84&quot;,&quot;0.82&quot;,&quot;0.60&quot;,&quot;0.78&quot;,&quot;0.54&quot;,&quot;0.68&quot;,&quot;0.76&quot;,&quot;0.72&quot;,&quot;0.90&quot;,&quot;0.64&quot;,&quot;0.59&quot;,&quot;0.45&quot;,&quot;0.31&quot;,&quot;0.49&quot;,&quot;0.64&quot;,&quot;0.89&quot;,&quot;0.83&quot;,&quot;0.64&quot;,&quot;0.68&quot;,&quot;0.82&quot;,&quot;0.67&quot;,&quot;0.64&quot;,&quot;0.93&quot;,&quot;0.99&quot;,&quot;0.89&quot;,&quot;0.71&quot;,&quot;0.50&quot;,&quot;0.61&quot;,&quot;0.76&quot;,&quot;0.67&quot;,&quot;0.65&quot;,&quot;0.64&quot;,&quot;0.38&quot;,&quot;0.53&quot;,&quot;0.58&quot;,&quot;0.53&quot;,&quot;0.47&quot;,&quot;0.56&quot;,&quot;0.68&quot;,&quot;0.82&quot;,&quot;0.90&quot;,&quot;0.69&quot;,&quot;0.70&quot;,&quot;0.87&quot;,&quot;0.73&quot;,&quot;0.67&quot;,&quot;0.93&quot;,&quot;0.86&quot;,&quot;0.95&quot;,&quot;0.97&quot;,&quot;0.79&quot;,&quot;0.95&quot;,&quot;0.99&quot;,&quot;0.96&quot;,&quot;0.95&quot;,&quot;0.79&quot;,&quot;0.93&quot;,&quot;0.75&quot;,&quot;0.88&quot;,&quot;0.80&quot;,&quot;0.82&quot;,&quot;0.81&quot;,&quot;0.71&quot;,&quot;0.89&quot;,&quot;0.83&quot;,&quot;0.71&quot;,&quot;0.65&quot;,&quot;0.90&quot;,&quot;0.85&quot;,&quot;0.62&quot;,&quot;0.86&quot;,&quot;0.82&quot;,&quot;0.97&quot;,&quot;0.85&quot;,&quot;0.91&quot;,&quot;0.79&quot;,&quot;0.96&quot;,&quot;0.84&quot;,&quot;0.86&quot;,&quot;0.78&quot;,&quot;0.54&quot;,&quot;0.59&quot;,&quot;0.71&quot;,&quot;0.48&quot;,&quot;0.29&quot;,&quot;0.42&quot;,&quot;0.64&quot;,&quot;0.80&quot;,&quot;0.80&quot;,&quot;0.67&quot;,&quot;0.60&quot;,&quot;0.82&quot;,&quot;0.77&quot;,&quot;0.73&quot;,&quot;0.65&quot;,&quot;0.49&quot;,&quot;0.29&quot;,&quot;0.42&quot;,&quot;0.29&quot;,&quot;0.37&quot;,&quot;0.41&quot;,&quot;0.33&quot;,&quot;0.28&quot;,&quot;0.34&quot;,&quot;0.25&quot;,&quot;0.25&quot;,&quot;0.30&quot;,&quot;0.27&quot;,&quot;0.23&quot;],&quot;times&quot;:[1488733200,1488736800,1488740400,1488744000,1488747600,1488751200,1488754800,1488758400,1488762000,1488765600,1488769200,1488772800,1488776400,1488780000,1488783600,1488787200,1488790800,1488794400,1488798000,1488801600,1488805200,1488808800,1488812400,1488816000,1488819600,1488823200,1488826800,1488830400,1488834000,1488837600,1488841200,1488844800,1488848400,1488852000,1488855600,1488859200,1488862800,1488866400,1488870000,1488873600,1488877200,1488880800,1488884400,1488888000,1488891600,1488895200,1488898800,1488902400,1488906000,1488909600,1488913200,1488916800,1488920400,1488924000,1488927600,1488931200,1488934800,1488938400,1488942000,1488945600,1488949200,1488952800,1488956400,1488960000,1488963600,1488967200,1488970800,1488974400,1488978000,1488981600,1488985200,1488988800,1488992400,1488996000,1488999600,1489003200,1489006800,1489010400,1489014000,1489017600,1489021200,1489024800,1489028400,1489032000,1489035600,1489039200,1489042800,1489046400,1489050000,1489053600,1489057200,1489060800,1489064400,1489068000,1489071600,1489075200,1489078800,1489082400,1489086000,1489089600,1489093200,1489096800,1489100400,1489104000,1489107600,1489111200,1489114800,1489118400,1489122000,1489125600,1489129200,1489132800,1489136400,1489140000,1489143600,1489147200,1489150800,1489154400,1489158000,1489161600,1489165200,1489168800,1489172400,1489176000,1489179600,1489183200,1489186800,1489190400,1489194000,1489197600,1489201200,1489204800,1489208400,1489212000,1489215600,1489219200,1489222800,1489226400,1489230000,1489233600,1489237200,1489240800,1489244400,1489248000],&quot;y_unit&quot;:&quot;读字节数G&quot;}],&quot;tableData&quot;:[[&quot;appuser&quot;,153,&quot;0.00&quot;]],&quot;tableHead&quot;:[&quot;name&quot;,&quot;app_sum&quot;,&quot;bytes_read&quot;]}}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Spark_Job_App_Sum_And_Disk_Bytes_Spilled_Sum_20170306_20170312" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="startTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1488729600</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">startTime</stringProp>
                  </elementProp>
                  <elementProp name="endTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1489248000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">endTime</stringProp>
                  </elementProp>
                  <elementProp name="metricType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">app_sum-disk_bytes_spilled_sum</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">metricType</stringProp>
                  </elementProp>
                  <elementProp name="sparkType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">sparkType</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/spark/chart</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1788678734">{&quot;code&quot;:0,&quot;msg&quot;:&quot;success&quot;,&quot;data&quot;:{&quot;subtitle&quot;:&quot;app_sum disk_bytes_spilled_sum&quot;,&quot;title&quot;:&quot;App总数和磁盘溢写字节数&quot;,&quot;start_time&quot;:1488729600,&quot;end_time&quot;:1489248000,&quot;y_unit&quot;:null,&quot;unit&quot;:&quot;3600&quot;,&quot;chart_type&quot;:&quot;spline&quot;,&quot;chart_name&quot;:null,&quot;datas&quot;:[{&quot;name&quot;:&quot;App总数&quot;,&quot;values&quot;:[&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;12&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;12&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;12&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;],&quot;times&quot;:[1488733200,1488736800,1488740400,1488744000,1488747600,1488751200,1488754800,1488758400,1488762000,1488765600,1488769200,1488772800,1488776400,1488780000,1488783600,1488787200,1488790800,1488794400,1488798000,1488801600,1488805200,1488808800,1488812400,1488816000,1488819600,1488823200,1488826800,1488830400,1488834000,1488837600,1488841200,1488844800,1488848400,1488852000,1488855600,1488859200,1488862800,1488866400,1488870000,1488873600,1488877200,1488880800,1488884400,1488888000,1488891600,1488895200,1488898800,1488902400,1488906000,1488909600,1488913200,1488916800,1488920400,1488924000,1488927600,1488931200,1488934800,1488938400,1488942000,1488945600,1488949200,1488952800,1488956400,1488960000,1488963600,1488967200,1488970800,1488974400,1488978000,1488981600,1488985200,1488988800,1488992400,1488996000,1488999600,1489003200,1489006800,1489010400,1489014000,1489017600,1489021200,1489024800,1489028400,1489032000,1489035600,1489039200,1489042800,1489046400,1489050000,1489053600,1489057200,1489060800,1489064400,1489068000,1489071600,1489075200,1489078800,1489082400,1489086000,1489089600,1489093200,1489096800,1489100400,1489104000,1489107600,1489111200,1489114800,1489118400,1489122000,1489125600,1489129200,1489132800,1489136400,1489140000,1489143600,1489147200,1489150800,1489154400,1489158000,1489161600,1489165200,1489168800,1489172400,1489176000,1489179600,1489183200,1489186800,1489190400,1489194000,1489197600,1489201200,1489204800,1489208400,1489212000,1489215600,1489219200,1489222800,1489226400,1489230000,1489233600,1489237200,1489240800,1489244400,1489248000],&quot;y_unit&quot;:&quot;App总数&quot;},{&quot;name&quot;:&quot;磁盘溢写字节数&quot;,&quot;values&quot;:[&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;],&quot;times&quot;:[1488733200,1488736800,1488740400,1488744000,1488747600,1488751200,1488754800,1488758400,1488762000,1488765600,1488769200,1488772800,1488776400,1488780000,1488783600,1488787200,1488790800,1488794400,1488798000,1488801600,1488805200,1488808800,1488812400,1488816000,1488819600,1488823200,1488826800,1488830400,1488834000,1488837600,1488841200,1488844800,1488848400,1488852000,1488855600,1488859200,1488862800,1488866400,1488870000,1488873600,1488877200,1488880800,1488884400,1488888000,1488891600,1488895200,1488898800,1488902400,1488906000,1488909600,1488913200,1488916800,1488920400,1488924000,1488927600,1488931200,1488934800,1488938400,1488942000,1488945600,1488949200,1488952800,1488956400,1488960000,1488963600,1488967200,1488970800,1488974400,1488978000,1488981600,1488985200,1488988800,1488992400,1488996000,1488999600,1489003200,1489006800,1489010400,1489014000,1489017600,1489021200,1489024800,1489028400,1489032000,1489035600,1489039200,1489042800,1489046400,1489050000,1489053600,1489057200,1489060800,1489064400,1489068000,1489071600,1489075200,1489078800,1489082400,1489086000,1489089600,1489093200,1489096800,1489100400,1489104000,1489107600,1489111200,1489114800,1489118400,1489122000,1489125600,1489129200,1489132800,1489136400,1489140000,1489143600,1489147200,1489150800,1489154400,1489158000,1489161600,1489165200,1489168800,1489172400,1489176000,1489179600,1489183200,1489186800,1489190400,1489194000,1489197600,1489201200,1489204800,1489208400,1489212000,1489215600,1489219200,1489222800,1489226400,1489230000,1489233600,1489237200,1489240800,1489244400,1489248000],&quot;y_unit&quot;:&quot;磁盘溢写字节数G&quot;}],&quot;tableData&quot;:[[&quot;appuser&quot;,153,&quot;0.00&quot;]],&quot;tableHead&quot;:[&quot;name&quot;,&quot;app_sum&quot;,&quot;disk_bytes_spilled_sum&quot;]}}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Spark_Job_App_Sum_Jvm_GC_Sum_20170306_20170312" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="startTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1488729600</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">startTime</stringProp>
                  </elementProp>
                  <elementProp name="endTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1489248000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">endTime</stringProp>
                  </elementProp>
                  <elementProp name="metricType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">app_sum-jvm_gc_time_sum</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">metricType</stringProp>
                  </elementProp>
                  <elementProp name="sparkType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">sparkType</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/spark/chart</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="11863290">{&quot;code&quot;:0,&quot;msg&quot;:&quot;success&quot;,&quot;data&quot;:{&quot;subtitle&quot;:&quot;app_sum jvm_gc_time_sum&quot;,&quot;title&quot;:&quot;App总数和GC总时间&quot;,&quot;start_time&quot;:1488729600,&quot;end_time&quot;:1489248000,&quot;y_unit&quot;:null,&quot;unit&quot;:&quot;3600&quot;,&quot;chart_type&quot;:&quot;spline&quot;,&quot;chart_name&quot;:null,&quot;datas&quot;:[{&quot;name&quot;:&quot;App总数&quot;,&quot;values&quot;:[&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;12&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;12&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;12&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;],&quot;times&quot;:[1488733200,1488736800,1488740400,1488744000,1488747600,1488751200,1488754800,1488758400,1488762000,1488765600,1488769200,1488772800,1488776400,1488780000,1488783600,1488787200,1488790800,1488794400,1488798000,1488801600,1488805200,1488808800,1488812400,1488816000,1488819600,1488823200,1488826800,1488830400,1488834000,1488837600,1488841200,1488844800,1488848400,1488852000,1488855600,1488859200,1488862800,1488866400,1488870000,1488873600,1488877200,1488880800,1488884400,1488888000,1488891600,1488895200,1488898800,1488902400,1488906000,1488909600,1488913200,1488916800,1488920400,1488924000,1488927600,1488931200,1488934800,1488938400,1488942000,1488945600,1488949200,1488952800,1488956400,1488960000,1488963600,1488967200,1488970800,1488974400,1488978000,1488981600,1488985200,1488988800,1488992400,1488996000,1488999600,1489003200,1489006800,1489010400,1489014000,1489017600,1489021200,1489024800,1489028400,1489032000,1489035600,1489039200,1489042800,1489046400,1489050000,1489053600,1489057200,1489060800,1489064400,1489068000,1489071600,1489075200,1489078800,1489082400,1489086000,1489089600,1489093200,1489096800,1489100400,1489104000,1489107600,1489111200,1489114800,1489118400,1489122000,1489125600,1489129200,1489132800,1489136400,1489140000,1489143600,1489147200,1489150800,1489154400,1489158000,1489161600,1489165200,1489168800,1489172400,1489176000,1489179600,1489183200,1489186800,1489190400,1489194000,1489197600,1489201200,1489204800,1489208400,1489212000,1489215600,1489219200,1489222800,1489226400,1489230000,1489233600,1489237200,1489240800,1489244400,1489248000],&quot;y_unit&quot;:&quot;App总数&quot;},{&quot;name&quot;:&quot;GC总时间&quot;,&quot;values&quot;:[&quot;0.01&quot;,&quot;0.03&quot;,&quot;0.02&quot;,&quot;0.03&quot;,&quot;0.01&quot;,&quot;0.02&quot;,&quot;0.12&quot;,&quot;0.04&quot;,&quot;0.01&quot;,&quot;0.02&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.03&quot;,&quot;0.03&quot;,&quot;0.02&quot;,&quot;0.02&quot;,&quot;0.02&quot;,&quot;0.02&quot;,&quot;0.03&quot;,&quot;0.03&quot;,&quot;0.09&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.03&quot;,&quot;0.02&quot;,&quot;0.02&quot;,&quot;0.02&quot;,&quot;0.02&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.02&quot;,&quot;0.02&quot;,&quot;0.02&quot;,&quot;0.03&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.04&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.03&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.02&quot;,&quot;0.01&quot;,&quot;0.02&quot;,&quot;0.02&quot;,&quot;0.07&quot;,&quot;0.17&quot;,&quot;0.03&quot;,&quot;0.01&quot;,&quot;0.02&quot;,&quot;0.02&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.02&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.02&quot;,&quot;0.01&quot;,&quot;0.02&quot;,&quot;0.02&quot;,&quot;0.02&quot;,&quot;0.03&quot;,&quot;0.02&quot;,&quot;0.02&quot;,&quot;0.02&quot;,&quot;0.03&quot;,&quot;0.02&quot;,&quot;0.02&quot;,&quot;0.01&quot;,&quot;0.02&quot;,&quot;0.02&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.02&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.02&quot;,&quot;0.02&quot;,&quot;0.02&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.01&quot;,&quot;0.00&quot;],&quot;times&quot;:[1488733200,1488736800,1488740400,1488744000,1488747600,1488751200,1488754800,1488758400,1488762000,1488765600,1488769200,1488772800,1488776400,1488780000,1488783600,1488787200,1488790800,1488794400,1488798000,1488801600,1488805200,1488808800,1488812400,1488816000,1488819600,1488823200,1488826800,1488830400,1488834000,1488837600,1488841200,1488844800,1488848400,1488852000,1488855600,1488859200,1488862800,1488866400,1488870000,1488873600,1488877200,1488880800,1488884400,1488888000,1488891600,1488895200,1488898800,1488902400,1488906000,1488909600,1488913200,1488916800,1488920400,1488924000,1488927600,1488931200,1488934800,1488938400,1488942000,1488945600,1488949200,1488952800,1488956400,1488960000,1488963600,1488967200,1488970800,1488974400,1488978000,1488981600,1488985200,1488988800,1488992400,1488996000,1488999600,1489003200,1489006800,1489010400,1489014000,1489017600,1489021200,1489024800,1489028400,1489032000,1489035600,1489039200,1489042800,1489046400,1489050000,1489053600,1489057200,1489060800,1489064400,1489068000,1489071600,1489075200,1489078800,1489082400,1489086000,1489089600,1489093200,1489096800,1489100400,1489104000,1489107600,1489111200,1489114800,1489118400,1489122000,1489125600,1489129200,1489132800,1489136400,1489140000,1489143600,1489147200,1489150800,1489154400,1489158000,1489161600,1489165200,1489168800,1489172400,1489176000,1489179600,1489183200,1489186800,1489190400,1489194000,1489197600,1489201200,1489204800,1489208400,1489212000,1489215600,1489219200,1489222800,1489226400,1489230000,1489233600,1489237200,1489240800,1489244400,1489248000],&quot;y_unit&quot;:&quot;GC总时间h&quot;}],&quot;tableData&quot;:[[&quot;appuser&quot;,153,&quot;0.00&quot;]],&quot;tableHead&quot;:[&quot;name&quot;,&quot;app_sum&quot;,&quot;jvm_gc_time_sum&quot;]}}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Spark_Job_App_Sum_Memory_Bytes_20170306_20170312" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="startTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1488729600</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">startTime</stringProp>
                  </elementProp>
                  <elementProp name="endTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1489248000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">endTime</stringProp>
                  </elementProp>
                  <elementProp name="metricType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">app_sum-memory_bytes_spilled_sum</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">metricType</stringProp>
                  </elementProp>
                  <elementProp name="sparkType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">sparkType</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/spark/chart</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-577276570">{&quot;code&quot;:0,&quot;msg&quot;:&quot;success&quot;,&quot;data&quot;:{&quot;subtitle&quot;:&quot;app_sum memory_bytes_spilled_sum&quot;,&quot;title&quot;:&quot;App总数和内存溢写字节数&quot;,&quot;start_time&quot;:1488729600,&quot;end_time&quot;:1489248000,&quot;y_unit&quot;:null,&quot;unit&quot;:&quot;3600&quot;,&quot;chart_type&quot;:&quot;spline&quot;,&quot;chart_name&quot;:null,&quot;datas&quot;:[{&quot;name&quot;:&quot;App总数&quot;,&quot;values&quot;:[&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;12&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;12&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;12&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;],&quot;times&quot;:[1488733200,1488736800,1488740400,1488744000,1488747600,1488751200,1488754800,1488758400,1488762000,1488765600,1488769200,1488772800,1488776400,1488780000,1488783600,1488787200,1488790800,1488794400,1488798000,1488801600,1488805200,1488808800,1488812400,1488816000,1488819600,1488823200,1488826800,1488830400,1488834000,1488837600,1488841200,1488844800,1488848400,1488852000,1488855600,1488859200,1488862800,1488866400,1488870000,1488873600,1488877200,1488880800,1488884400,1488888000,1488891600,1488895200,1488898800,1488902400,1488906000,1488909600,1488913200,1488916800,1488920400,1488924000,1488927600,1488931200,1488934800,1488938400,1488942000,1488945600,1488949200,1488952800,1488956400,1488960000,1488963600,1488967200,1488970800,1488974400,1488978000,1488981600,1488985200,1488988800,1488992400,1488996000,1488999600,1489003200,1489006800,1489010400,1489014000,1489017600,1489021200,1489024800,1489028400,1489032000,1489035600,1489039200,1489042800,1489046400,1489050000,1489053600,1489057200,1489060800,1489064400,1489068000,1489071600,1489075200,1489078800,1489082400,1489086000,1489089600,1489093200,1489096800,1489100400,1489104000,1489107600,1489111200,1489114800,1489118400,1489122000,1489125600,1489129200,1489132800,1489136400,1489140000,1489143600,1489147200,1489150800,1489154400,1489158000,1489161600,1489165200,1489168800,1489172400,1489176000,1489179600,1489183200,1489186800,1489190400,1489194000,1489197600,1489201200,1489204800,1489208400,1489212000,1489215600,1489219200,1489222800,1489226400,1489230000,1489233600,1489237200,1489240800,1489244400,1489248000],&quot;y_unit&quot;:&quot;App总数&quot;},{&quot;name&quot;:&quot;内存溢写字节数&quot;,&quot;values&quot;:[&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;,&quot;0.00&quot;],&quot;times&quot;:[1488733200,1488736800,1488740400,1488744000,1488747600,1488751200,1488754800,1488758400,1488762000,1488765600,1488769200,1488772800,1488776400,1488780000,1488783600,1488787200,1488790800,1488794400,1488798000,1488801600,1488805200,1488808800,1488812400,1488816000,1488819600,1488823200,1488826800,1488830400,1488834000,1488837600,1488841200,1488844800,1488848400,1488852000,1488855600,1488859200,1488862800,1488866400,1488870000,1488873600,1488877200,1488880800,1488884400,1488888000,1488891600,1488895200,1488898800,1488902400,1488906000,1488909600,1488913200,1488916800,1488920400,1488924000,1488927600,1488931200,1488934800,1488938400,1488942000,1488945600,1488949200,1488952800,1488956400,1488960000,1488963600,1488967200,1488970800,1488974400,1488978000,1488981600,1488985200,1488988800,1488992400,1488996000,1488999600,1489003200,1489006800,1489010400,1489014000,1489017600,1489021200,1489024800,1489028400,1489032000,1489035600,1489039200,1489042800,1489046400,1489050000,1489053600,1489057200,1489060800,1489064400,1489068000,1489071600,1489075200,1489078800,1489082400,1489086000,1489089600,1489093200,1489096800,1489100400,1489104000,1489107600,1489111200,1489114800,1489118400,1489122000,1489125600,1489129200,1489132800,1489136400,1489140000,1489143600,1489147200,1489150800,1489154400,1489158000,1489161600,1489165200,1489168800,1489172400,1489176000,1489179600,1489183200,1489186800,1489190400,1489194000,1489197600,1489201200,1489204800,1489208400,1489212000,1489215600,1489219200,1489222800,1489226400,1489230000,1489233600,1489237200,1489240800,1489244400,1489248000],&quot;y_unit&quot;:&quot;内存溢写字节数G&quot;}],&quot;tableData&quot;:[[&quot;appuser&quot;,153,&quot;0.00&quot;]],&quot;tableHead&quot;:[&quot;name&quot;,&quot;app_sum&quot;,&quot;memory_bytes_spilled_sum&quot;]}}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Spark_Job_App_Sum_Schedual_Delay_20170306_20170312" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="startTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1488729600</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">startTime</stringProp>
                  </elementProp>
                  <elementProp name="endTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1489248000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">endTime</stringProp>
                  </elementProp>
                  <elementProp name="metricType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">app_sum-scheduler_delay_sum</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">metricType</stringProp>
                  </elementProp>
                  <elementProp name="sparkType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">sparkType</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/spark/chart</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1861078015">{&quot;code&quot;:0,&quot;msg&quot;:&quot;success&quot;,&quot;data&quot;:{&quot;subtitle&quot;:&quot;app_sum scheduler_delay_sum&quot;,&quot;title&quot;:&quot;App总数和调度延迟总时间&quot;,&quot;start_time&quot;:1488729600,&quot;end_time&quot;:1489248000,&quot;y_unit&quot;:null,&quot;unit&quot;:&quot;3600&quot;,&quot;chart_type&quot;:&quot;spline&quot;,&quot;chart_name&quot;:null,&quot;datas&quot;:[{&quot;name&quot;:&quot;App总数&quot;,&quot;values&quot;:[&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;12&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;12&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;12&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;],&quot;times&quot;:[1488733200,1488736800,1488740400,1488744000,1488747600,1488751200,1488754800,1488758400,1488762000,1488765600,1488769200,1488772800,1488776400,1488780000,1488783600,1488787200,1488790800,1488794400,1488798000,1488801600,1488805200,1488808800,1488812400,1488816000,1488819600,1488823200,1488826800,1488830400,1488834000,1488837600,1488841200,1488844800,1488848400,1488852000,1488855600,1488859200,1488862800,1488866400,1488870000,1488873600,1488877200,1488880800,1488884400,1488888000,1488891600,1488895200,1488898800,1488902400,1488906000,1488909600,1488913200,1488916800,1488920400,1488924000,1488927600,1488931200,1488934800,1488938400,1488942000,1488945600,1488949200,1488952800,1488956400,1488960000,1488963600,1488967200,1488970800,1488974400,1488978000,1488981600,1488985200,1488988800,1488992400,1488996000,1488999600,1489003200,1489006800,1489010400,1489014000,1489017600,1489021200,1489024800,1489028400,1489032000,1489035600,1489039200,1489042800,1489046400,1489050000,1489053600,1489057200,1489060800,1489064400,1489068000,1489071600,1489075200,1489078800,1489082400,1489086000,1489089600,1489093200,1489096800,1489100400,1489104000,1489107600,1489111200,1489114800,1489118400,1489122000,1489125600,1489129200,1489132800,1489136400,1489140000,1489143600,1489147200,1489150800,1489154400,1489158000,1489161600,1489165200,1489168800,1489172400,1489176000,1489179600,1489183200,1489186800,1489190400,1489194000,1489197600,1489201200,1489204800,1489208400,1489212000,1489215600,1489219200,1489222800,1489226400,1489230000,1489233600,1489237200,1489240800,1489244400,1489248000],&quot;y_unit&quot;:&quot;App总数&quot;},{&quot;name&quot;:&quot;调度延迟总时间&quot;,&quot;values&quot;:[&quot;0.69&quot;,&quot;0.08&quot;,&quot;0.10&quot;,&quot;0.10&quot;,&quot;0.09&quot;,&quot;0.11&quot;,&quot;0.10&quot;,&quot;0.10&quot;,&quot;0.43&quot;,&quot;0.11&quot;,&quot;0.10&quot;,&quot;0.08&quot;,&quot;0.08&quot;,&quot;0.12&quot;,&quot;0.10&quot;,&quot;0.09&quot;,&quot;0.08&quot;,&quot;0.09&quot;,&quot;0.08&quot;,&quot;0.08&quot;,&quot;0.10&quot;,&quot;0.08&quot;,&quot;0.07&quot;,&quot;0.79&quot;,&quot;0.08&quot;,&quot;0.08&quot;,&quot;0.12&quot;,&quot;2.24&quot;,&quot;2.82&quot;,&quot;0.10&quot;,&quot;0.10&quot;,&quot;0.09&quot;,&quot;0.09&quot;,&quot;0.09&quot;,&quot;0.08&quot;,&quot;0.09&quot;,&quot;0.09&quot;,&quot;0.09&quot;,&quot;0.09&quot;,&quot;0.10&quot;,&quot;0.08&quot;,&quot;1.24&quot;,&quot;0.10&quot;,&quot;0.08&quot;,&quot;0.10&quot;,&quot;0.10&quot;,&quot;0.08&quot;,&quot;0.07&quot;,&quot;0.08&quot;,&quot;0.08&quot;,&quot;0.11&quot;,&quot;0.12&quot;,&quot;0.08&quot;,&quot;0.10&quot;,&quot;0.16&quot;,&quot;0.08&quot;,&quot;0.08&quot;,&quot;0.07&quot;,&quot;0.06&quot;,&quot;6.53&quot;,&quot;0.07&quot;,&quot;0.09&quot;,&quot;0.08&quot;,&quot;0.09&quot;,&quot;0.07&quot;,&quot;0.08&quot;,&quot;0.07&quot;,&quot;0.07&quot;,&quot;0.07&quot;,&quot;5.37&quot;,&quot;0.07&quot;,&quot;0.07&quot;,&quot;0.07&quot;,&quot;0.07&quot;,&quot;0.07&quot;,&quot;0.09&quot;,&quot;0.07&quot;,&quot;0.10&quot;,&quot;0.10&quot;,&quot;0.11&quot;,&quot;0.08&quot;,&quot;0.09&quot;,&quot;0.09&quot;,&quot;0.08&quot;,&quot;0.13&quot;,&quot;0.09&quot;,&quot;0.10&quot;,&quot;11.10&quot;,&quot;3.73&quot;,&quot;0.11&quot;,&quot;0.11&quot;,&quot;0.10&quot;,&quot;0.11&quot;,&quot;0.08&quot;,&quot;0.09&quot;,&quot;0.27&quot;,&quot;0.09&quot;,&quot;0.09&quot;,&quot;0.12&quot;,&quot;0.10&quot;,&quot;0.11&quot;,&quot;0.12&quot;,&quot;0.12&quot;,&quot;0.09&quot;,&quot;0.08&quot;,&quot;0.20&quot;,&quot;0.07&quot;,&quot;0.15&quot;,&quot;0.11&quot;,&quot;0.11&quot;,&quot;0.10&quot;,&quot;0.09&quot;,&quot;0.17&quot;,&quot;0.69&quot;,&quot;0.08&quot;,&quot;0.13&quot;,&quot;0.10&quot;,&quot;0.10&quot;,&quot;0.08&quot;,&quot;0.07&quot;,&quot;0.08&quot;,&quot;0.07&quot;,&quot;0.10&quot;,&quot;0.10&quot;,&quot;0.09&quot;,&quot;0.10&quot;,&quot;0.10&quot;,&quot;0.09&quot;,&quot;0.09&quot;,&quot;0.08&quot;,&quot;0.09&quot;,&quot;0.14&quot;,&quot;0.08&quot;,&quot;0.10&quot;,&quot;0.09&quot;,&quot;0.08&quot;,&quot;0.08&quot;,&quot;0.08&quot;,&quot;0.09&quot;,&quot;0.09&quot;,&quot;0.07&quot;,&quot;0.42&quot;,&quot;0.11&quot;,&quot;0.07&quot;],&quot;times&quot;:[1488733200,1488736800,1488740400,1488744000,1488747600,1488751200,1488754800,1488758400,1488762000,1488765600,1488769200,1488772800,1488776400,1488780000,1488783600,1488787200,1488790800,1488794400,1488798000,1488801600,1488805200,1488808800,1488812400,1488816000,1488819600,1488823200,1488826800,1488830400,1488834000,1488837600,1488841200,1488844800,1488848400,1488852000,1488855600,1488859200,1488862800,1488866400,1488870000,1488873600,1488877200,1488880800,1488884400,1488888000,1488891600,1488895200,1488898800,1488902400,1488906000,1488909600,1488913200,1488916800,1488920400,1488924000,1488927600,1488931200,1488934800,1488938400,1488942000,1488945600,1488949200,1488952800,1488956400,1488960000,1488963600,1488967200,1488970800,1488974400,1488978000,1488981600,1488985200,1488988800,1488992400,1488996000,1488999600,1489003200,1489006800,1489010400,1489014000,1489017600,1489021200,1489024800,1489028400,1489032000,1489035600,1489039200,1489042800,1489046400,1489050000,1489053600,1489057200,1489060800,1489064400,1489068000,1489071600,1489075200,1489078800,1489082400,1489086000,1489089600,1489093200,1489096800,1489100400,1489104000,1489107600,1489111200,1489114800,1489118400,1489122000,1489125600,1489129200,1489132800,1489136400,1489140000,1489143600,1489147200,1489150800,1489154400,1489158000,1489161600,1489165200,1489168800,1489172400,1489176000,1489179600,1489183200,1489186800,1489190400,1489194000,1489197600,1489201200,1489204800,1489208400,1489212000,1489215600,1489219200,1489222800,1489226400,1489230000,1489233600,1489237200,1489240800,1489244400,1489248000],&quot;y_unit&quot;:&quot;调度延迟总时间h&quot;}],&quot;tableData&quot;:[[&quot;appuser&quot;,153,&quot;0.00&quot;]],&quot;tableHead&quot;:[&quot;name&quot;,&quot;app_sum&quot;,&quot;scheduler_delay_sum&quot;]}}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Spark_Job_App_Sum_Spark_Executor_Mem_20170306_20170312" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="startTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1488729600</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">startTime</stringProp>
                  </elementProp>
                  <elementProp name="endTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1489248000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">endTime</stringProp>
                  </elementProp>
                  <elementProp name="metricType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">app_sum-spark_executor_memory</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">metricType</stringProp>
                  </elementProp>
                  <elementProp name="sparkType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">sparkType</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/spark/chart</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-853360648">{&quot;code&quot;:0,&quot;msg&quot;:&quot;success&quot;,&quot;data&quot;:{&quot;subtitle&quot;:&quot;app_sum spark_executor_memory&quot;,&quot;title&quot;:&quot;App总数和App总内存&quot;,&quot;start_time&quot;:1488729600,&quot;end_time&quot;:1489248000,&quot;y_unit&quot;:null,&quot;unit&quot;:&quot;3600&quot;,&quot;chart_type&quot;:&quot;spline&quot;,&quot;chart_name&quot;:null,&quot;datas&quot;:[{&quot;name&quot;:&quot;App总数&quot;,&quot;values&quot;:[&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;12&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;12&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;12&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;11&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;,&quot;10&quot;],&quot;times&quot;:[1488733200,1488736800,1488740400,1488744000,1488747600,1488751200,1488754800,1488758400,1488762000,1488765600,1488769200,1488772800,1488776400,1488780000,1488783600,1488787200,1488790800,1488794400,1488798000,1488801600,1488805200,1488808800,1488812400,1488816000,1488819600,1488823200,1488826800,1488830400,1488834000,1488837600,1488841200,1488844800,1488848400,1488852000,1488855600,1488859200,1488862800,1488866400,1488870000,1488873600,1488877200,1488880800,1488884400,1488888000,1488891600,1488895200,1488898800,1488902400,1488906000,1488909600,1488913200,1488916800,1488920400,1488924000,1488927600,1488931200,1488934800,1488938400,1488942000,1488945600,1488949200,1488952800,1488956400,1488960000,1488963600,1488967200,1488970800,1488974400,1488978000,1488981600,1488985200,1488988800,1488992400,1488996000,1488999600,1489003200,1489006800,1489010400,1489014000,1489017600,1489021200,1489024800,1489028400,1489032000,1489035600,1489039200,1489042800,1489046400,1489050000,1489053600,1489057200,1489060800,1489064400,1489068000,1489071600,1489075200,1489078800,1489082400,1489086000,1489089600,1489093200,1489096800,1489100400,1489104000,1489107600,1489111200,1489114800,1489118400,1489122000,1489125600,1489129200,1489132800,1489136400,1489140000,1489143600,1489147200,1489150800,1489154400,1489158000,1489161600,1489165200,1489168800,1489172400,1489176000,1489179600,1489183200,1489186800,1489190400,1489194000,1489197600,1489201200,1489204800,1489208400,1489212000,1489215600,1489219200,1489222800,1489226400,1489230000,1489233600,1489237200,1489240800,1489244400,1489248000],&quot;y_unit&quot;:&quot;App总数&quot;},{&quot;name&quot;:&quot;App总内存&quot;,&quot;values&quot;:[&quot;100&quot;,&quot;70&quot;,&quot;100&quot;,&quot;300&quot;,&quot;100&quot;,&quot;100&quot;,&quot;100&quot;,&quot;100&quot;,&quot;100&quot;,&quot;100&quot;,&quot;100&quot;,&quot;100&quot;,&quot;100&quot;,&quot;100&quot;,&quot;100&quot;,&quot;90&quot;,&quot;100&quot;,&quot;100&quot;,&quot;120&quot;,&quot;128&quot;,&quot;126&quot;,&quot;118&quot;,&quot;118&quot;,&quot;178&quot;,&quot;134&quot;,&quot;126&quot;,&quot;110&quot;,&quot;310&quot;,&quot;100&quot;,&quot;136&quot;,&quot;126&quot;,&quot;118&quot;,&quot;118&quot;,&quot;118&quot;,&quot;118&quot;,&quot;116&quot;,&quot;134&quot;,&quot;214&quot;,&quot;182&quot;,&quot;174&quot;,&quot;174&quot;,&quot;174&quot;,&quot;174&quot;,&quot;174&quot;,&quot;238&quot;,&quot;174&quot;,&quot;110&quot;,&quot;110&quot;,&quot;110&quot;,&quot;100&quot;,&quot;110&quot;,&quot;320&quot;,&quot;110&quot;,&quot;110&quot;,&quot;100&quot;,&quot;110&quot;,&quot;110&quot;,&quot;100&quot;,&quot;110&quot;,&quot;110&quot;,&quot;158&quot;,&quot;158&quot;,&quot;158&quot;,&quot;158&quot;,&quot;158&quot;,&quot;138&quot;,&quot;158&quot;,&quot;110&quot;,&quot;110&quot;,&quot;110&quot;,&quot;110&quot;,&quot;110&quot;,&quot;100&quot;,&quot;100&quot;,&quot;110&quot;,&quot;310&quot;,&quot;100&quot;,&quot;110&quot;,&quot;110&quot;,&quot;110&quot;,&quot;110&quot;,&quot;100&quot;,&quot;100&quot;,&quot;110&quot;,&quot;110&quot;,&quot;110&quot;,&quot;158&quot;,&quot;238&quot;,&quot;230&quot;,&quot;110&quot;,&quot;206&quot;,&quot;206&quot;,&quot;158&quot;,&quot;158&quot;,&quot;138&quot;,&quot;158&quot;,&quot;158&quot;,&quot;138&quot;,&quot;158&quot;,&quot;358&quot;,&quot;158&quot;,&quot;158&quot;,&quot;158&quot;,&quot;158&quot;,&quot;158&quot;,&quot;148&quot;,&quot;158&quot;,&quot;110&quot;,&quot;90&quot;,&quot;100&quot;,&quot;110&quot;,&quot;100&quot;,&quot;110&quot;,&quot;90&quot;,&quot;110&quot;,&quot;110&quot;,&quot;110&quot;,&quot;230&quot;,&quot;180&quot;,&quot;110&quot;,&quot;110&quot;,&quot;110&quot;,&quot;110&quot;,&quot;310&quot;,&quot;110&quot;,&quot;110&quot;,&quot;98&quot;,&quot;118&quot;,&quot;110&quot;,&quot;110&quot;,&quot;126&quot;,&quot;126&quot;,&quot;126&quot;,&quot;126&quot;,&quot;186&quot;,&quot;126&quot;,&quot;106&quot;,&quot;126&quot;,&quot;126&quot;,&quot;126&quot;,&quot;110&quot;,&quot;100&quot;,&quot;110&quot;,&quot;110&quot;],&quot;times&quot;:[1488733200,1488736800,1488740400,1488744000,1488747600,1488751200,1488754800,1488758400,1488762000,1488765600,1488769200,1488772800,1488776400,1488780000,1488783600,1488787200,1488790800,1488794400,1488798000,1488801600,1488805200,1488808800,1488812400,1488816000,1488819600,1488823200,1488826800,1488830400,1488834000,1488837600,1488841200,1488844800,1488848400,1488852000,1488855600,1488859200,1488862800,1488866400,1488870000,1488873600,1488877200,1488880800,1488884400,1488888000,1488891600,1488895200,1488898800,1488902400,1488906000,1488909600,1488913200,1488916800,1488920400,1488924000,1488927600,1488931200,1488934800,1488938400,1488942000,1488945600,1488949200,1488952800,1488956400,1488960000,1488963600,1488967200,1488970800,1488974400,1488978000,1488981600,1488985200,1488988800,1488992400,1488996000,1488999600,1489003200,1489006800,1489010400,1489014000,1489017600,1489021200,1489024800,1489028400,1489032000,1489035600,1489039200,1489042800,1489046400,1489050000,1489053600,1489057200,1489060800,1489064400,1489068000,1489071600,1489075200,1489078800,1489082400,1489086000,1489089600,1489093200,1489096800,1489100400,1489104000,1489107600,1489111200,1489114800,1489118400,1489122000,1489125600,1489129200,1489132800,1489136400,1489140000,1489143600,1489147200,1489150800,1489154400,1489158000,1489161600,1489165200,1489168800,1489172400,1489176000,1489179600,1489183200,1489186800,1489190400,1489194000,1489197600,1489201200,1489204800,1489208400,1489212000,1489215600,1489219200,1489222800,1489226400,1489230000,1489233600,1489237200,1489240800,1489244400,1489248000],&quot;y_unit&quot;:&quot;App总内存G&quot;}],&quot;tableData&quot;:[[&quot;appuser&quot;,153,&quot;19490&quot;]],&quot;tableHead&quot;:[&quot;name&quot;,&quot;app_sum&quot;,&quot;spark_executor_memory&quot;]}}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Spark_Job_Task_Sum_Task_Failed_20170306_20170312" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="startTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1488729600</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">startTime</stringProp>
                  </elementProp>
                  <elementProp name="endTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1489248000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">endTime</stringProp>
                  </elementProp>
                  <elementProp name="metricType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">task_sum-task_failure_num</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">metricType</stringProp>
                  </elementProp>
                  <elementProp name="sparkType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">sparkType</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/spark/chart</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1677247245">{&quot;code&quot;:0,&quot;msg&quot;:&quot;success&quot;,&quot;data&quot;:{&quot;subtitle&quot;:&quot;task_sum task_failure_num&quot;,&quot;title&quot;:&quot;Task总数和Task失败数&quot;,&quot;start_time&quot;:1488729600,&quot;end_time&quot;:1489248000,&quot;y_unit&quot;:null,&quot;unit&quot;:&quot;3600&quot;,&quot;chart_type&quot;:&quot;spline&quot;,&quot;chart_name&quot;:null,&quot;datas&quot;:[{&quot;name&quot;:&quot;Task总数&quot;,&quot;values&quot;:[&quot;55280&quot;,&quot;54159&quot;,&quot;55972&quot;,&quot;58091&quot;,&quot;55166&quot;,&quot;55734&quot;,&quot;55188&quot;,&quot;54358&quot;,&quot;56250&quot;,&quot;55618&quot;,&quot;55022&quot;,&quot;54974&quot;,&quot;55412&quot;,&quot;52652&quot;,&quot;58235&quot;,&quot;56552&quot;,&quot;55332&quot;,&quot;55286&quot;,&quot;55339&quot;,&quot;55150&quot;,&quot;56296&quot;,&quot;55024&quot;,&quot;53902&quot;,&quot;56386&quot;,&quot;55934&quot;,&quot;55892&quot;,&quot;55437&quot;,&quot;57257&quot;,&quot;55627&quot;,&quot;56002&quot;,&quot;55872&quot;,&quot;56618&quot;,&quot;55158&quot;,&quot;54646&quot;,&quot;53246&quot;,&quot;57650&quot;,&quot;55516&quot;,&quot;56138&quot;,&quot;55924&quot;,&quot;55170&quot;,&quot;50540&quot;,&quot;58306&quot;,&quot;56036&quot;,&quot;54204&quot;,&quot;56926&quot;,&quot;55448&quot;,&quot;55168&quot;,&quot;54772&quot;,&quot;54878&quot;,&quot;54936&quot;,&quot;54474&quot;,&quot;58426&quot;,&quot;54620&quot;,&quot;54402&quot;,&quot;56754&quot;,&quot;54524&quot;,&quot;54550&quot;,&quot;53768&quot;,&quot;49520&quot;,&quot;62650&quot;,&quot;55148&quot;,&quot;55186&quot;,&quot;55916&quot;,&quot;55140&quot;,&quot;53802&quot;,&quot;56009&quot;,&quot;54552&quot;,&quot;54884&quot;,&quot;54908&quot;,&quot;54622&quot;,&quot;54684&quot;,&quot;54722&quot;,&quot;54944&quot;,&quot;55346&quot;,&quot;54206&quot;,&quot;57941&quot;,&quot;52384&quot;,&quot;58510&quot;,&quot;55220&quot;,&quot;56272&quot;,&quot;55288&quot;,&quot;54668&quot;,&quot;54168&quot;,&quot;55422&quot;,&quot;49886&quot;,&quot;54754&quot;,&quot;52176&quot;,&quot;45301&quot;,&quot;53850&quot;,&quot;54930&quot;,&quot;39894&quot;,&quot;57062&quot;,&quot;56697&quot;,&quot;52914&quot;,&quot;54496&quot;,&quot;50648&quot;,&quot;54966&quot;,&quot;54298&quot;,&quot;49416&quot;,&quot;58707&quot;,&quot;53048&quot;,&quot;53994&quot;,&quot;53108&quot;,&quot;54412&quot;,&quot;53174&quot;,&quot;52926&quot;,&quot;38483&quot;,&quot;60948&quot;,&quot;54266&quot;,&quot;60208&quot;,&quot;45908&quot;,&quot;51465&quot;,&quot;59064&quot;,&quot;55650&quot;,&quot;58990&quot;,&quot;52138&quot;,&quot;54212&quot;,&quot;53290&quot;,&quot;54226&quot;,&quot;52652&quot;,&quot;52766&quot;,&quot;52519&quot;,&quot;50964&quot;,&quot;57273&quot;,&quot;53276&quot;,&quot;49092&quot;,&quot;57722&quot;,&quot;53066&quot;,&quot;52906&quot;,&quot;52673&quot;,&quot;52873&quot;,&quot;52812&quot;,&quot;52564&quot;,&quot;53380&quot;,&quot;52341&quot;,&quot;54034&quot;,&quot;52804&quot;,&quot;52634&quot;,&quot;53440&quot;,&quot;53396&quot;,&quot;52812&quot;,&quot;52670&quot;,&quot;52582&quot;,&quot;52656&quot;],&quot;times&quot;:[1488733200,1488736800,1488740400,1488744000,1488747600,1488751200,1488754800,1488758400,1488762000,1488765600,1488769200,1488772800,1488776400,1488780000,1488783600,1488787200,1488790800,1488794400,1488798000,1488801600,1488805200,1488808800,1488812400,1488816000,1488819600,1488823200,1488826800,1488830400,1488834000,1488837600,1488841200,1488844800,1488848400,1488852000,1488855600,1488859200,1488862800,1488866400,1488870000,1488873600,1488877200,1488880800,1488884400,1488888000,1488891600,1488895200,1488898800,1488902400,1488906000,1488909600,1488913200,1488916800,1488920400,1488924000,1488927600,1488931200,1488934800,1488938400,1488942000,1488945600,1488949200,1488952800,1488956400,1488960000,1488963600,1488967200,1488970800,1488974400,1488978000,1488981600,1488985200,1488988800,1488992400,1488996000,1488999600,1489003200,1489006800,1489010400,1489014000,1489017600,1489021200,1489024800,1489028400,1489032000,1489035600,1489039200,1489042800,1489046400,1489050000,1489053600,1489057200,1489060800,1489064400,1489068000,1489071600,1489075200,1489078800,1489082400,1489086000,1489089600,1489093200,1489096800,1489100400,1489104000,1489107600,1489111200,1489114800,1489118400,1489122000,1489125600,1489129200,1489132800,1489136400,1489140000,1489143600,1489147200,1489150800,1489154400,1489158000,1489161600,1489165200,1489168800,1489172400,1489176000,1489179600,1489183200,1489186800,1489190400,1489194000,1489197600,1489201200,1489204800,1489208400,1489212000,1489215600,1489219200,1489222800,1489226400,1489230000,1489233600,1489237200,1489240800,1489244400,1489248000],&quot;y_unit&quot;:&quot;Task总数&quot;},{&quot;name&quot;:&quot;Task失败数&quot;,&quot;values&quot;:[&quot;513&quot;,&quot;464&quot;,&quot;518&quot;,&quot;580&quot;,&quot;498&quot;,&quot;826&quot;,&quot;624&quot;,&quot;647&quot;,&quot;577&quot;,&quot;967&quot;,&quot;632&quot;,&quot;300&quot;,&quot;532&quot;,&quot;513&quot;,&quot;1539&quot;,&quot;1174&quot;,&quot;449&quot;,&quot;363&quot;,&quot;521&quot;,&quot;537&quot;,&quot;578&quot;,&quot;319&quot;,&quot;283&quot;,&quot;601&quot;,&quot;876&quot;,&quot;1052&quot;,&quot;649&quot;,&quot;738&quot;,&quot;895&quot;,&quot;921&quot;,&quot;1134&quot;,&quot;683&quot;,&quot;564&quot;,&quot;799&quot;,&quot;459&quot;,&quot;861&quot;,&quot;743&quot;,&quot;453&quot;,&quot;996&quot;,&quot;394&quot;,&quot;377&quot;,&quot;550&quot;,&quot;565&quot;,&quot;497&quot;,&quot;735&quot;,&quot;767&quot;,&quot;625&quot;,&quot;248&quot;,&quot;321&quot;,&quot;461&quot;,&quot;690&quot;,&quot;662&quot;,&quot;412&quot;,&quot;741&quot;,&quot;757&quot;,&quot;127&quot;,&quot;263&quot;,&quot;369&quot;,&quot;440&quot;,&quot;724&quot;,&quot;365&quot;,&quot;555&quot;,&quot;923&quot;,&quot;389&quot;,&quot;158&quot;,&quot;499&quot;,&quot;346&quot;,&quot;399&quot;,&quot;299&quot;,&quot;221&quot;,&quot;187&quot;,&quot;204&quot;,&quot;359&quot;,&quot;813&quot;,&quot;609&quot;,&quot;629&quot;,&quot;404&quot;,&quot;932&quot;,&quot;1185&quot;,&quot;759&quot;,&quot;613&quot;,&quot;413&quot;,&quot;475&quot;,&quot;632&quot;,&quot;535&quot;,&quot;2370&quot;,&quot;1059&quot;,&quot;553&quot;,&quot;695&quot;,&quot;761&quot;,&quot;1395&quot;,&quot;715&quot;,&quot;543&quot;,&quot;344&quot;,&quot;726&quot;,&quot;315&quot;,&quot;608&quot;,&quot;431&quot;,&quot;809&quot;,&quot;442&quot;,&quot;579&quot;,&quot;1058&quot;,&quot;845&quot;,&quot;615&quot;,&quot;357&quot;,&quot;1091&quot;,&quot;953&quot;,&quot;708&quot;,&quot;995&quot;,&quot;754&quot;,&quot;1321&quot;,&quot;516&quot;,&quot;939&quot;,&quot;893&quot;,&quot;375&quot;,&quot;317&quot;,&quot;1035&quot;,&quot;424&quot;,&quot;607&quot;,&quot;123&quot;,&quot;253&quot;,&quot;320&quot;,&quot;1158&quot;,&quot;715&quot;,&quot;595&quot;,&quot;802&quot;,&quot;684&quot;,&quot;371&quot;,&quot;609&quot;,&quot;441&quot;,&quot;457&quot;,&quot;210&quot;,&quot;249&quot;,&quot;543&quot;,&quot;646&quot;,&quot;537&quot;,&quot;213&quot;,&quot;119&quot;,&quot;591&quot;,&quot;470&quot;,&quot;253&quot;,&quot;271&quot;,&quot;67&quot;,&quot;141&quot;],&quot;times&quot;:[1488733200,1488736800,1488740400,1488744000,1488747600,1488751200,1488754800,1488758400,1488762000,1488765600,1488769200,1488772800,1488776400,1488780000,1488783600,1488787200,1488790800,1488794400,1488798000,1488801600,1488805200,1488808800,1488812400,1488816000,1488819600,1488823200,1488826800,1488830400,1488834000,1488837600,1488841200,1488844800,1488848400,1488852000,1488855600,1488859200,1488862800,1488866400,1488870000,1488873600,1488877200,1488880800,1488884400,1488888000,1488891600,1488895200,1488898800,1488902400,1488906000,1488909600,1488913200,1488916800,1488920400,1488924000,1488927600,1488931200,1488934800,1488938400,1488942000,1488945600,1488949200,1488952800,1488956400,1488960000,1488963600,1488967200,1488970800,1488974400,1488978000,1488981600,1488985200,1488988800,1488992400,1488996000,1488999600,1489003200,1489006800,1489010400,1489014000,1489017600,1489021200,1489024800,1489028400,1489032000,1489035600,1489039200,1489042800,1489046400,1489050000,1489053600,1489057200,1489060800,1489064400,1489068000,1489071600,1489075200,1489078800,1489082400,1489086000,1489089600,1489093200,1489096800,1489100400,1489104000,1489107600,1489111200,1489114800,1489118400,1489122000,1489125600,1489129200,1489132800,1489136400,1489140000,1489143600,1489147200,1489150800,1489154400,1489158000,1489161600,1489165200,1489168800,1489172400,1489176000,1489179600,1489183200,1489186800,1489190400,1489194000,1489197600,1489201200,1489204800,1489208400,1489212000,1489215600,1489219200,1489222800,1489226400,1489230000,1489233600,1489237200,1489240800,1489244400,1489248000],&quot;y_unit&quot;:&quot;Task失败数&quot;}],&quot;tableData&quot;:[[&quot;appuser&quot;,&quot;86992&quot;,&quot;7837721&quot;]],&quot;tableHead&quot;:[&quot;name&quot;,&quot;task_sum&quot;,&quot;task_failure_num&quot;]}}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Spark_Job_ChartName_lastweek" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">spark</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/spark/chartnames</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="469356171">{&quot;code&quot;:0,&quot;msg&quot;:&quot;&quot;,&quot;data&quot;:[&quot;app_sum-app_total_time&quot;,&quot;app_sum-jvm_gc_time_sum&quot;,&quot;app_sum-spark_executor_memory&quot;,&quot;app_sum-memory_bytes_spilled_sum&quot;,&quot;app_sum-disk_bytes_spilled_sum&quot;,&quot;app_sum-bytes_read&quot;,&quot;task_sum-task_failure_num&quot;,&quot;app_sum-scheduler_delay_sum&quot;]}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Spark_Single_Job_Index_Top_10_20170306_20170312" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="top" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">10</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">top</stringProp>
                  </elementProp>
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">spark</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                  <elementProp name="jobName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">jobName</stringProp>
                  </elementProp>
                  <elementProp name="orderType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">asc</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">orderType</stringProp>
                  </elementProp>
                  <elementProp name="endTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1489248000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">endTime</stringProp>
                  </elementProp>
                  <elementProp name="metric" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">totalTime</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">metric</stringProp>
                  </elementProp>
                  <elementProp name="startTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1488729600</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">startTime</stringProp>
                  </elementProp>
                  <elementProp name="length" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">10</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">length</stringProp>
                  </elementProp>
                  <elementProp name="startIndex" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">startIndex</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/bigdata-web/api/job/single/top</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2015314722">{&quot;code&quot;:0,&quot;msg&quot;:&quot;get top data Success&quot;,&quot;data&quot;:{&quot;datas&quot;:[{&quot;count&quot;:null,&quot;jobId&quot;:&quot;application_1428668992862_19026222&quot;,&quot;cputime&quot;:&quot;28.01s&quot;,&quot;logUrl&quot;:&quot;http://portal.heracles.sohuno.com:18080/history/application_1428668992862_19026222/1&quot;,&quot;taskTotalCount&quot;:14,&quot;jobName&quot;:&quot;HourHdfsAuditAggregatePorecess&quot;,&quot;io&quot;:&quot;0&quot;,&quot;memory&quot;:&quot;0&quot;,&quot;totalTime&quot;:&quot;23.18s&quot;},{&quot;count&quot;:null,&quot;jobId&quot;:&quot;application_1428668992862_19023302&quot;,&quot;cputime&quot;:&quot;29.43s&quot;,&quot;logUrl&quot;:&quot;http://portal.heracles.sohuno.com:18080/history/application_1428668992862_19023302/1&quot;,&quot;taskTotalCount&quot;:14,&quot;jobName&quot;:&quot;HourHdfsAuditAggregatePorecess&quot;,&quot;io&quot;:&quot;0&quot;,&quot;memory&quot;:&quot;0&quot;,&quot;totalTime&quot;:&quot;24.9s&quot;},{&quot;count&quot;:null,&quot;jobId&quot;:&quot;application_1428668992862_18999242&quot;,&quot;cputime&quot;:&quot;32.22s&quot;,&quot;logUrl&quot;:&quot;http://portal.heracles.sohuno.com:18080/history/application_1428668992862_18999242/1&quot;,&quot;taskTotalCount&quot;:14,&quot;jobName&quot;:&quot;HourHdfsAuditAggregatePorecess&quot;,&quot;io&quot;:&quot;0&quot;,&quot;memory&quot;:&quot;0&quot;,&quot;totalTime&quot;:&quot;27.43s&quot;},{&quot;count&quot;:null,&quot;jobId&quot;:&quot;application_1428668992862_18908802&quot;,&quot;cputime&quot;:&quot;38.74s&quot;,&quot;logUrl&quot;:&quot;http://portal.heracles.sohuno.com:18080/history/application_1428668992862_18908802/1&quot;,&quot;taskTotalCount&quot;:14,&quot;jobName&quot;:&quot;HourHdfsAuditAggregatePorecess&quot;,&quot;io&quot;:&quot;0&quot;,&quot;memory&quot;:&quot;0.04Kb&quot;,&quot;totalTime&quot;:&quot;27.55s&quot;},{&quot;count&quot;:null,&quot;jobId&quot;:&quot;application_1428668992862_19015185&quot;,&quot;cputime&quot;:&quot;34.62s&quot;,&quot;logUrl&quot;:&quot;http://portal.heracles.sohuno.com:18080/history/application_1428668992862_19015185/1&quot;,&quot;taskTotalCount&quot;:14,&quot;jobName&quot;:&quot;HourHdfsAuditAggregatePorecess&quot;,&quot;io&quot;:&quot;0&quot;,&quot;memory&quot;:&quot;0&quot;,&quot;totalTime&quot;:&quot;27.97s&quot;},{&quot;count&quot;:null,&quot;jobId&quot;:&quot;application_1428668992862_18876220&quot;,&quot;cputime&quot;:&quot;34.26s&quot;,&quot;logUrl&quot;:&quot;http://portal.heracles.sohuno.com:18080/history/application_1428668992862_18876220/1&quot;,&quot;taskTotalCount&quot;:14,&quot;jobName&quot;:&quot;HourHdfsAuditAggregatePorecess&quot;,&quot;io&quot;:&quot;0&quot;,&quot;memory&quot;:&quot;0.04Kb&quot;,&quot;totalTime&quot;:&quot;28.07s&quot;},{&quot;count&quot;:null,&quot;jobId&quot;:&quot;application_1428668992862_19021349&quot;,&quot;cputime&quot;:&quot;44.64s&quot;,&quot;logUrl&quot;:&quot;http://portal.heracles.sohuno.com:18080/history/application_1428668992862_19021349/1&quot;,&quot;taskTotalCount&quot;:14,&quot;jobName&quot;:&quot;HourHdfsAuditAggregatePorecess&quot;,&quot;io&quot;:&quot;0&quot;,&quot;memory&quot;:&quot;0&quot;,&quot;totalTime&quot;:&quot;30.44s&quot;},{&quot;count&quot;:null,&quot;jobId&quot;:&quot;application_1428668992862_19025240&quot;,&quot;cputime&quot;:&quot;52.77s&quot;,&quot;logUrl&quot;:&quot;http://portal.heracles.sohuno.com:18080/history/application_1428668992862_19025240/1&quot;,&quot;taskTotalCount&quot;:14,&quot;jobName&quot;:&quot;HourHdfsAuditAggregatePorecess&quot;,&quot;io&quot;:&quot;0&quot;,&quot;memory&quot;:&quot;0&quot;,&quot;totalTime&quot;:&quot;30.98s&quot;},{&quot;count&quot;:null,&quot;jobId&quot;:&quot;application_1428668992862_18868382&quot;,&quot;cputime&quot;:&quot;44.45s&quot;,&quot;logUrl&quot;:&quot;http://portal.heracles.sohuno.com:18080/history/application_1428668992862_18868382/1&quot;,&quot;taskTotalCount&quot;:14,&quot;jobName&quot;:&quot;HourHdfsAuditAggregatePorecess&quot;,&quot;io&quot;:&quot;0&quot;,&quot;memory&quot;:&quot;0.04Kb&quot;,&quot;totalTime&quot;:&quot;31.03s&quot;},{&quot;count&quot;:null,&quot;jobId&quot;:&quot;application_1428668992862_18877297&quot;,&quot;cputime&quot;:&quot;32.69s&quot;,&quot;logUrl&quot;:&quot;http://portal.heracles.sohuno.com:18080/history/application_1428668992862_18877297/1&quot;,&quot;taskTotalCount&quot;:14,&quot;jobName&quot;:&quot;HourHdfsAuditAggregatePorecess&quot;,&quot;io&quot;:&quot;0&quot;,&quot;memory&quot;:&quot;0.04Kb&quot;,&quot;totalTime&quot;:&quot;31.05s&quot;}],&quot;totalCount&quot;:10,&quot;head&quot;:[{&quot;value&quot;:&quot;jobId&quot;,&quot;label&quot;:&quot;jobId&quot;},{&quot;value&quot;:&quot;jobName&quot;,&quot;label&quot;:&quot;作业名称&quot;},{&quot;value&quot;:&quot;totalTime&quot;,&quot;label&quot;:&quot;作业总时间&quot;},{&quot;value&quot;:&quot;taskTotalCount&quot;,&quot;label&quot;:&quot;Task总数&quot;},{&quot;value&quot;:&quot;cputime&quot;,&quot;label&quot;:&quot;CPU时间&quot;},{&quot;value&quot;:&quot;io&quot;,&quot;label&quot;:&quot;IO读写总数&quot;},{&quot;value&quot;:&quot;memory&quot;,&quot;label&quot;:&quot;内存&quot;}]}}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Spark_Single_Job_Index_Analytic_20170306_20170312" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">spark</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                  <elementProp name="jobName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">jobName</stringProp>
                  </elementProp>
                  <elementProp name="startIndex" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">startIndex</stringProp>
                  </elementProp>
                  <elementProp name="length" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">10</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">length</stringProp>
                  </elementProp>
                  <elementProp name="startTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1488729600</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">startTime</stringProp>
                  </elementProp>
                  <elementProp name="endTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1489248000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">endTime</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/bigdata-web/api/job/single/list</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1173498354">{&quot;code&quot;:0,&quot;msg&quot;:&quot;get top data Success&quot;,&quot;data&quot;:{&quot;datas&quot;:[{&quot;count&quot;:1,&quot;cputime&quot;:&quot;2.53&quot;,&quot;taskTotalCount&quot;:30234,&quot;jobName&quot;:&quot;hiveserverRealTimeLogProcess&quot;,&quot;io&quot;:&quot;0&quot;,&quot;memory&quot;:&quot;10&quot;,&quot;totalTime&quot;:&quot;167.98&quot;},{&quot;count&quot;:144,&quot;cputime&quot;:&quot;2.77&quot;,&quot;taskTotalCount&quot;:2011,&quot;jobName&quot;:&quot;HourHdfsAuditAggregatePorecess&quot;,&quot;io&quot;:&quot;0&quot;,&quot;memory&quot;:&quot;4250&quot;,&quot;totalTime&quot;:&quot;2.04&quot;},{&quot;count&quot;:6,&quot;cputime&quot;:&quot;0&quot;,&quot;taskTotalCount&quot;:61,&quot;jobName&quot;:&quot;kmeansLearnByFzh&quot;,&quot;io&quot;:&quot;0&quot;,&quot;memory&quot;:&quot;1000&quot;,&quot;totalTime&quot;:&quot;2.33&quot;}],&quot;totalCount&quot;:3}}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Job_Single_Analytics" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/job/single/list" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${top_data_type}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                  <elementProp name="jobName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">hdfs</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">jobName</stringProp>
                  </elementProp>
                  <elementProp name="startTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1489334400</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">startTime</stringProp>
                  </elementProp>
                  <elementProp name="endTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1489939200</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">endTime</stringProp>
                  </elementProp>
                  <elementProp name="startIndex" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">startIndex</stringProp>
                  </elementProp>
                  <elementProp name="length" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">10</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">length</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/bigdata-web/api/job/single/list</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/job/single/chart/metrics" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${top_data_type}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/bigdata-web/api/job/single/chart/metrics</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/job/single/chart" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${top_data_type}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                  <elementProp name="metric" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">totaltime</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">metric</stringProp>
                  </elementProp>
                  <elementProp name="userName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">userName</stringProp>
                  </elementProp>
                  <elementProp name="startTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${today_zero_sec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">startTime</stringProp>
                  </elementProp>
                  <elementProp name="endTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${now_sec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">endTime</stringProp>
                  </elementProp>
                  <elementProp name="jobName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">jobName</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/bigdata-web/api/job/single/chart</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/job/single/top" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${top_data_type}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                  </elementProp>
                  <elementProp name="userName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">userName</stringProp>
                  </elementProp>
                  <elementProp name="jobName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">jobName</stringProp>
                  </elementProp>
                  <elementProp name="top" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">10</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">top</stringProp>
                  </elementProp>
                  <elementProp name="orderType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">desc</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">orderType</stringProp>
                  </elementProp>
                  <elementProp name="metric" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">elapsedTime</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">metric</stringProp>
                  </elementProp>
                  <elementProp name="startIndex" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">startIndex</stringProp>
                  </elementProp>
                  <elementProp name="startTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${today_zero_sec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">startTime</stringProp>
                  </elementProp>
                  <elementProp name="endTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${now_sec}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">endTime</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/bigdata-web/api/job/single/top</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="67791721">&quot;code&quot;:0</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Statistic_Analytics_HBase" enabled="false"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="HBase_Overview" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Hbase_Storage_File_2017030600_2017031200" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="start_time" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1488729600</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">start_time</stringProp>
                  </elementProp>
                  <elementProp name="end_time" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1489248000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">end_time</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/hbase/index/countfile</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1593035432">{&quot;code&quot;:0,&quot;msg&quot;:&quot;success&quot;,&quot;data&quot;:{&quot;subtitle&quot;:null,&quot;title&quot;:&quot;HBase存储文件概览&quot;,&quot;start_time&quot;:1488729600,&quot;end_time&quot;:1489248000,&quot;y_unit&quot;:null,&quot;unit&quot;:null,&quot;chart_type&quot;:null,&quot;chart_name&quot;:null,&quot;datas&quot;:[{&quot;name&quot;:&quot;storeFile的数量&quot;,&quot;values&quot;:[13520.0,13952.0,13720.0,13598.0,13223.0,12926.0,13185.0],&quot;times&quot;:[1488729600,1488816000,1488902400,1488988800,1489075200,1489161600,1489248000],&quot;y_unit&quot;:&quot;storeFile的数量&quot;},{&quot;name&quot;:&quot;storeFile的大小&quot;,&quot;values&quot;:[15976.595,16075.45,16232.559,16378.98,16532.523,16684.758,16806.206],&quot;times&quot;:[1488729600,1488816000,1488902400,1488988800,1489075200,1489161600,1489248000],&quot;y_unit&quot;:&quot;storeFile的大小&quot;}]}}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="HBase_Details" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HBase_Detail_StoreFile_2017320" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="start_time" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1489939200</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">start_time</stringProp>
                  </elementProp>
                  <elementProp name="end_time" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1490025600</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">end_time</stringProp>
                  </elementProp>
                  <elementProp name="query_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">query_type</stringProp>
                  </elementProp>
                  <elementProp name="type_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">APP:aaa</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type_name</stringProp>
                  </elementProp>
                  <elementProp name="metrics" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">storeFileCount</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">metrics</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/hbase/metricData</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-764345331">{&quot;code&quot;:0,&quot;msg&quot;:&quot;success get data&quot;,&quot;data&quot;:{&quot;charts&quot;:[{&quot;subtitle&quot;:&quot;storeFileCount&quot;,&quot;title&quot;:&quot;storeFile的数量&quot;,&quot;start_time&quot;:1489939200,&quot;end_time&quot;:1490025600,&quot;y_unit&quot;:&quot;storeFile的数量&quot;,&quot;unit&quot;:&quot;300&quot;,&quot;chart_type&quot;:&quot;spline&quot;,&quot;chart_name&quot;:null,&quot;datas&quot;:[{&quot;name&quot;:&quot;APP_table_aaa&quot;,&quot;values&quot;:[2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0],&quot;times&quot;:[1489939260,1489939560,1489939860,1489940160,1489940460,1489940760,1489941060,1489941360,1489941660,1489941960,1489942260,1489942560,1489942860,1489943160,1489943460,1489943760,1489944060,1489944360,1489944660,1489944960,1489945260,1489945560,1489945860,1489946160,1489946460,1489946760,1489947060,1489947360,1489947660,1489947960,1489948260,1489948560,1489948860,1489949160,1489949460,1489949760,1489950060,1489950360,1489950660,1489950960,1489951260,1489951560,1489951860,1489952160,1489952460,1489952760,1489953060,1489953360,1489953660,1489953960,1489954260,1489954560,1489954860,1489955160,1489955460,1489955760,1489956060,1489956360,1489956660,1489956960,1489957260,1489957560,1489957860,1489958160,1489958460,1489958760,1489959060,1489959360,1489959660,1489959960,1489960260,1489960560,1489960860,1489961160,1489961460,1489961760,1489962060,1489962360,1489962660,1489962960,1489963260,1489963560,1489963860,1489964160,1489964460,1489964760,1489965060,1489965360,1489965660,1489965960,1489966260,1489966560,1489966860,1489967160,1489967460,1489967760,1489968060,1489968360,1489968660,1489968960,1489969260,1489969560,1489969860,1489970160,1489970460,1489970760,1489971060,1489971360,1489971660,1489971960,1489972260,1489972560,1489972860,1489973160,1489973460,1489973760,1489974060,1489974360,1489974660,1489974960,1489975260,1489975560,1489975860,1489976160,1489976460,1489976760,1489977060,1489977360,1489977660,1489977960,1489978260,1489978560,1489978860,1489979160,1489979460,1489979760,1489980060,1489980360,1489980660,1489980960,1489981260,1489981560,1489981860,1489982160,1489982460,1489982760,1489983060,1489983360,1489983660,1489983960,1489984260,1489984560,1489984860,1489985160,1489985460,1489985760,1489986060,1489986360,1489986660,1489986960,1489987260,1489987560,1489987860,1489988160,1489988460,1489988760,1489989060,1489989360,1489989660,1489989960,1489990260,1489990560,1489990860,1489991160,1489991460,1489991760,1489992060,1489992360,1489992660,1489992960,1489993260,1489993560,1489993860,1489994160,1489994460,1489994760,1489995060,1489995360,1489995660,1489995960,1489996260,1489996560,1489996860,1489997160,1489997460,1489997760,1489998060,1489998360,1489998660,1489998960,1489999260,1489999560,1489999860,1490000160,1490000460,1490000760,1490001060,1490001360,1490001660,1490001960,1490002260,1490002560,1490002860,1490003160,1490003460,1490003760,1490004060,1490004360,1490004660,1490004960,1490005260,1490005560,1490005860,1490006160,1490006460,1490006760,1490007060,1490007360,1490007660,1490007960,1490008260,1490008560,1490008860,1490009160,1490009460,1490009760,1490010060,1490010360,1490010660,1490010960,1490011260,1490011560,1490011860,1490012160,1490012460,1490012760,1490013060,1490013360,1490013660,1490013960,1490014260,1490014560,1490014860,1490015160,1490015460,1490015760,1490016060,1490016360,1490016660,1490016960,1490017260,1490017560,1490017860,1490018160,1490018460,1490018760,1490019060,1490019360,1490019660,1490019960,1490020260,1490020560,1490020860,1490021160,1490021460,1490021760,1490022060,1490022360,1490022660,1490022960,1490023260,1490023560,1490023860,1490024160,1490024460,1490024760,1490025060,1490025360],&quot;y_unit&quot;:null}]}]}}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HBase_Detail_Store_2017320" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="start_time" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1489939200</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">start_time</stringProp>
                  </elementProp>
                  <elementProp name="end_time" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1490025600</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">end_time</stringProp>
                  </elementProp>
                  <elementProp name="query_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">query_type</stringProp>
                  </elementProp>
                  <elementProp name="type_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">APP:aaa</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">type_name</stringProp>
                  </elementProp>
                  <elementProp name="metrics" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">storeCount</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">metrics</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/hbase/metricData</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2041610633">{&quot;code&quot;:0,&quot;msg&quot;:&quot;success get data&quot;,&quot;data&quot;:{&quot;charts&quot;:[{&quot;subtitle&quot;:&quot;storeCount&quot;,&quot;title&quot;:&quot;store的数量&quot;,&quot;start_time&quot;:1489939200,&quot;end_time&quot;:1490025600,&quot;y_unit&quot;:&quot;store的数量&quot;,&quot;unit&quot;:&quot;300&quot;,&quot;chart_type&quot;:&quot;spline&quot;,&quot;chart_name&quot;:null,&quot;datas&quot;:[{&quot;name&quot;:&quot;APP_table_aaa&quot;,&quot;values&quot;:[3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0],&quot;times&quot;:[1489939260,1489939560,1489939860,1489940160,1489940460,1489940760,1489941060,1489941360,1489941660,1489941960,1489942260,1489942560,1489942860,1489943160,1489943460,1489943760,1489944060,1489944360,1489944660,1489944960,1489945260,1489945560,1489945860,1489946160,1489946460,1489946760,1489947060,1489947360,1489947660,1489947960,1489948260,1489948560,1489948860,1489949160,1489949460,1489949760,1489950060,1489950360,1489950660,1489950960,1489951260,1489951560,1489951860,1489952160,1489952460,1489952760,1489953060,1489953360,1489953660,1489953960,1489954260,1489954560,1489954860,1489955160,1489955460,1489955760,1489956060,1489956360,1489956660,1489956960,1489957260,1489957560,1489957860,1489958160,1489958460,1489958760,1489959060,1489959360,1489959660,1489959960,1489960260,1489960560,1489960860,1489961160,1489961460,1489961760,1489962060,1489962360,1489962660,1489962960,1489963260,1489963560,1489963860,1489964160,1489964460,1489964760,1489965060,1489965360,1489965660,1489965960,1489966260,1489966560,1489966860,1489967160,1489967460,1489967760,1489968060,1489968360,1489968660,1489968960,1489969260,1489969560,1489969860,1489970160,1489970460,1489970760,1489971060,1489971360,1489971660,1489971960,1489972260,1489972560,1489972860,1489973160,1489973460,1489973760,1489974060,1489974360,1489974660,1489974960,1489975260,1489975560,1489975860,1489976160,1489976460,1489976760,1489977060,1489977360,1489977660,1489977960,1489978260,1489978560,1489978860,1489979160,1489979460,1489979760,1489980060,1489980360,1489980660,1489980960,1489981260,1489981560,1489981860,1489982160,1489982460,1489982760,1489983060,1489983360,1489983660,1489983960,1489984260,1489984560,1489984860,1489985160,1489985460,1489985760,1489986060,1489986360,1489986660,1489986960,1489987260,1489987560,1489987860,1489988160,1489988460,1489988760,1489989060,1489989360,1489989660,1489989960,1489990260,1489990560,1489990860,1489991160,1489991460,1489991760,1489992060,1489992360,1489992660,1489992960,1489993260,1489993560,1489993860,1489994160,1489994460,1489994760,1489995060,1489995360,1489995660,1489995960,1489996260,1489996560,1489996860,1489997160,1489997460,1489997760,1489998060,1489998360,1489998660,1489998960,1489999260,1489999560,1489999860,1490000160,1490000460,1490000760,1490001060,1490001360,1490001660,1490001960,1490002260,1490002560,1490002860,1490003160,1490003460,1490003760,1490004060,1490004360,1490004660,1490004960,1490005260,1490005560,1490005860,1490006160,1490006460,1490006760,1490007060,1490007360,1490007660,1490007960,1490008260,1490008560,1490008860,1490009160,1490009460,1490009760,1490010060,1490010360,1490010660,1490010960,1490011260,1490011560,1490011860,1490012160,1490012460,1490012760,1490013060,1490013360,1490013660,1490013960,1490014260,1490014560,1490014860,1490015160,1490015460,1490015760,1490016060,1490016360,1490016660,1490016960,1490017260,1490017560,1490017860,1490018160,1490018460,1490018760,1490019060,1490019360,1490019660,1490019960,1490020260,1490020560,1490020860,1490021160,1490021460,1490021760,1490022060,1490022360,1490022660,1490022960,1490023260,1490023560,1490023860,1490024160,1490024460,1490024760,1490025060,1490025360],&quot;y_unit&quot;:null}]}]}}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Statistic_Analytic_HDFS" enabled="false"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="HDFS_Operation" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HDFS_Operation_32_20170306_20170312" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="startTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1488729600</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">startTime</stringProp>
                  </elementProp>
                  <elementProp name="endTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1489248000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">endTime</stringProp>
                  </elementProp>
                  <elementProp name="metrics" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">mkdirs,open,getfileinfo,delete,rename,listStatus,setPermission,contentSummary,create,setReplication,setTimes,concat,append,fsck,setOwner,isFileClosed,allowSnapshot,disallowSnapshot,createSnapshot,renameSnapshot,listSnapshottableDirectory,computeSnapshotDiff,deleteSnapshot,modifyAclEntries,removeAclEntries,removeDefaultAcl,removeAcl,setAcl,addCacheDirective,modifyCacheDirective,removeCacheDirective,listCacheDirectives,addCachePool,modifyCachePool,removeCachePool,listCachePools,startRollingUpgrade,finalizeRollingUpgrade,createSymlink</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">metrics</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/hdfs/datas</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="932459831">{&quot;code&quot;:0,&quot;msg&quot;:&quot;&quot;,&quot;data&quot;:[{&quot;subtitle&quot;:&quot;mkdirs,open,getfileinfo,delete,rename,listStatus,setPermission,contentSummary,create,setReplication,setTimes,concat,append,fsck,setOwner,isFileClosed,allowSnapshot,disallowSnapshot,createSnapshot,renameSnapshot,listSnapshottableDirectory,computeSnapshotDiff,deleteSnapshot,modifyAclEntries,removeAclEntries,removeDefaultAcl,removeAcl,setAcl,addCacheDirective,modifyCacheDirective,removeCacheDirective,listCacheDirectives,addCachePool,modifyCachePool,removeCachePool,listCachePools,startRollingUpgrade,finalizeRollingUpgrade,createSymlink&quot;,&quot;title&quot;:&quot;用户操作数量走势图&quot;,&quot;start_time&quot;:1488729600,&quot;end_time&quot;:1489248000,&quot;y_unit&quot;:&quot;数量&quot;,&quot;unit&quot;:&quot;3600&quot;,&quot;chart_type&quot;:&quot;spline&quot;,&quot;chart_name&quot;:null,&quot;datas&quot;:[{&quot;name&quot;:&quot;appuser&quot;,&quot;values&quot;:[18052,17088,18739,18710,67082,19117,21740,20122,19272,23148,21712,27460,19171,31473,36826,40171,33628,35852,32276,30928,31614,32080,34002,27215,31468,29317,51181,33082,235975,36030,38344,33186,34287,45574,35029,39344,38476,37812,34688,38716,34672,36057,31774,35781,33305,33925,37314,30988,35085,30081,54430,36546,248558,33499,36161,33418,34189,42152,35113,37962,45616,39144,32650,32527,32458,31916,34776,33040,36733,31289,30691,31323,34655,31728,57001,40726,281284,41561,40664,38657,39696,48921,40840,39810,36641,39035,34332,33018,38112,32194,36856,35198,35177,34787,36284,36433,32378,31916,52790,36124,252174,35891,37487,36619,35058,41595,37671,43246,41130,34390,33538,35013,35169,36873,36428,35501,36026,34933,33274,33240,33149,30906,53236,38863,264027,38313,37377,35784,35690,40136,39076,40866,37670,34686,32258,31955,34475,32189,32545,33560,30783,29922,34920,30598],&quot;times&quot;:[1488729600,1488733200,1488736800,1488740400,1488744000,1488747600,1488751200,1488754800,1488758400,1488762000,1488765600,1488769200,1488772800,1488776400,1488780000,1488783600,1488787200,1488790800,1488794400,1488798000,1488801600,1488805200,1488808800,1488812400,1488816000,1488819600,1488823200,1488826800,1488830400,1488834000,1488837600,1488841200,1488844800,1488848400,1488852000,1488855600,1488859200,1488862800,1488866400,1488870000,1488873600,1488877200,1488880800,1488884400,1488888000,1488891600,1488895200,1488898800,1488902400,1488906000,1488909600,1488913200,1488916800,1488920400,1488924000,1488927600,1488931200,1488934800,1488938400,1488942000,1488945600,1488949200,1488952800,1488956400,1488960000,1488963600,1488967200,1488970800,1488974400,1488978000,1488981600,1488985200,1488988800,1488992400,1488996000,1488999600,1489003200,1489006800,1489010400,1489014000,1489017600,1489021200,1489024800,1489028400,1489032000,1489035600,1489039200,1489042800,1489046400,1489050000,1489053600,1489057200,1489060800,1489064400,1489068000,1489071600,1489075200,1489078800,1489082400,1489086000,1489089600,1489093200,1489096800,1489100400,1489104000,1489107600,1489111200,1489114800,1489118400,1489122000,1489125600,1489129200,1489132800,1489136400,1489140000,1489143600,1489147200,1489150800,1489154400,1489158000,1489161600,1489165200,1489168800,1489172400,1489176000,1489179600,1489183200,1489186800,1489190400,1489194000,1489197600,1489201200,1489204800,1489208400,1489212000,1489215600,1489219200,1489222800,1489226400,1489230000,1489233600,1489237200,1489240800,1489244400],&quot;y_unit&quot;:null}]},{&quot;datas&quot;:[{&quot;name&quot;:&quot;appuser&quot;,&quot;value&quot;:6158218}],&quot;title&quot;:&quot;用户HDFS操作数量排行&quot;},{&quot;datas&quot;:[{&quot;name&quot;:&quot;获得文件信息&quot;,&quot;value&quot;:3713216},{&quot;name&quot;:&quot;打开文件&quot;,&quot;value&quot;:1677458},{&quot;name&quot;:&quot;查看状态&quot;,&quot;value&quot;:258752},{&quot;name&quot;:&quot;新建文件&quot;,&quot;value&quot;:198343},{&quot;name&quot;:&quot;重命名&quot;,&quot;value&quot;:179717},{&quot;name&quot;:&quot;删除文件&quot;,&quot;value&quot;:74513},{&quot;name&quot;:&quot;设置权限&quot;,&quot;value&quot;:23566},{&quot;name&quot;:&quot;设置Replication&quot;,&quot;value&quot;:20837},{&quot;name&quot;:&quot;新建目录&quot;,&quot;value&quot;:11767},{&quot;name&quot;:&quot;内容概览&quot;,&quot;value&quot;:49}],&quot;title&quot;:&quot;HDFS操作数量排行&quot;}]}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="HDFS_Storage" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HDFS_Storage_Dir_Statistic_List_20170319" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="userId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">userId</stringProp>
                  </elementProp>
                  <elementProp name="endTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1489852800</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">endTime</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/hdfs/user/storage</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="733572088">{&quot;code&quot;:0,&quot;msg&quot;:&quot;success&quot;,&quot;data&quot;:[[&quot;/user/appuser&quot;,&quot;7459.552&quot;,&quot;30.501&quot;,&quot;28.544&quot;,&quot;27.02&quot;,&quot;27.925&quot;,&quot;28.197&quot;]]}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HDFS_Storage_Graph_Analytic_20170306_20170312" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="userId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">userId</stringProp>
                  </elementProp>
                  <elementProp name="startTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1488780357</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">startTime</stringProp>
                  </elementProp>
                  <elementProp name="endTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1489298757</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">endTime</stringProp>
                  </elementProp>
                  <elementProp name="paths" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">/user/appuser</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">paths</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/hdfs/path/storage</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2096614476">{&quot;code&quot;:0,&quot;msg&quot;:&quot;success&quot;,&quot;data&quot;:{&quot;total&quot;:{&quot;legend&quot;:[&quot;/user/appuser&quot;],&quot;text&quot;:&quot;HDFS目录大小趋势图&quot;,&quot;series&quot;:[{&quot;name&quot;:&quot;/user/appuser&quot;,&quot;data&quot;:[&quot;7098.743&quot;,&quot;7121.119&quot;,&quot;7145.162&quot;,&quot;7174.83&quot;,&quot;7207.509&quot;,&quot;7234.663&quot;,&quot;7268.663&quot;]}],&quot;xAxisDatas&quot;:[1488729600,1488816000,1488902400,1488988800,1489075200,1489161600,1489248000]},&quot;incr&quot;:{&quot;legend&quot;:[&quot;/user/appuser&quot;],&quot;text&quot;:&quot;HDFS目录增量大小趋势图&quot;,&quot;series&quot;:[{&quot;name&quot;:&quot;/user/appuser&quot;,&quot;data&quot;:[&quot;21.973&quot;,&quot;22.376&quot;,&quot;24.043&quot;,&quot;29.668&quot;,&quot;32.679&quot;,&quot;27.154&quot;,&quot;34.0&quot;]}],&quot;xAxisDatas&quot;:[1488729600,1488816000,1488902400,1488988800,1489075200,1489161600,1489248000]}}}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Statistic_Analytic_Yarn" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Yarn_RM_Absolute_Used_Capacity_20170306_20170309" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="startTime" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1488729600</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">startTime</stringProp>
                </elementProp>
                <elementProp name="endTime" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1488988800</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">endTime</stringProp>
                </elementProp>
                <elementProp name="metric" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">absolute_used_capacity</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">metric</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/yarn/queueChart</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1855452587">{&quot;code&quot;:0,&quot;msg&quot;:&quot;get data success&quot;,&quot;data&quot;:{&quot;datas&quot;:[{&quot;values&quotquot;times&quot;:[1488729600,1488729660,1488729720,1488729780,1488729840,1488729900,1488729960,1488730020,1488730080,1488730140,1488730200,1488730260,1488730320,1488730380,1488730440,1488730500,1488730560,1488730620,1488730680,1488730740,1488730800,1488730860,1488730920,1488730980,1488731040,1488731100,1488731160,1488731220,1488731280,1488731340,1488731400,1488731460,1488731520,1488731580,1488731640,1488731700,1488731760,1488731820,1488731880,1488731940,1488732000,1488732060,1488732120,1488732180,1488732240,1488732300,1488732360,1488732420,1488732480,1488732540,1488732600,1488732660,1488732720,1488732780,1488732840,1488732900,1488732960,1488733020,1488733080,1488733140,1488733200,1488733260,1488733320,1488733380,1488733440,1488733500,1488733560,1488733620,1488733680,1488733740,1488733800,1488733860,1488733920,1488733980,1488734040,1488734100,1488734160,1488734220,1488734280,1488734340,1488734400,1488734460,1488734520,1488734580,1488734640,1488734700,1488734760,1488734820,1488734880,1488734940,1488735000,1488735060,1488735120,1488735180,1488735240,1488735300,1488735360,1488735420,1488735480,1488735540,1488735600,1488735660,1488735720,1488735780,1488735840,1488735900,1488735960,1488736020,1488736080,1488736140,1488736200,1488736260,1488736320,1488736380,1488736440,1488736500,1488736560,1488736620,1488736680,1488736740,1488736800,1488736860,1488736920,1488736980,1488737040,1488737100,1488737160,1488737220,1488737280,1488737340,1488737400,1488737460,1488737520,1488737580,1488737640,1488737700,1488737760,1488737820,1488737880,1488737940,1488738000,1488738060,1488738120,1488738180,1488738240,1488738300,1488738360,1488738420,1488738480,1488738540,1488738600,1488738660,1488738720,1488738780,1488738840,1488738900,1488738960,1488739020,1488739080,1488739140,1488739200,1488739260,1488739320,1488739380,1488739440,1488739500,1488739560,1488739620,1488739680,1488739740,1488739800,1488739860,1488739920,1488739980,1488740040,1488740100,1488740160,1488740220,1488740280,1488740340,1488740400,1488740460,1488740520,1488740580,1488740640,1488740700,1488740760,1488740820,1488740880,1488740940,1488741000,1488741060,1488741120,1488741180,1488741240,1488741300,1488741360,1488741420,1488741480,1488741540,1488741600,1488741660,1488741720,1488741780,1488741840,1488741900,1488741960,1488742020,1488742080,1488742140,1488742200,1488742260,1488742320,1488742380,1488742440,1488742500,1488742560,1488742620,1488742680,1488742740,1488742800,1488742860,1488742920,1488742980,1488743040,1488743100,1488743160,1488743220,1488743280,1488743340,1488743400,1488743460,1488743520,1488743580,1488743640,1488743700,1488743760,1488743820,1488743880,1488743940,1488744000,1488744060,1488744120,1488744180,1488744240,1488744300,1488744360,1488744420,1488744480,1488744540,1488744600,1488744660,1488744720,1488744780,1488744840,1488744900,1488744960,1488745020,1488745080,1488745140,1488745200,1488745260,1488745320,1488745380,1488745440,1488745500,1488745560,1488745620,1488745680,1488745740,1488745800,1488745860,1488745920,1488745980,1488746040,1488746100,1488746160,1488746220,1488746280,1488746340,1488746400,1488746460,1488746520,1488746580,1488746640,1488746700,1488746760,1488746820,1488746880,1488746940,1488747000,1488747060,1488747120,1488747180,1488747240,1488747300,1488747360,1488747420,1488747480,1488747540,1488747600,1488747660,1488747720,1488747780,1488747840,1488747900,1488747960,1488748020,1488748080,1488748140,1488748200,1488748260,1488748320,1488748380,1488748440,1488748500,1488748560,1488748620,1488748680,1488748740,1488748800,1488748860,1488748920,1488748980,1488749040,1488749100,1488749160,1488749220,1488749280,1488749340,1488749400,1488749460,1488749520,1488749580,1488749640,1488749700,1488749760,1488749820,1488749880,1488749940,1488750000,1488750060,1488750120,1488750180,1488750240,1488750300,1488750360,1488750420,1488750480,1488750540,1488750600,1488750660,1488750720,1488750780,1488750840,1488750900,1488750960,1488751020,1488751080,1488751140,1488751200,1488751260,1488751320,1488751380,1488751440,1488751500,1488751560,1488751620,1488751680,1488751740,1488751800,1488751860,1488751920,1488751980,1488752040,1488752100,1488752160,1488752220,1488752280,1488752340,1488752400,1488752460,1488752520,1488752580,1488752640,1488752700,1488752760,1488752820,1488752880,1488752940,1488753000,1488753060,1488753120,1488753180,1488753240,1488753300,1488753360,1488753420,1488753480,1488753540,1488753600,1488753660,1488753720,1488753780,1488753840,1488753900,1488753960,1488754020,1488754080,1488754140,1488754200,1488754260,1488754320,1488754380,1488754440,1488754500,1488754560,1488754620,1488754680,1488754740,1488754800,1488754860,1488754920,1488754980,1488755040,1488755100,1488755160,1488755220,1488755280,1488755340,1488755400,1488755460,1488755520,1488755580,1488755640,1488755700,1488755760,1488755820,1488755880,1488755940,1488756000,1488756060,1488756120,1488756180,1488756240,1488756300,1488756360,1488756420,1488756480,1488756540,1488756600,1488756660,1488756720,1488756780,1488756840,1488756900,1488756960,1488757020,1488757080,1488757140,1488757200,1488757260,1488757320,1488757380,1488757440,1488757500,1488757560,1488757620,1488757680,1488757740,1488757800,1488757860,1488757920,1488757980,1488758040,1488758100,1488758160,1488758220,1488758280,1488758340,1488758400,1488758460,1488758520,1488758580,1488758640,1488758700,1488758760,1488758820,1488758880,1488758940,1488759000,1488759060,1488759120,1488759180,1488759240,1488759300,1488759360,1488759420,1488759480,1488759540,1488759600,1488759660,1488759720,1488759780,1488759840,1488759900,1488759960,1488760020,1488760080,1488760140,1488760200,1488760260,1488760320,1488760380,1488760440,1488760500,1488760560,1488760620,1488760680,1488760740,1488760800,1488760860,1488760920,1488760980,1488761040,1488761100,1488761160,1488761220,1488761280,1488761340,1488761400,1488761460,1488761520,1488761580,1488761640,1488761700,1488761760,1488761820,1488761880,1488761940,1488762000,1488762060,1488762120,1488762180,1488762240,1488762300,1488762360,1488762420,1488762480,1488762540,1488762600,1488762660,1488762720,1488762780,1488762840,1488762900,1488762960,1488763020,1488763080,1488763140,1488763200,1488763260,1488763320,1488763380,1488763440,1488763500,1488763560,1488763620,1488763680,1488763740,1488763800,1488763860,1488763920,1488763980,1488764040,1488764100,1488764160,1488764220,1488764280,1488764340,1488764400,1488764460,1488764520,1488764580,1488764640,1488764700,1488764760,1488764820,1488764880,1488764940,1488765000,1488765060,1488765120,1488765180,1488765240,1488765300,1488765360,1488765420,1488765480,1488765540,1488765600,1488765660,1488765720,1488765780,1488765840,1488765900,1488765960,1488766020,1488766080,1488766140,1488766200,1488766260,1488766320,1488766380,1488766440,1488766500,1488766560,1488766620,1488766680,1488766740,1488766800,1488766860,1488766920,1488766980,1488767040,1488767100,1488767160,1488767220,1488767280,1488767340,1488767400,1488767460,1488767520,1488767580,1488767640,1488767700,1488767760,1488767820,1488767880,1488767940,1488768000,1488768060,1488768120,1488768180,1488768240,1488768300,1488768360,1488768420,1488768480,1488768540,1488768600,1488768660,1488768720,1488768780,1488768840,1488768900,1488768960,1488769020,1488769080,1488769140,1488769200,1488769260,1488769320,1488769380,1488769440,1488769500,1488769560,1488769620,1488769680,1488769740,1488769800,1488769860,1488769920,1488769980,1488770040,1488770100,1488770160,1488770220,1488770280,1488770340,1488770400,1488770460,1488770520,1488770580,1488770640,1488770700,1488770760,1488770820,1488770880,1488770940,1488771000,1488771060,1488771120,1488771180,1488771240,1488771300,1488771360,1488771420,1488771480,1488771540,1488771600,1488771660,1488771720,1488771780,1488771840,1488771900,1488771960,1488772020,1488772080,1488772140,1488772200,1488772260,1488772320,1488772380,1488772440,1488772500,1488772560,1488772620,1488772680,1488772740,1488772800,1488772860,1488772920,1488772980,1488773040,1488773100,1488773160,1488773220,1488773280,1488773340,1488773400,1488773460,1488773520,1488773580,1488773640,1488773700,1488773760,1488773820,1488773880,1488773940,1488774000,1488774060,1488774120,1488774180,1488774240,1488774300,1488774360,1488774420,1488774480,1488774540,1488774600,1488774660,1488774720,1488774780,1488774840,1488774900,1488774960,1488775020,1488775080,1488775140,1488775200,1488775260,1488775320,1488775380,1488775440,1488775500,1488775560,1488775620,1488775680,1488775740,1488775800,1488775860,1488775920,1488775980,1488776040,1488776100,1488776160,1488776220,1488776280,1488776340,1488776400,1488776460,1488776520,1488776580,1488776640,1488776700,1488776760,1488776820,1488776880,1488776940,1488777000,1488777060,1488777120,1488777180,1488777240,1488777300,1488777360,1488777420,1488777480,1488777540,1488777600,1488777660,1488777720,1488777780,1488777840,1488777900,1488777960,1488778020,1488778080,1488778140,1488778200,1488778260,1488778320,1488778380,1488778440,1488778500,1488778560,1488778620,1488778680,1488778740,1488778800,1488778860,1488778920,1488778980,1488779040,1488779100,1488779160,1488779220,1488779280,1488779340,1488779400,1488779460,1488779520,1488779580,1488779640,1488779700,1488779760,1488779820,1488779880,1488779940,1488780000,1488780060,1488780120,1488780180,1488780240,1488780300,1488780360,1488780420,1488780480,1488780540,1488780600,1488780660,1488780720,1488780780,1488780840,1488780900,1488780960,1488781020,1488781080,1488781140,1488781200,1488781260,1488781320,1488781380,1488781440,1488781500,1488781560,1488781620,1488781680,1488781740,1488781800,1488781860,1488781920,1488781980,1488782040,1488782100,1488782160,1488782220,1488782280,1488782340,1488782400,1488782460,1488782520,1488782580,1488782640,1488782700,1488782760,1488782820,1488782880,1488782940,1488783000,1488783060,1488783120,1488783180,1488783240,1488783300,1488783360,1488783420,1488783480,1488783540,1488783600,1488783660,1488783720,1488783780,1488783840,1488783900,1488783960,1488784020,1488784080,1488784140,1488784200,1488784260,1488784320,1488784380,1488784440,1488784500,1488784560,1488784620,1488784680,1488784740,1488784800,1488784860,1488784920,1488784980,1488785040,1488785100,1488785160,1488785220,1488785280,1488785340,1488785400,1488785460,1488785520,1488785580,1488785640,1488785700,1488785760,1488785820,1488785880,1488785940,1488786000,1488786060,1488786120,1488786180,1488786240,1488786300,1488786360,1488786420,1488786480,1488786540,1488786600,1488786660,1488786720,1488786780,1488786840,1488786900,1488786960,1488787020,1488787080,1488787140,1488787200,1488787260,1488787320,1488787380,1488787440,1488787500,1488787560,1488787620,1488787680,1488787740,1488787800,1488787860,1488787920,1488787980,1488788040,1488788100,1488788160,1488788220,1488788280,1488788340,1488788400,1488788460,1488788520,1488788580,1488788640,1488788700,1488788760,1488788820,1488788880,1488788940,1488789000,1488789060,1488789120,1488789180,1488789240,1488789300,1488789360,1488789420,1488789480,1488789540,1488789600,1488789660,1488789720,1488789780,1488789840,1488789900,1488789960,1488790020,1488790080,1488790140,1488790200,1488790260,1488790320,1488790380,1488790440,1488790500,1488790560,1488790620,1488790680,1488790740,1488790800,1488790860,1488790920,1488790980,1488791040,1488791100,1488791160,1488791220,1488791280,1488791340,1488791400,1488791460,1488791520,1488791580,1488791640,1488791700,1488791760,1488791820,1488791880,1488791940,1488792000,1488792060,1488792120,1488792180,1488792240,1488792300,1488792360,1488792420,1488792480,1488792540,1488792600,1488792660,1488792720,1488792780,1488792840,1488792900,1488792960,1488793020,1488793080,1488793140,1488793200,1488793260,1488793320,1488793380,1488793440,1488793500,1488793560,1488793620,1488793680,1488793740,1488793800,1488793860,1488793920,1488793980,1488794040,1488794100,1488794160,1488794220,1488794280,1488794340,1488794400,1488794460,1488794520,1488794580,1488794640,1488794700,1488794760,1488794820,1488794880,1488794940,1488795000,1488795060,1488795120,1488795180,1488795240,1488795300,1488795360,1488795420,1488795480,1488795540,1488795600,1488795660,1488795720,1488795780,1488795840,1488795900,1488795960,1488796020,1488796080,1488796140,1488796200,1488796260,1488796320,1488796380,1488796440,1488796500,1488796560,1488796620,1488796680,1488796740,1488796800,1488796860,1488796920,1488796980,1488797040,1488797100,1488797160,1488797220,1488797280,1488797340,1488797400,1488797460,1488797520,1488797580,1488797640,1488797700,1488797760,1488797820,1488797880,1488797940,1488798000,1488798060,1488798120,1488798180,1488798240,1488798300,1488798360,1488798420,1488798480,1488798540,1488798600,1488798660,1488798720,1488798780,1488798840,1488798900,1488798960,1488799020,1488799080,1488799140,1488799200,1488799260,1488799320,1488799380,1488799440,1488799500,1488799560,1488799620,1488799680,1488799740,1488799800,1488799860,1488799920,1488799980,1488800040,1488800100,1488800160,1488800220,1488800280,1488800340,1488800400,1488800460,1488800520,1488800580,1488800640,1488800700,1488800760,1488800820,1488800880,1488800940,1488801000,1488801060,1488801120,1488801180,1488801240,1488801300,1488801360,1488801420,1488801480,1488801540,1488801600,1488801660,1488801720,1488801780,1488801840,1488801900,1488801960,1488802020,1488802080,1488802140,1488802200,1488802260,1488802320,1488802380,1488802440,1488802500,1488802560,1488802620,1488802680,1488802740,1488802800,1488802860,1488802920,1488802980,1488803040,1488803100,1488803160,1488803220,1488803280,1488803340,1488803400,1488803460,1488803520,1488803580,1488803640,1488803700,1488803760,1488803820,1488803880,1488803940,1488804000,1488804060,1488804120,1488804180,1488804240,1488804300,1488804360,1488804420,1488804480,1488804540,1488804600,1488804660,1488804720,1488804780,1488804840,1488804900,1488804960,1488805020,1488805080,1488805140,1488805200,1488805260,1488805320,1488805380,1488805440,1488805500,1488805560,1488805620,1488805680,1488805740,1488805800,1488805860,1488805920,1488805980,1488806040,1488806100,1488806160,1488806220,1488806280,1488806340,1488806400,1488806460,1488806520,1488806580,1488806640,1488806700,1488806760,1488806820,1488806880,1488806940,1488807000,1488807060,1488807120,1488807180,1488807240,1488807300,1488807360,1488807420,1488807480,1488807540,1488807600,1488807660,1488807720,1488807780,1488807840,1488807900,1488807960,1488808020,1488808080,1488808140,1488808200,1488808260,1488808320,1488808380,1488808440,1488808500,1488808560,1488808620,1488808680,1488808740,1488808800,1488808860,1488808920,1488808980,1488809040,1488809100,1488809160,1488809220,1488809280,1488809340,1488809400,1488809460,1488809520,1488809580,1488809640,1488809700,1488809760,1488809820,1488809880,1488809940,1488810000,1488810060,1488810120,1488810180,1488810240,1488810300,1488810360,1488810420,1488810480,1488810540,1488810600,1488810660,1488810720,1488810780,1488810840,1488810900,1488810960,1488811020,1488811080,1488811140,1488811200,1488811260,1488811320,1488811380,1488811440,1488811500,1488811560,1488811620,1488811680,1488811740,1488811800,1488811860,1488811920,1488811980,1488812040,1488812100,1488812160,1488812220,1488812280,1488812340,1488812400,1488812460,1488812520,1488812580,1488812640,1488812700,1488812760,1488812820,1488812880,1488812940,1488813000,1488813060,1488813120,1488813180,1488813240,1488813300,1488813360,1488813420,1488813480,1488813540,1488813600,1488813660,1488813720,1488813780,1488813840,1488813900,1488813960,1488814020,1488814080,1488814140,1488814200,1488814260,1488814320,1488814380,1488814440,1488814500,1488814560,1488814620,1488814680,1488814740,1488814800,1488814860,1488814920,1488814980,1488815040,1488815100,1488815160,1488815220,1488815280,1488815340,1488815400,1488815460,1488815520,1488815580,1488815640,1488815700,1488815760,1488815820,1488815880,1488815940,1488816000,1488816060,1488816120,1488816180,1488816240,1488816300,1488816360,1488816420,1488816480,1488816540,1488816600,1488816660,1488816720,1488816780,1488816840,1488816900,1488816960,1488817020,1488817080,1488817140,1488817200,1488817260,1488817320,1488817380,1488817440,1488817500,1488817560,1488817620,1488817680,1488817740,1488817800,1488817860,1488817920,1488817980,1488818040,1488818100,1488818160,1488818220,1488818280,1488818340,1488818400,1488818460,1488818520,1488818580,1488818640,1488818700,1488818760,1488818820,1488818880,1488818940,1488819000,1488819060,1488819120,1488819180,1488819240,1488819300,1488819360,1488819420,1488819480,1488819540,1488819600,1488819660,1488819720,1488819780,1488819840,1488819900,1488819960,1488820020,1488820080,1488820140,1488820200,1488820260,1488820320,1488820380,1488820440,1488820500,1488820560,1488820620,1488820680,1488820740,1488820800,1488820860,1488820920,1488820980,1488821040,1488821100,1488821160,1488821220,1488821280,1488821340,1488821400,1488821460,1488821520,1488821580,1488821640,1488821700,1488821760,1488821820,1488821880,1488821940,1488822000,1488822060,1488822120,1488822180,1488822240,1488822300,1488822360,1488822420,1488822480,1488822540,1488822600,1488822660,1488822720,1488822780,1488822840,1488822900,1488822960,1488823020,1488823080,1488823140,1488823200,1488823260,1488823320,1488823380,1488823440,1488823500,1488823560,1488823620,1488823680,1488823740,1488823800,1488823860,1488823920,1488823980,1488824040,1488824100,1488824160,1488824220,1488824280,1488824340,1488824400,1488824460,1488824520,1488824580,1488824640,1488824700,1488824760,1488824820,1488824880,1488824940,1488825000,1488825060,1488825120,1488825180,1488825240,1488825300,1488825360,1488825420,1488825480,1488825540,1488825600,1488825660,1488825720,1488825780,1488825840,1488825900,1488825960,1488826020,1488826080,1488826140,1488826200,1488826260,1488826320,1488826380,1488826440,1488826500,1488826560,1488826620,1488826680,1488826740,1488826800,1488826860,1488826920,1488826980,1488827040,1488827100,1488827160,1488827220,1488827280,1488827340,1488827400,1488827460,1488827520,1488827580,1488827640,1488827700,1488827760,1488827820,1488827880,1488827940,1488828000,1488828060,1488828120,1488828180,1488828240,1488828300,1488828360,1488828420,1488828480,1488828540,1488828600,1488828660,1488828720,1488828780,1488828840,1488828900,1488828960,1488829020,1488829080,1488829140,1488829200,1488829260,1488829320,1488829380,1488829440,1488829500,1488829560,1488829620,1488829680,1488829740,1488829800,1488829860,1488829920,1488829980,1488830040,1488830100,1488830160,1488830220,1488830280,1488830340,1488830400,1488830460,1488830520,1488830580,1488830640,1488830700,1488830760,1488830820,1488830880,1488830940,1488831000,1488831060,1488831120,1488831180,1488831240,1488831300,1488831360,1488831420,1488831480,1488831540,1488831600,1488831660,1488831720,1488831780,1488831840,1488831900,1488831960,1488832020,1488832080,1488832140,1488832200,1488832260,1488832320,1488832380,1488832440,1488832500,1488832560,1488832620,1488832680,1488832740,1488832800,1488832860,1488832920,1488832980,1488833040,1488833100,1488833160,1488833220,1488833280,1488833340,1488833400,1488833460,1488833520,1488833580,1488833640,1488833700,1488833760,1488833820,1488833880,1488833940,1488834000,1488834060,1488834120,1488834180,1488834240,1488834300,1488834360,1488834420,1488834480,1488834540,1488834600,1488834660,1488834720,1488834780,1488834840,1488834900,1488834960,1488835020,1488835080,1488835140,1488835200,1488835260,1488835320,1488835380,1488835440,1488835500,1488835560,1488835620,1488835680,1488835740,1488835800,1488835860,1488835920,1488835980,1488836040,1488836100,1488836160,1488836220,1488836280,1488836340,1488836400,1488836460,1488836520,1488836580,1488836640,1488836700,1488836760,1488836820,1488836880,1488836940,1488837000,1488837060,1488837120,1488837180,1488837240,1488837300,1488837360,1488837420,1488837480,1488837540,1488837600,1488837660,1488837720,1488837780,1488837840,1488837900,1488837960,1488838020,1488838080,1488838140,1488838200,1488838260,1488838320,1488838380,1488838440,1488838500,1488838560,1488838620,1488838680,1488838740,1488838800,1488838860,1488838920,1488838980,1488839040,1488839100,1488839160,1488839220,1488839280,1488839340,1488839400,1488839460,1488839520,1488839580,1488839640,1488839700,1488839760,1488839820,1488839880,1488839940,1488840000,1488840060,1488840120,1488840180,1488840240,1488840300,1488840360,1488840420,1488840480,1488840540,1488840600,1488840660,1488840720,1488840780,1488840840,1488840900,1488840960,1488841020,1488841080,1488841140,1488841200,1488841260,1488841320,1488841380,1488841440,1488841500,1488841560,1488841620,1488841680,1488841740,1488841800,1488841860,1488841920,1488841980,1488842040,1488842100,1488842160,1488842220,1488842280,1488842340,1488842400,1488842460,1488842520,1488842580,1488842640,1488842700,1488842760,1488842820,1488842880,1488842940,1488843000,1488843060,1488843120,1488843180,1488843240,1488843300,1488843360,1488843420,1488843480,1488843540,1488843600,1488843660,1488843720,1488843780,1488843840,1488843900,1488843960,1488844020,1488844080,1488844140,1488844200,1488844260,1488844320,1488844380,1488844440,1488844500,1488844560,1488844620,1488844680,1488844740,1488844800,1488844860,1488844920,1488844980,1488845040,1488845100,1488845160,1488845220,1488845280,1488845340,1488845400,1488845460,1488845520,1488845580,1488845640,1488845700,1488845760,1488845820,1488845880,1488845940,1488846000,1488846060,1488846120,1488846180,1488846240,1488846300,1488846360,1488846420,1488846480,1488846540,1488846600,1488846660,1488846720,1488846780,1488846840,1488846900,1488846960,1488847020,1488847080,1488847140,1488847200,1488847260,1488847320,1488847380,1488847440,1488847500,1488847560,1488847620,1488847680,1488847740,1488847800,1488847860,1488847920,1488847980,1488848040,1488848100,1488848160,1488848220,1488848280,1488848340,1488848400,1488848460,1488848520,1488848580,1488848640,1488848700,1488848760,1488848820,1488848880,1488848940,1488849000,1488849060,1488849120,1488849180,1488849240,1488849300,1488849360,1488849420,1488849480,1488849540,1488849600,1488849660,1488849720,1488849780,1488849840,1488849900,1488849960,1488850020,1488850080,1488850140,1488850200,1488850260,1488850320,1488850380,1488850440,1488850500,1488850560,1488850620,1488850680,1488850740,1488850800,1488850860,1488850920,1488850980,1488851040,1488851100,1488851160,1488851220,1488851280,1488851340,1488851400,1488851460,1488851520,1488851580,1488851640,1488851700,1488851760,1488851820,1488851880,1488851940,1488852000,1488852060,1488852120,1488852180,1488852240,1488852300,1488852360,1488852420,1488852480,1488852540,1488852600,1488852660,1488852720,1488852780,1488852840,1488852900,1488852960,1488853020,1488853080,1488853140,1488853200,1488853260,1488853320,1488853380,1488853440,1488853500,1488853560,1488853620,1488853680,1488853740,1488853800,1488853860,1488853920,1488853980,1488854040,1488854100,1488854160,1488854220,1488854280,1488854340,1488854400,1488854460,1488854520,1488854580,1488854640,1488854700,1488854760,1488854820,1488854880,1488854940,1488855000,1488855060,1488855120,1488855180,1488855240,1488855300,1488855360,1488855420,1488855480,1488855540,1488855600,1488855660,1488855720,1488855780,1488855840,1488855900,1488855960,1488856020,1488856080,1488856140,1488856200,1488856260,1488856320,1488856380,1488856440,1488856500,1488856560,1488856620,1488856680,1488856740,1488856800,1488856860,1488856920,1488856980,1488857040,1488857100,1488857160,1488857220,1488857280,1488857340,1488857400,1488857460,1488857520,1488857580,1488857640,1488857700,1488857760,1488857820,1488857880,1488857940,1488858000,1488858060,1488858120,1488858180,1488858240,1488858300,1488858360,1488858420,1488858480,1488858540,1488858600,1488858660,1488858720,1488858780,1488858840,1488858900,1488858960,1488859020,1488859080,1488859140,1488859200,1488859260,1488859320,1488859380,1488859440,1488859500,1488859560,1488859620,1488859680,1488859740,1488859800,1488859860,1488859920,1488859980,1488860040,1488860100,1488860160,1488860220,1488860280,1488860340,1488860400,1488860460,1488860520,1488860580,1488860640,1488860700,1488860760,1488860820,1488860880,1488860940,1488861000,1488861060,1488861120,1488861180,1488861240,1488861300,1488861360,1488861420,1488861480,1488861540,1488861600,1488861660,1488861720,1488861780,1488861840,1488861900,1488861960,1488862020,1488862080,1488862140,1488862200,1488862260,1488862320,1488862380,1488862440,1488862500,1488862560,1488862620,1488862680,1488862740,1488862800,1488862860,1488862920,1488862980,1488863040,1488863100,1488863160,1488863220,1488863280,1488863340,1488863400,1488863460,1488863520,1488863580,1488863640,1488863700,1488863760,1488863820,1488863880,1488863940,1488864000,1488864060,1488864120,1488864180,1488864240,1488864300,1488864360,1488864420,1488864480,1488864540,1488864600,1488864660,1488864720,1488864780,1488864840,1488864900,1488864960,1488865020,1488865080,1488865140,1488865200,1488865260,1488865320,1488865380,1488865440,1488865500,1488865560,1488865620,1488865680,1488865740,1488865800,1488865860,1488865920,1488865980,1488866040,1488866100,1488866160,1488866220,1488866280,1488866340,1488866400,1488866460,1488866520,1488866580,1488866640,1488866700,1488866760,1488866820,1488866880,1488866940,1488867000,1488867060,1488867120,1488867180,1488867240,1488867300,1488867360,1488867420,1488867480,1488867540,1488867600,1488867660,1488867720,1488867780,1488867840,1488867900,1488867960,1488868020,1488868080,1488868140,1488868200,1488868260,1488868320,1488868380,1488868440,1488868500,1488868560,1488868620,1488868680,1488868740,1488868800,1488868860,1488868920,1488868980,1488869040,1488869100,1488869160,1488869220,1488869280,1488869340,1488869400,1488869460,1488869520,1488869580,1488869640,1488869700,1488869760,1488869820,1488869880,1488869940,1488870000,1488870060,1488870120,1488870180,1488870240,1488870300,1488870360,1488870420,1488870480,1488870540,1488870600,1488870660,1488870720,1488870780,1488870840,1488870900,1488870960,1488871020,1488871080,1488871140,1488871200,1488871260,1488871320,1488871380,1488871440,1488871500,1488871560,1488871620,1488871680,1488871740,1488871800,1488871860,1488871920,1488871980,1488872040,1488872100,1488872160,1488872220,1488872280,1488872340,1488872400,1488872460,1488872520,1488872580,1488872640,1488872700,1488872760,1488872820,1488872880,1488872940,1488873000,1488873060,1488873120,1488873180,1488873240,1488873300,1488873360,1488873420,1488873480,1488873540,1488873600,1488873660,1488873720,1488873780,1488873840,1488873900,1488873960,1488874020,1488874080,1488874140,1488874200,1488874260,1488874320,1488874380,1488874440,1488874500,1488874560,1488874620,1488874680,1488874740,1488874800,1488874860,1488874920,1488874980,1488875040,1488875100,1488875160,1488875220,1488875280,1488875340,1488875400,1488875460,1488875520,1488875580,1488875640,1488875700,1488875760,1488875820,1488875880,1488875940,1488876000,1488876060,1488876120,1488876180,1488876240,1488876300,1488876360,1488876420,1488876480,1488876540,1488876600,1488876660,1488876720,1488876780,1488876840,1488876900,1488876960,1488877020,1488877080,1488877140,1488877200,1488877260,1488877320,1488877380,1488877440,1488877500,1488877560,1488877620,1488877680,1488877740,1488877800,1488877860,1488877920,1488877980,1488878040,1488878100,1488878160,1488878220,1488878280,1488878340,1488878400,1488878460,1488878520,1488878580,1488878640,1488878700,1488878760,1488878820,1488878880,1488878940,1488879000,1488879060,1488879120,1488879180,1488879240,1488879300,1488879360,1488879420,1488879480,1488879540,1488879600,1488879660,1488879720,1488879780,1488879840,1488879900,1488880140,1488880200,1488880260,1488880320,1488880380,1488880440,1488880500,1488880560,1488880620,1488880680,1488880740,1488880800,1488880860,1488880920,1488880980,1488881040,1488881100,1488881160,1488881220,1488881280,1488881340,1488881400,1488881460,1488881520,1488881580,1488881640,1488881700,1488881760,1488881820,1488881880,1488881940,1488882000,1488882060,1488882120,1488882180,1488882240,1488882300,1488882360,1488882420,1488882480,1488882540,1488882600,1488882660,1488882720,1488882780,1488882840,1488882900,1488882960,1488883020,1488883080,1488883140,1488883200,1488883260,1488883320,1488883380,1488883440,1488883500,1488883560,1488883620,1488883680,1488883740,1488883800,1488883860,1488883920,1488883980,1488884040,1488884100,1488884160,1488884220,1488884280,1488884340,1488884400,1488884460,1488884520,1488884580,1488884640,1488884700,1488884760,1488884820,1488884880,1488884940,1488885000,1488885060,1488885120,1488885180,1488885240,1488885300,1488885360,1488885420,1488885480,1488885540,1488885600,1488885660,1488885720,1488885780,1488885840,1488885900,1488885960,1488886020,1488886080,1488886140,1488886200,1488886260,1488886320,1488886380,1488886440,1488886500,1488886560,1488886620,1488886680,1488886740,1488886800,1488886860,1488886920,1488886980,1488887040,1488887100,1488887160,1488887220,1488887280,1488887340,1488887400,1488887460,1488887520,1488887580,1488887640,1488887700,1488887760,1488887820,1488887880,1488887940,1488888000,1488888060,1488888120,1488888180,1488888240,1488888300,1488888360,1488888420,1488888480,1488888540,1488888600,1488888660,1488888720,1488888780,1488888840,1488888900,1488888960,1488889020,1488889080,1488889140,1488889200,1488889260,1488889320,1488889380,1488889440,1488889500,1488889560,1488889620,1488889680,1488889740,1488889800,1488889860,1488889920,1488889980,1488890040,1488890100,1488890160,1488890220,1488890280,1488890340,1488890400,1488890460,1488890520,1488890580,1488890640,1488890700,1488890760,1488890820,1488890880,1488890940,1488891000,1488891060,1488891120,1488891180,1488891240,1488891300,1488891360,1488891420,1488891480,1488891540,1488891600,1488891660,1488891720,1488891780,1488891840,1488891900,1488891960,1488892020,1488892080,1488892140,1488892200,1488892260,1488892320,1488892380,1488892440,1488892500,1488892560,1488892620,1488892680,1488892740,1488892800,1488892920,1488892980,1488893040,1488893100,1488893160,1488893220,1488893280,1488893340,1488893400,1488893460,1488893520,1488893580,1488893640,1488893700,1488893760,1488893820,1488893880,1488893940,1488894000,1488894060,1488894120,1488894180,1488894240,1488894300,1488894360,1488894420,1488894480,1488894540,1488894600,1488894660,1488894720,1488894780,1488894960,1488895020,1488895080,1488895140,1488895200,1488895260,1488895320,1488895380,1488895440,1488895500,1488895560,1488895620,1488895680,1488895740,1488895800,1488895860,1488895920,1488895980,1488896040,1488896100,1488896160,1488896220,1488896280,1488896340,1488896400,1488896460,1488896520,1488896580,1488896640,1488896700,1488896760,1488896820,1488896880,1488896940,1488897000,1488897060,1488897120,1488897180,1488897240,1488897300,1488897360,1488897420,1488897480,1488897540,1488897600,1488897660,1488897720,1488897780,1488897840,1488897900,1488897960,1488898020,1488898080,1488898140,1488898200,1488898260,1488898320,1488898380,1488898440,1488898500,1488898560,1488898620,1488898680,1488898740,1488898800,1488898860,1488898920,1488898980,1488899040,1488899100,1488899160,1488899220,1488899280,1488899340,1488899400,1488899460,1488899520,1488899580,1488899640,1488899700,1488899760,1488899820,1488899880,1488899940,1488900000,1488900060,1488900120,1488900180,1488900240,1488900300,1488900360,1488900420,1488900480,1488900540,1488900600,1488900660,1488900720,1488900780,1488900840,1488900900,1488900960,1488901020,1488901080,1488901140,1488901200,1488901260,1488901320,1488901380,1488901440,1488901500,1488901560,1488901620,1488901680,1488901740,1488901800,1488901860,1488901920,1488901980,1488902040,1488902100,1488902160,1488902220,1488902280,1488902340,1488902400,1488902460,1488902520,1488902580,1488902640,1488902700,1488902760,1488902820,1488902880,1488902940,1488903000,1488903060,1488903120,1488903180,1488903240,1488903300,1488903360,1488903420,1488903480,1488903540,1488903600,1488903660,1488903720,1488903780,1488903840,1488903900,1488903960,1488904020,1488904080,1488904140,1488904200,1488904260,1488904320,1488904380,1488904440,1488904500,1488904560,1488904620,1488904680,1488904740,1488904800,1488904860,1488904920,1488904980,1488905040,1488905100,1488905160,1488905220,1488905280,1488905340,1488905400,1488905460,1488905520,1488905580,1488905640,1488905700,1488905760,1488905820,1488905880,1488905940,1488906000,1488906060,1488906120,1488906180,1488906240,1488906300,1488906360,1488906420,1488906480,1488906540,1488906600,1488906660,1488906720,1488906780,1488906840,1488906900,1488906960,1488907020,1488907080,1488907140,1488907200,1488907260,1488907320,1488907380,1488907440,1488907500,1488907560,1488907620,1488907680,1488907740,1488907800,1488907860,1488907920,1488907980,1488908040,1488908100,1488908160,1488908220,1488908280,1488908340,1488908400,1488908460,1488908520,1488908580,1488908640,1488908700,1488908760,1488908820,1488908880,1488908940,1488909000,1488909060,1488909120,1488909180,1488909240,1488909300,1488909360,1488909420,1488909480,1488909540,1488909600,1488909660,1488909720,1488909780,1488909840,1488909900,1488909960,1488910020,1488910080,1488910140,1488910200,1488910260,1488910320,1488910380,1488910440,1488910500,1488910560,1488910620,1488910680,1488910740,1488910800,1488910860,1488910920,1488910980,1488911040,1488911100,1488911160,1488911220,1488911280,1488911340,1488911400,1488911460,1488911520,1488911580,1488911640,1488911700,1488911760,1488911820,1488911880,1488911940,1488912000,1488912060,1488912120,1488912180,1488912240,1488912300,1488912360,1488912420,1488912480,1488912540,1488912600,1488912660,1488912720,1488912780,1488912840,1488912900,1488912960,1488913020,1488913080,1488913140,1488913200,1488913260,1488913320,1488913380,1488913440,1488913500,1488913560,1488913620,1488913680,1488913740,1488913800,1488913860,1488913920,1488913980,1488914040,1488914100,1488914160,1488914220,1488914280,1488914340,1488914400,1488914460,1488914520,1488914580,1488914640,1488914700,1488914760,1488914820,1488914880,1488914940,1488915000,1488915060,1488915120,1488915180,1488915240,1488915300,1488915360,1488915420,1488915480,1488915540,1488915600,1488915660,1488915720,1488915780,1488915840,1488915900,1488915960,1488916020,1488916080,1488916140,1488916200,1488916260,1488916320,1488916380,1488916440,1488916500,1488916560,1488916620,1488916680,1488916740,1488916800,1488916860,1488916920,1488916980,1488917040,1488917100,1488917160,1488917220,1488917280,1488917340,1488917400,1488917460,1488917520,1488917580,1488917640,1488917700,1488917760,1488917820,1488917880,1488917940,1488918000,1488918060,1488918120,1488918180,1488918240,1488918300,1488918360,1488918420,1488918480,1488918540,1488918600,1488918660,1488918720,1488918780,1488918840,1488918900,1488918960,1488919020,1488919080,1488919140,1488919200,1488919260,1488919320,1488919380,1488919440,1488919500,1488919560,1488919620,1488919680,1488919740,1488919800,1488919860,1488919920,1488919980,1488920040,1488920100,1488920160,1488920220,1488920280,1488920340,1488920400,1488920460,1488920520,1488920580,1488920640,1488920700,1488920760,1488920820,1488920880,1488920940,1488921000,1488921060,1488921120,1488921180,1488921240,1488921300,1488921360,1488921420,1488921480,1488921540,1488921600,1488921660,1488921720,1488921780,1488921840,1488921900,1488921960,1488922020,1488922080,1488922140,1488922200,1488922260,1488922320,1488922380,1488922440,1488922500,1488922560,1488922620,1488922680,1488922740,1488922800,1488922860,1488922920,1488922980,1488923040,1488923100,1488923160,1488923220,1488923280,1488923340,1488923400,1488923460,1488923520,1488923580,1488923640,1488923700,1488923760,1488923820,1488923880,1488923940,1488924000,1488924060,1488924120,1488924180,1488924240,1488924300,1488924360,1488924420,1488924480,1488924540,1488924600,1488924660,1488924720,1488924780,1488924840,1488924900,1488924960,1488925020,1488925080,1488925140,1488925200,1488925260,1488925320,1488925380,1488925440,1488925500,1488925560,1488925620,1488925680,1488925740,1488925800,1488925860,1488925920,1488925980,1488926040,1488926100,1488926160,1488926220,1488926280,1488926340,1488926400,1488926460,1488926520,1488926580,1488926640,1488926700,1488926760,1488926820,1488926880,1488926940,1488927000,1488927060,1488927120,1488927180,1488927240,1488927300,1488927360,1488927420,1488927480,1488927540,1488927600,1488927660,1488927720,1488927780,1488927840,1488927900,1488927960,1488928020,1488928080,1488928140,1488928200,1488928260,1488928320,1488928380,1488928440,1488928500,1488928560,1488928620,1488928680,1488928740,1488928800,1488928860,1488928920,1488928980,1488929040,1488929100,1488929160,1488929220,1488929280,1488929340,1488929400,1488929460,1488929520,1488929580,1488929640,1488929700,1488929760,1488929820,1488929880,1488929940,1488930000,1488930060,1488930120,1488930180,1488930240,1488930300,1488930360,1488930420,1488930480,1488930540,1488930600,1488930660,1488930720,1488930780,1488930840,1488930900,1488930960,1488931020,1488931080,1488931140,1488931200,1488931260,1488931320,1488931380,1488931440,1488931500,1488931560,1488931620,1488931680,1488931740,1488931800,1488931860,1488931920,1488931980,1488932040,1488932100,1488932160,1488932220,1488932280,1488932340,1488932400,1488932460,1488932520,1488932580,1488932640,1488932700,1488932760,1488932820,1488932880,1488932940,1488933000,1488933060,1488933120,1488933180,1488933240,1488933300,1488933360,1488933420,1488933480,1488933540,1488933600,1488933660,1488933720,1488933780,1488933840,1488933900,1488933960,1488934020,1488934080,1488934140,1488934200,1488934260,1488934320,1488934380,1488934440,1488934500,1488934560,1488934620,1488934680,1488934740,1488934800,1488934860,1488934920,1488934980,1488935040,1488935100,1488935160,1488935220,1488935280,1488935340,1488935400,1488935460,1488935520,1488935580,1488935640,1488935700,1488935760,1488935820,1488935880,1488935940,1488936000,1488936060,1488936120,1488936180,1488936240,1488936300,1488936360,1488936420,1488936480,1488936540,1488936600,1488936660,1488936720,1488936780,1488936840,1488936900,1488936960,1488937020,1488937080,1488937140,1488937200,1488937260,1488937320,1488937380,1488937440,1488937500,1488937560,1488937620,1488937680,1488937740,1488937800,1488937860,1488937920,1488937980,1488938040,1488938100,1488938160,1488938220,1488938280,1488938340,1488938400,1488938460,1488938520,1488938580,1488938640,1488938700,1488938760,1488938820,1488938880,1488938940,1488939000,1488939060,1488939120,1488939180,1488939240,1488939300,1488939360,1488939420,1488939480,1488939540,1488939600,1488939660,1488939720,1488939780,1488939840,1488939900,1488939960,1488940020,1488940080,1488940140,1488940200,1488940260,1488940320,1488940380,1488940440,1488940500,1488940560,1488940620,1488940680,1488940740,1488940800,1488940860,1488940920,1488940980,1488941040,1488941100,1488941160,1488941220,1488941280,1488941340,1488941400,1488941460,1488941520,1488941580,1488941640,1488941700,1488941760,1488941820,1488941880,1488941940,1488942000,1488942060,1488942120,1488942180,1488942240,1488942300,1488942360,1488942420,1488942480,1488942540,1488942600,1488942660,1488942720,1488942780,1488942840,1488942900,1488942960,1488943020,1488943080,1488943140,1488943200,1488943260,1488943320,1488943380,1488943440,1488943500,1488943560,1488943620,1488943680,1488943740,1488943800,1488943860,1488943920,1488943980,1488944040,1488944100,1488944160,1488944220,1488944280,1488944340,1488944400,1488944460,1488944520,1488944580,1488944640,1488944700,1488944760,1488944820,1488944880,1488944940,1488945000,1488945060,1488945120,1488945180,1488945240,1488945300,1488945360,1488945420,1488945480,1488945540,1488945600,1488945660,1488945720,1488945780,1488945840,1488945900,1488945960,1488946020,1488946080,1488946140,1488946200,1488946260,1488946320,1488946380,1488946440,1488946500,1488946560,1488946620,1488946680,1488946740,1488946800,1488946860,1488946920,1488946980,1488947040,1488947100,1488947160,1488947220,1488947280,1488947340,1488947400,1488947460,1488947520,1488947580,1488947640,1488947700,1488947760,1488947820,1488947880,1488947940,1488948000,1488948060,1488948120,1488948180,1488948240,1488948300,1488948360,1488948420,1488948480,1488948540,1488948600,1488948660,1488948720,1488948780,1488948840,1488948900,1488948960,1488949020,1488949080,1488949140,1488949200,1488949260,1488949320,1488949380,1488949440,1488949500,1488949560,1488949620,1488949680,1488949740,1488949800,1488949860,1488949920,1488949980,1488950040,1488950100,1488950160,1488950220,1488950280,1488950340,1488950400,1488950460,1488950520,1488950580,1488950640,1488950700,1488950760,1488950820,1488950880,1488950940,1488951000,1488951060,1488951120,1488951180,1488951240,1488951300,1488951360,1488951420,1488951480,1488951540,1488951600,1488951660,1488951720,1488951780,1488951840,1488951900,1488951960,1488952020,1488952080,1488952140,1488952200,1488952260,1488952320,1488952380,1488952440,1488952500,1488952560,1488952620,1488952680,1488952740,1488952800,1488952860,1488952920,1488952980,1488953040,1488953100,1488953160,1488953220,1488953280,1488953340,1488953400,1488953460,1488953520,1488953580,1488953640,1488953700,1488953760,1488953820,1488953880,1488953940,1488954000,1488954060,1488954120,1488954180,1488954240,1488954300,1488954360,1488954420,1488954480,1488954540,1488954600,1488954660,1488954720,1488954780,1488954840,1488954900,1488954960,1488955020,1488955080,1488955140,1488955200,1488955260,1488955320,1488955380,1488955440,1488955500,1488955560,1488955620,1488955680,1488955740,1488955800,1488955860,1488955920,1488955980,1488956040,1488956100,1488956160,1488956220,1488956280,1488956340,1488956400,1488956460,1488956520,1488956580,1488956640,1488956700,1488956760,1488956820,1488956880,1488956940,1488957000,1488957060,1488957120,1488957180,1488957240,1488957300,1488957360,1488957420,1488957480,1488957540,1488957600,1488957660,1488957720,1488957780,1488957840,1488957900,1488957960,1488958020,1488958080,1488958140,1488958200,1488958260,1488958320,1488958380,1488958440,1488958500,1488958560,1488958620,1488958680,1488958740,1488958800,1488958860,1488958920,1488958980,1488959040,1488959100,1488959160,1488959220,1488959280,1488959340,1488959400,1488959460,1488959520,1488959580,1488959640,1488959700,1488959760,1488959820,1488959880,1488959940,1488960000,1488960060,1488960120,1488960180,1488960240,1488960300,1488960360,1488960420,1488960480,1488960540,1488960600,1488960660,1488960720,1488960780,1488960840,1488960900,1488960960,1488961020,1488961080,1488961140,1488961200,1488961260,1488961320,1488961380,1488961440,1488961500,1488961560,1488961620,1488961680,1488961740,1488961800,1488961860,1488961920,1488961980,1488962040,1488962100,1488962160,1488962220,1488962280,1488962340,1488962400,1488962460,1488962520,1488962580,1488962640,1488962700,1488962760,1488962820,1488962880,1488962940,1488963000,1488963060,1488963120,1488963180,1488963240,1488963300,1488963360,1488963420,1488963480,1488963540,1488963600,1488963660,1488963720,1488963780,1488963840,1488963900,1488963960,1488964020,1488964080,1488964140,1488964200,1488964260,1488964320,1488964380,1488964440,1488964500,1488964560,1488964620,1488964680,1488964740,1488964800,1488964860,1488964920,1488964980,1488965040,1488965100,1488965160,1488965220,1488965280,1488965340,1488965400,1488965460,1488965520,1488965580,1488965640,1488965700,1488965760,1488965820,1488965880,1488965940,1488966000,1488966060,1488966120,1488966180,1488966240,1488966300,1488966360,1488966420,1488966480,1488966540,1488966600,1488966660,1488966720,1488966780,1488966840,1488966900,1488966960,1488967020,1488967080,1488967140,1488967200,1488967260,1488967320,1488967380,1488967440,1488967500,1488967560,1488967620,1488967680,1488967740,1488967800,1488967860,1488967920,1488967980,1488968040,1488968100,1488968160,1488968220,1488968280,1488968340,1488968400,1488968460,1488968520,1488968580,1488968640,1488968700,1488968760,1488968820,1488968880,1488968940,1488969000,1488969060,1488969120,1488969180,1488969240,1488969300,1488969360,1488969420,1488969480,1488969540,1488969600,1488969660,1488969720,1488969780,1488969840,1488969900,1488969960,1488970020,1488970080,1488970200,1488970260,1488970320,1488970380,1488970440,1488970500,1488970560,1488970620,1488970680,1488970740,1488970800,1488970860,1488970920,1488970980,1488971040,1488971100,1488971160,1488971220,1488971280,1488971340,1488971400,1488971460,1488971520,1488971580,1488971640,1488971700,1488971760,1488971820,1488971880,1488971940,1488972000,1488972060,1488972120,1488972180,1488972240,1488972300,1488972360,1488972420,1488972480,1488972540,1488972600,1488972660,1488972720,1488972780,1488972840,1488972900,1488972960,1488973020,1488973080,1488973140,1488973200,1488973260,1488973320,1488973380,1488973440,1488973500,1488973560,1488973620,1488973680,1488973740,1488973800,1488973860,1488973920,1488973980,1488974040,1488974100,1488974160,1488974220,1488974280,1488974340,1488974400,1488974460,1488974520,1488974580,1488974640,1488974700,1488974760,1488974820,1488974880,1488974940,1488975000,1488975060,1488975120,1488975180,1488975240,1488975300,1488975360,1488975420,1488975480,1488975540,1488975600,1488975660,1488975720,1488975780,1488975840,1488975900,1488975960,1488976020,1488976080,1488976140,1488976200,1488976260,1488976320,1488976380,1488976440,1488976500,1488976560,1488976620,1488976680,1488976740,1488976800,1488976860,1488976920,1488976980,1488977040,1488977100,1488977160,1488977220,1488977280,1488977340,1488977400,1488977460,1488977520,1488977580,1488977640,1488977700,1488977760,1488977820,1488977880,1488977940,1488978000,1488978060,1488978120,1488978180,1488978240,1488978300,1488978360,1488978420,1488978480,1488978540,1488978600,1488978660,1488978720,1488978780,1488978840,1488978900,1488978960,1488979020,1488979080,1488979140,1488979200,1488979260,1488979320,1488979380,1488979440,1488979500,1488979560,1488979620,1488979680,1488979740,1488979800,1488979860,1488979920,1488979980,1488980040,1488980100,1488980160,1488980220,1488980280,1488980340,1488980400,1488980460,1488980520,1488980580,1488980640,1488980700,1488980760,1488980820,1488980880,1488980940,1488981000,1488981060,1488981120,1488981180,1488981240,1488981300,1488981360,1488981420,1488981480,1488981540,1488981600,1488981660,1488981720,1488981780,1488981840,1488981900,1488981960,1488982020,1488982080,1488982140,1488982200,1488982260,1488982320,1488982380,1488982440,1488982500,1488982560,1488982620,1488982680,1488982740,1488982800,1488982860,1488982920,1488982980,1488983040,1488983100,1488983160,1488983220,1488983280,1488983340,1488983400,1488983460,1488983520,1488983580,1488983640,1488983700,1488983760,1488983820,1488983880,1488983940,1488984000,1488984060,1488984120,1488984180,1488984240,1488984300,1488984360,1488984420,1488984480,1488984540,1488984600,1488984660,1488984720,1488984780,1488984840,1488984900,1488984960,1488985020,1488985080,1488985140,1488985200,1488985260,1488985320,1488985380,1488985440,1488985500,1488985560,1488985620,1488985680,1488985740,1488985800,1488985860,1488985920,1488985980,1488986040,1488986100,1488986160,1488986220,1488986280,1488986340,1488986400,1488986460,1488986520,1488986580,1488986640,1488986700,1488986760,1488986820,1488986880,1488986940,1488987000,1488987060,1488987120,1488987180,1488987240,1488987300,1488987360,1488987420,1488987480,1488987540,1488987600,1488987660,1488987720,1488987780,1488987840,1488987900,1488987960,1488988020,1488988080,1488988140,1488988200,1488988260,1488988320,1488988380,1488988440,1488988500,1488988560,1488988620,1488988680,1488988740,1488988800],&quot;name&quot;:&quot;default&quot;},{&quot;values&quotquot;times&quot;:[1488729600,1488729660,1488729720,1488729780,1488729840,1488729900,1488729960,1488730020,1488730080,1488730140,1488730200,1488730260,1488730320,1488730380,1488730440,1488730500,1488730560,1488730620,1488730680,1488730740,1488730800,1488730860,1488730920,1488730980,1488731040,1488731100,1488731160,1488731220,1488731280,1488731340,1488731400,1488731460,1488731520,1488731580,1488731640,1488731700,1488731760,1488731820,1488731880,1488731940,1488732000,1488732060,1488732120,1488732180,1488732240,1488732300,1488732360,1488732420,1488732480,1488732540,1488732600,1488732660,1488732720,1488732780,1488732840,1488732900,1488732960,1488733020,1488733080,1488733140,1488733200,1488733260,1488733320,1488733380,1488733440,1488733500,1488733560,1488733620,1488733680,1488733740,1488733800,1488733860,1488733920,1488733980,1488734040,1488734100,1488734160,1488734220,1488734280,1488734340,1488734400,1488734460,1488734520,1488734580,1488734640,1488734700,1488734760,1488734820,1488734880,1488734940,1488735000,1488735060,1488735120,1488735180,1488735240,1488735300,1488735360,1488735420,1488735480,1488735540,1488735600,1488735660,1488735720,1488735780,1488735840,1488735900,1488735960,1488736020,1488736080,1488736140,1488736200,1488736260,1488736320,1488736380,1488736440,1488736500,1488736560,1488736620,1488736680,1488736740,1488736800,1488736860,1488736920,1488736980,1488737040,1488737100,1488737160,1488737220,1488737280,1488737340,1488737400,1488737460,1488737520,1488737580,1488737640,1488737700,1488737760,1488737820,1488737880,1488737940,1488738000,1488738060,1488738120,1488738180,1488738240,1488738300,1488738360,1488738420,1488738480,1488738540,1488738600,1488738660,1488738720,1488738780,1488738840,1488738900,1488738960,1488739020,1488739080,1488739140,1488739200,1488739260,1488739320,1488739380,1488739440,1488739500,1488739560,1488739620,1488739680,1488739740,1488739800,1488739860,1488739920,1488739980,1488740040,1488740100,1488740160,1488740220,1488740280,1488740340,1488740400,1488740460,1488740520,1488740580,1488740640,1488740700,1488740760,1488740820,1488740880,1488740940,1488741000,1488741060,1488741120,1488741180,1488741240,1488741300,1488741360,1488741420,1488741480,1488741540,1488741600,1488741660,1488741720,1488741780,1488741840,1488741900,1488741960,1488742020,1488742080,1488742140,1488742200,1488742260,1488742320,1488742380,1488742440,1488742500,1488742560,1488742620,1488742680,1488742740,1488742800,1488742860,1488742920,1488742980,1488743040,1488743100,1488743160,1488743220,1488743280,1488743340,1488743400,1488743460,1488743520,1488743580,1488743640,1488743700,1488743760,1488743820,1488743880,1488743940,1488744000,1488744060,1488744120,1488744180,1488744240,1488744300,1488744360,1488744420,1488744480,1488744540,1488744600,1488744660,1488744720,1488744780,1488744840,1488744900,1488744960,1488745020,1488745080,1488745140,1488745200,1488745260,1488745320,1488745380,1488745440,1488745500,1488745560,1488745620,1488745680,1488745740,1488745800,1488745860,1488745920,1488745980,1488746040,1488746100,1488746160,1488746220,1488746280,1488746340,1488746400,1488746460,1488746520,1488746580,1488746640,1488746700,1488746760,1488746820,1488746880,1488746940,1488747000,1488747060,1488747120,1488747180,1488747240,1488747300,1488747360,1488747420,1488747480,1488747540,1488747600,1488747660,1488747720,1488747780,1488747840,1488747900,1488747960,1488748020,1488748080,1488748140,1488748200,1488748260,1488748320,1488748380,1488748440,1488748500,1488748560,1488748620,1488748680,1488748740,1488748800,1488748860,1488748920,1488748980,1488749040,1488749100,1488749160,1488749220,1488749280,1488749340,1488749400,1488749460,1488749520,1488749580,1488749640,1488749700,1488749760,1488749820,1488749880,1488749940,1488750000,1488750060,1488750120,1488750180,1488750240,1488750300,1488750360,1488750420,1488750480,1488750540,1488750600,1488750660,1488750720,1488750780,1488750840,1488750900,1488750960,1488751020,1488751080,1488751140,1488751200,1488751260,1488751320,1488751380,1488751440,1488751500,1488751560,1488751620,1488751680,1488751740,1488751800,1488751860,1488751920,1488751980,1488752040,1488752100,1488752160,1488752220,1488752280,1488752340,1488752400,1488752460,1488752520,1488752580,1488752640,1488752700,1488752760,1488752820,1488752880,1488752940,1488753000,1488753060,1488753120,1488753180,1488753240,1488753300,1488753360,1488753420,1488753480,1488753540,1488753600,1488753660,1488753720,1488753780,1488753840,1488753900,1488753960,1488754020,1488754080,1488754140,1488754200,1488754260,1488754320,1488754380,1488754440,1488754500,1488754560,1488754620,1488754680,1488754740,1488754800,1488754860,1488754920,1488754980,1488755040,1488755100,1488755160,1488755220,1488755280,1488755340,1488755400,1488755460,1488755520,1488755580,1488755640,1488755700,1488755760,1488755820,1488755880,1488755940,1488756000,1488756060,1488756120,1488756180,1488756240,1488756300,1488756360,1488756420,1488756480,1488756540,1488756600,1488756660,1488756720,1488756780,1488756840,1488756900,1488756960,1488757020,1488757080,1488757140,1488757200,1488757260,1488757320,1488757380,1488757440,1488757500,1488757560,1488757620,1488757680,1488757740,1488757800,1488757860,1488757920,1488757980,1488758040,1488758100,1488758160,1488758220,1488758280,1488758340,1488758400,1488758460,1488758520,1488758580,1488758640,1488758700,1488758760,1488758820,1488758880,1488758940,1488759000,1488759060,1488759120,1488759180,1488759240,1488759300,1488759360,1488759420,1488759480,1488759540,1488759600,1488759660,1488759720,1488759780,1488759840,1488759900,1488759960,1488760020,1488760080,1488760140,1488760200,1488760260,1488760320,1488760380,1488760440,1488760500,1488760560,1488760620,1488760680,1488760740,1488760800,1488760860,1488760920,1488760980,1488761040,1488761100,1488761160,1488761220,1488761280,1488761340,1488761400,1488761460,1488761520,1488761580,1488761640,1488761700,1488761760,1488761820,1488761880,1488761940,1488762000,1488762060,1488762120,1488762180,1488762240,1488762300,1488762360,1488762420,1488762480,1488762540,1488762600,1488762660,1488762720,1488762780,1488762840,1488762900,1488762960,1488763020,1488763080,1488763140,1488763200,1488763260,1488763320,1488763380,1488763440,1488763500,1488763560,1488763620,1488763680,1488763740,1488763800,1488763860,1488763920,1488763980,1488764040,1488764100,1488764160,1488764220,1488764280,1488764340,1488764400,1488764460,1488764520,1488764580,1488764640,1488764700,1488764760,1488764820,1488764880,1488764940,1488765000,1488765060,1488765120,1488765180,1488765240,1488765300,1488765360,1488765420,1488765480,1488765540,1488765600,1488765660,1488765720,1488765780,1488765840,1488765900,1488765960,1488766020,1488766080,1488766140,1488766200,1488766260,1488766320,1488766380,1488766440,1488766500,1488766560,1488766620,1488766680,1488766740,1488766800,1488766860,1488766920,1488766980,1488767040,1488767100,1488767160,1488767220,1488767280,1488767340,1488767400,1488767460,1488767520,1488767580,1488767640,1488767700,1488767760,1488767820,1488767880,1488767940,1488768000,1488768060,1488768120,1488768180,1488768240,1488768300,1488768360,1488768420,1488768480,1488768540,1488768600,1488768660,1488768720,1488768780,1488768840,1488768900,1488768960,1488769020,1488769080,1488769140,1488769200,1488769260,1488769320,1488769380,1488769440,1488769500,1488769560,1488769620,1488769680,1488769740,1488769800,1488769860,1488769920,1488769980,1488770040,1488770100,1488770160,1488770220,1488770280,1488770340,1488770400,1488770460,1488770520,1488770580,1488770640,1488770700,1488770760,1488770820,1488770880,1488770940,1488771000,1488771060,1488771120,1488771180,1488771240,1488771300,1488771360,1488771420,1488771480,1488771540,1488771600,1488771660,1488771720,1488771780,1488771840,1488771900,1488771960,1488772020,1488772080,1488772140,1488772200,1488772260,1488772320,1488772380,1488772440,1488772500,1488772560,1488772620,1488772680,1488772740,1488772800,1488772860,1488772920,1488772980,1488773040,1488773100,1488773160,1488773220,1488773280,1488773340,1488773400,1488773460,1488773520,1488773580,1488773640,1488773700,1488773760,1488773820,1488773880,1488773940,1488774000,1488774060,1488774120,1488774180,1488774240,1488774300,1488774360,1488774420,1488774480,1488774540,1488774600,1488774660,1488774720,1488774780,1488774840,1488774900,1488774960,1488775020,1488775080,1488775140,1488775200,1488775260,1488775320,1488775380,1488775440,1488775500,1488775560,1488775620,1488775680,1488775740,1488775800,1488775860,1488775920,1488775980,1488776040,1488776100,1488776160,1488776220,1488776280,1488776340,1488776400,1488776460,1488776520,1488776580,1488776640,1488776700,1488776760,1488776820,1488776880,1488776940,1488777000,1488777060,1488777120,1488777180,1488777240,1488777300,1488777360,1488777420,1488777480,1488777540,1488777600,1488777660,1488777720,1488777780,1488777840,1488777900,1488777960,1488778020,1488778080,1488778140,1488778200,1488778260,1488778320,1488778380,1488778440,1488778500,1488778560,1488778620,1488778680,1488778740,1488778800,1488778860,1488778920,1488778980,1488779040,1488779100,1488779160,1488779220,1488779280,1488779340,1488779400,1488779460,1488779520,1488779580,1488779640,1488779700,1488779760,1488779820,1488779880,1488779940,1488780000,1488780060,1488780120,1488780180,1488780240,1488780300,1488780360,1488780420,1488780480,1488780540,1488780600,1488780660,1488780720,1488780780,1488780840,1488780900,1488780960,1488781020,1488781080,1488781140,1488781200,1488781260,1488781320,1488781380,1488781440,1488781500,1488781560,1488781620,1488781680,1488781740,1488781800,1488781860,1488781920,1488781980,1488782040,1488782100,1488782160,1488782220,1488782280,1488782340,1488782400,1488782460,1488782520,1488782580,1488782640,1488782700,1488782760,1488782820,1488782880,1488782940,1488783000,1488783060,1488783120,1488783180,1488783240,1488783300,1488783360,1488783420,1488783480,1488783540,1488783600,1488783660,1488783720,1488783780,1488783840,1488783900,1488783960,1488784020,1488784080,1488784140,1488784200,1488784260,1488784320,1488784380,1488784440,1488784500,1488784560,1488784620,1488784680,1488784740,1488784800,1488784860,1488784920,1488784980,1488785040,1488785100,1488785160,1488785220,1488785280,1488785340,1488785400,1488785460,1488785520,1488785580,1488785640,1488785700,1488785760,1488785820,1488785880,1488785940,1488786000,1488786060,1488786120,1488786180,1488786240,1488786300,1488786360,1488786420,1488786480,1488786540,1488786600,1488786660,1488786720,1488786780,1488786840,1488786900,1488786960,1488787020,1488787080,1488787140,1488787200,1488787260,1488787320,1488787380,1488787440,1488787500,1488787560,1488787620,1488787680,1488787740,1488787800,1488787860,1488787920,1488787980,1488788040,1488788100,1488788160,1488788220,1488788280,1488788340,1488788400,1488788460,1488788520,1488788580,1488788640,1488788700,1488788760,1488788820,1488788880,1488788940,1488789000,1488789060,1488789120,1488789180,1488789240,1488789300,1488789360,1488789420,1488789480,1488789540,1488789600,1488789660,1488789720,1488789780,1488789840,1488789900,1488789960,1488790020,1488790080,1488790140,1488790200,1488790260,1488790320,1488790380,1488790440,1488790500,1488790560,1488790620,1488790680,1488790740,1488790800,1488790860,1488790920,1488790980,1488791040,1488791100,1488791160,1488791220,1488791280,1488791340,1488791400,1488791460,1488791520,1488791580,1488791640,1488791700,1488791760,1488791820,1488791880,1488791940,1488792000,1488792060,1488792120,1488792180,1488792240,1488792300,1488792360,1488792420,1488792480,1488792540,1488792600,1488792660,1488792720,1488792780,1488792840,1488792900,1488792960,1488793020,1488793080,1488793140,1488793200,1488793260,1488793320,1488793380,1488793440,1488793500,1488793560,1488793620,1488793680,1488793740,1488793800,1488793860,1488793920,1488793980,1488794040,1488794100,1488794160,1488794220,1488794280,1488794340,1488794400,1488794460,1488794520,1488794580,1488794640,1488794700,1488794760,1488794820,1488794880,1488794940,1488795000,1488795060,1488795120,1488795180,1488795240,1488795300,1488795360,1488795420,1488795480,1488795540,1488795600,1488795660,1488795720,1488795780,1488795840,1488795900,1488795960,1488796020,1488796080,1488796140,1488796200,1488796260,1488796320,1488796380,1488796440,1488796500,1488796560,1488796620,1488796680,1488796740,1488796800,1488796860,1488796920,1488796980,1488797040,1488797100,1488797160,1488797220,1488797280,1488797340,1488797400,1488797460,1488797520,1488797580,1488797640,1488797700,1488797760,1488797820,1488797880,1488797940,1488798000,1488798060,1488798120,1488798180,1488798240,1488798300,1488798360,1488798420,1488798480,1488798540,1488798600,1488798660,1488798720,1488798780,1488798840,1488798900,1488798960,1488799020,1488799080,1488799140,1488799200,1488799260,1488799320,1488799380,1488799440,1488799500,1488799560,1488799620,1488799680,1488799740,1488799800,1488799860,1488799920,1488799980,1488800040,1488800100,1488800160,1488800220,1488800280,1488800340,1488800400,1488800460,1488800520,1488800580,1488800640,1488800700,1488800760,1488800820,1488800880,1488800940,1488801000,1488801060,1488801120,1488801180,1488801240,1488801300,1488801360,1488801420,1488801480,1488801540,1488801600,1488801660,1488801720,1488801780,1488801840,1488801900,1488801960,1488802020,1488802080,1488802140,1488802200,1488802260,1488802320,1488802380,1488802440,1488802500,1488802560,1488802620,1488802680,1488802740,1488802800,1488802860,1488802920,1488802980,1488803040,1488803100,1488803160,1488803220,1488803280,1488803340,1488803400,1488803460,1488803520,1488803580,1488803640,1488803700,1488803760,1488803820,1488803880,1488803940,1488804000,1488804060,1488804120,1488804180,1488804240,1488804300,1488804360,1488804420,1488804480,1488804540,1488804600,1488804660,1488804720,1488804780,1488804840,1488804900,1488804960,1488805020,1488805080,1488805140,1488805200,1488805260,1488805320,1488805380,1488805440,1488805500,1488805560,1488805620,1488805680,1488805740,1488805800,1488805860,1488805920,1488805980,1488806040,1488806100,1488806160,1488806220,1488806280,1488806340,1488806400,1488806460,1488806520,1488806580,1488806640,1488806700,1488806760,1488806820,1488806880,1488806940,1488807000,1488807060,1488807120,1488807180,1488807240,1488807300,1488807360,1488807420,1488807480,1488807540,1488807600,1488807660,1488807720,1488807780,1488807840,1488807900,1488807960,1488808020,1488808080,1488808140,1488808200,1488808260,1488808320,1488808380,1488808440,1488808500,1488808560,1488808620,1488808680,1488808740,1488808800,1488808860,1488808920,1488808980,1488809040,1488809100,1488809160,1488809220,1488809280,1488809340,1488809400,1488809460,1488809520,1488809580,1488809640,1488809700,1488809760,1488809820,1488809880,1488809940,1488810000,1488810060,1488810120,1488810180,1488810240,1488810300,1488810360,1488810420,1488810480,1488810540,1488810600,1488810660,1488810720,1488810780,1488810840,1488810900,1488810960,1488811020,1488811080,1488811140,1488811200,1488811260,1488811320,1488811380,1488811440,1488811500,1488811560,1488811620,1488811680,1488811740,1488811800,1488811860,1488811920,1488811980,1488812040,1488812100,1488812160,1488812220,1488812280,1488812340,1488812400,1488812460,1488812520,1488812580,1488812640,1488812700,1488812760,1488812820,1488812880,1488812940,1488813000,1488813060,1488813120,1488813180,1488813240,1488813300,1488813360,1488813420,1488813480,1488813540,1488813600,1488813660,1488813720,1488813780,1488813840,1488813900,1488813960,1488814020,1488814080,1488814140,1488814200,1488814260,1488814320,1488814380,1488814440,1488814500,1488814560,1488814620,1488814680,1488814740,1488814800,1488814860,1488814920,1488814980,1488815040,1488815100,1488815160,1488815220,1488815280,1488815340,1488815400,1488815460,1488815520,1488815580,1488815640,1488815700,1488815760,1488815820,1488815880,1488815940,1488816000,1488816060,1488816120,1488816180,1488816240,1488816300,1488816360,1488816420,1488816480,1488816540,1488816600,1488816660,1488816720,1488816780,1488816840,1488816900,1488816960,1488817020,1488817080,1488817140,1488817200,1488817260,1488817320,1488817380,1488817440,1488817500,1488817560,1488817620,1488817680,1488817740,1488817800,1488817860,1488817920,1488817980,1488818040,1488818100,1488818160,1488818220,1488818280,1488818340,1488818400,1488818460,1488818520,1488818580,1488818640,1488818700,1488818760,1488818820,1488818880,1488818940,1488819000,1488819060,1488819120,1488819180,1488819240,1488819300,1488819360,1488819420,1488819480,1488819540,1488819600,1488819660,1488819720,1488819780,1488819840,1488819900,1488819960,1488820020,1488820080,1488820140,1488820200,1488820260,1488820320,1488820380,1488820440,1488820500,1488820560,1488820620,1488820680,1488820740,1488820800,1488820860,1488820920,1488820980,1488821040,1488821100,1488821160,1488821220,1488821280,1488821340,1488821400,1488821460,1488821520,1488821580,1488821640,1488821700,1488821760,1488821820,1488821880,1488821940,1488822000,1488822060,1488822120,1488822180,1488822240,1488822300,1488822360,1488822420,1488822480,1488822540,1488822600,1488822660,1488822720,1488822780,1488822840,1488822900,1488822960,1488823020,1488823080,1488823140,1488823200,1488823260,1488823320,1488823380,1488823440,1488823500,1488823560,1488823620,1488823680,1488823740,1488823800,1488823860,1488823920,1488823980,1488824040,1488824100,1488824160,1488824220,1488824280,1488824340,1488824400,1488824460,1488824520,1488824580,1488824640,1488824700,1488824760,1488824820,1488824880,1488824940,1488825000,1488825060,1488825120,1488825180,1488825240,1488825300,1488825360,1488825420,1488825480,1488825540,1488825600,1488825660,1488825720,1488825780,1488825840,1488825900,1488825960,1488826020,1488826080,1488826140,1488826200,1488826260,1488826320,1488826380,1488826440,1488826500,1488826560,1488826620,1488826680,1488826740,1488826800,1488826860,1488826920,1488826980,1488827040,1488827100,1488827160,1488827220,1488827280,1488827340,1488827400,1488827460,1488827520,1488827580,1488827640,1488827700,1488827760,1488827820,1488827880,1488827940,1488828000,1488828060,1488828120,1488828180,1488828240,1488828300,1488828360,1488828420,1488828480,1488828540,1488828600,1488828660,1488828720,1488828780,1488828840,1488828900,1488828960,1488829020,1488829080,1488829140,1488829200,1488829260,1488829320,1488829380,1488829440,1488829500,1488829560,1488829620,1488829680,1488829740,1488829800,1488829860,1488829920,1488829980,1488830040,1488830100,1488830160,1488830220,1488830280,1488830340,1488830400,1488830460,1488830520,1488830580,1488830640,1488830700,1488830760,1488830820,1488830880,1488830940,1488831000,1488831060,1488831120,1488831180,1488831240,1488831300,1488831360,1488831420,1488831480,1488831540,1488831600,1488831660,1488831720,1488831780,1488831840,1488831900,1488831960,1488832020,1488832080,1488832140,1488832200,1488832260,1488832320,1488832380,1488832440,1488832500,1488832560,1488832620,1488832680,1488832740,1488832800,1488832860,1488832920,1488832980,1488833040,1488833100,1488833160,1488833220,1488833280,1488833340,1488833400,1488833460,1488833520,1488833580,1488833640,1488833700,1488833760,1488833820,1488833880,1488833940,1488834000,1488834060,1488834120,1488834180,1488834240,1488834300,1488834360,1488834420,1488834480,1488834540,1488834600,1488834660,1488834720,1488834780,1488834840,1488834900,1488834960,1488835020,1488835080,1488835140,1488835200,1488835260,1488835320,1488835380,1488835440,1488835500,1488835560,1488835620,1488835680,1488835740,1488835800,1488835860,1488835920,1488835980,1488836040,1488836100,1488836160,1488836220,1488836280,1488836340,1488836400,1488836460,1488836520,1488836580,1488836640,1488836700,1488836760,1488836820,1488836880,1488836940,1488837000,1488837060,1488837120,1488837180,1488837240,1488837300,1488837360,1488837420,1488837480,1488837540,1488837600,1488837660,1488837720,1488837780,1488837840,1488837900,1488837960,1488838020,1488838080,1488838140,1488838200,1488838260,1488838320,1488838380,1488838440,1488838500,1488838560,1488838620,1488838680,1488838740,1488838800,1488838860,1488838920,1488838980,1488839040,1488839100,1488839160,1488839220,1488839280,1488839340,1488839400,1488839460,1488839520,1488839580,1488839640,1488839700,1488839760,1488839820,1488839880,1488839940,1488840000,1488840060,1488840120,1488840180,1488840240,1488840300,1488840360,1488840420,1488840480,1488840540,1488840600,1488840660,1488840720,1488840780,1488840840,1488840900,1488840960,1488841020,1488841080,1488841140,1488841200,1488841260,1488841320,1488841380,1488841440,1488841500,1488841560,1488841620,1488841680,1488841740,1488841800,1488841860,1488841920,1488841980,1488842040,1488842100,1488842160,1488842220,1488842280,1488842340,1488842400,1488842460,1488842520,1488842580,1488842640,1488842700,1488842760,1488842820,1488842880,1488842940,1488843000,1488843060,1488843120,1488843180,1488843240,1488843300,1488843360,1488843420,1488843480,1488843540,1488843600,1488843660,1488843720,1488843780,1488843840,1488843900,1488843960,1488844020,1488844080,1488844140,1488844200,1488844260,1488844320,1488844380,1488844440,1488844500,1488844560,1488844620,1488844680,1488844740,1488844800,1488844860,1488844920,1488844980,1488845040,1488845100,1488845160,1488845220,1488845280,1488845340,1488845400,1488845460,1488845520,1488845580,1488845640,1488845700,1488845760,1488845820,1488845880,1488845940,1488846000,1488846060,1488846120,1488846180,1488846240,1488846300,1488846360,1488846420,1488846480,1488846540,1488846600,1488846660,1488846720,1488846780,1488846840,1488846900,1488846960,1488847020,1488847080,1488847140,1488847200,1488847260,1488847320,1488847380,1488847440,1488847500,1488847560,1488847620,1488847680,1488847740,1488847800,1488847860,1488847920,1488847980,1488848040,1488848100,1488848160,1488848220,1488848280,1488848340,1488848400,1488848460,1488848520,1488848580,1488848640,1488848700,1488848760,1488848820,1488848880,1488848940,1488849000,1488849060,1488849120,1488849180,1488849240,1488849300,1488849360,1488849420,1488849480,1488849540,1488849600,1488849660,1488849720,1488849780,1488849840,1488849900,1488849960,1488850020,1488850080,1488850140,1488850200,1488850260,1488850320,1488850380,1488850440,1488850500,1488850560,1488850620,1488850680,1488850740,1488850800,1488850860,1488850920,1488850980,1488851040,1488851100,1488851160,1488851220,1488851280,1488851340,1488851400,1488851460,1488851520,1488851580,1488851640,1488851700,1488851760,1488851820,1488851880,1488851940,1488852000,1488852060,1488852120,1488852180,1488852240,1488852300,1488852360,1488852420,1488852480,1488852540,1488852600,1488852660,1488852720,1488852780,1488852840,1488852900,1488852960,1488853020,1488853080,1488853140,1488853200,1488853260,1488853320,1488853380,1488853440,1488853500,1488853560,1488853620,1488853680,1488853740,1488853800,1488853860,1488853920,1488853980,1488854040,1488854100,1488854160,1488854220,1488854280,1488854340,1488854400,1488854460,1488854520,1488854580,1488854640,1488854700,1488854760,1488854820,1488854880,1488854940,1488855000,1488855060,1488855120,1488855180,1488855240,1488855300,1488855360,1488855420,1488855480,1488855540,1488855600,1488855660,1488855720,1488855780,1488855840,1488855900,1488855960,1488856020,1488856080,1488856140,1488856200,1488856260,1488856320,1488856380,1488856440,1488856500,1488856560,1488856620,1488856680,1488856740,1488856800,1488856860,1488856920,1488856980,1488857040,1488857100,1488857160,1488857220,1488857280,1488857340,1488857400,1488857460,1488857520,1488857580,1488857640,1488857700,1488857760,1488857820,1488857880,1488857940,1488858000,1488858060,1488858120,1488858180,1488858240,1488858300,1488858360,1488858420,1488858480,1488858540,1488858600,1488858660,1488858720,1488858780,1488858840,1488858900,1488858960,1488859020,1488859080,1488859140,1488859200,1488859260,1488859320,1488859380,1488859440,1488859500,1488859560,1488859620,1488859680,1488859740,1488859800,1488859860,1488859920,1488859980,1488860040,1488860100,1488860160,1488860220,1488860280,1488860340,1488860400,1488860460,1488860520,1488860580,1488860640,1488860700,1488860760,1488860820,1488860880,1488860940,1488861000,1488861060,1488861120,1488861180,1488861240,1488861300,1488861360,1488861420,1488861480,1488861540,1488861600,1488861660,1488861720,1488861780,1488861840,1488861900,1488861960,1488862020,1488862080,1488862140,1488862200,1488862260,1488862320,1488862380,1488862440,1488862500,1488862560,1488862620,1488862680,1488862740,1488862800,1488862860,1488862920,1488862980,1488863040,1488863100,1488863160,1488863220,1488863280,1488863340,1488863400,1488863460,1488863520,1488863580,1488863640,1488863700,1488863760,1488863820,1488863880,1488863940,1488864000,1488864060,1488864120,1488864180,1488864240,1488864300,1488864360,1488864420,1488864480,1488864540,1488864600,1488864660,1488864720,1488864780,1488864840,1488864900,1488864960,1488865020,1488865080,1488865140,1488865200,1488865260,1488865320,1488865380,1488865440,1488865500,1488865560,1488865620,1488865680,1488865740,1488865800,1488865860,1488865920,1488865980,1488866040,1488866100,1488866160,1488866220,1488866280,1488866340,1488866400,1488866460,1488866520,1488866580,1488866640,1488866700,1488866760,1488866820,1488866880,1488866940,1488867000,1488867060,1488867120,1488867180,1488867240,1488867300,1488867360,1488867420,1488867480,1488867540,1488867600,1488867660,1488867720,1488867780,1488867840,1488867900,1488867960,1488868020,1488868080,1488868140,1488868200,1488868260,1488868320,1488868380,1488868440,1488868500,1488868560,1488868620,1488868680,1488868740,1488868800,1488868860,1488868920,1488868980,1488869040,1488869100,1488869160,1488869220,1488869280,1488869340,1488869400,1488869460,1488869520,1488869580,1488869640,1488869700,1488869760,1488869820,1488869880,1488869940,1488870000,1488870060,1488870120,1488870180,1488870240,1488870300,1488870360,1488870420,1488870480,1488870540,1488870600,1488870660,1488870720,1488870780,1488870840,1488870900,1488870960,1488871020,1488871080,1488871140,1488871200,1488871260,1488871320,1488871380,1488871440,1488871500,1488871560,1488871620,1488871680,1488871740,1488871800,1488871860,1488871920,1488871980,1488872040,1488872100,1488872160,1488872220,1488872280,1488872340,1488872400,1488872460,1488872520,1488872580,1488872640,1488872700,1488872760,1488872820,1488872880,1488872940,1488873000,1488873060,1488873120,1488873180,1488873240,1488873300,1488873360,1488873420,1488873480,1488873540,1488873600,1488873660,1488873720,1488873780,1488873840,1488873900,1488873960,1488874020,1488874080,1488874140,1488874200,1488874260,1488874320,1488874380,1488874440,1488874500,1488874560,1488874620,1488874680,1488874740,1488874800,1488874860,1488874920,1488874980,1488875040,1488875100,1488875160,1488875220,1488875280,1488875340,1488875400,1488875460,1488875520,1488875580,1488875640,1488875700,1488875760,1488875820,1488875880,1488875940,1488876000,1488876060,1488876120,1488876180,1488876240,1488876300,1488876360,1488876420,1488876480,1488876540,1488876600,1488876660,1488876720,1488876780,1488876840,1488876900,1488876960,1488877020,1488877080,1488877140,1488877200,1488877260,1488877320,1488877380,1488877440,1488877500,1488877560,1488877620,1488877680,1488877740,1488877800,1488877860,1488877920,1488877980,1488878040,1488878100,1488878160,1488878220,1488878280,1488878340,1488878400,1488878460,1488878520,1488878580,1488878640,1488878700,1488878760,1488878820,1488878880,1488878940,1488879000,1488879060,1488879120,1488879180,1488879240,1488879300,1488879360,1488879420,1488879480,1488879540,1488879600,1488879660,1488879720,1488879780,1488879840,1488879900,1488880140,1488880200,1488880260,1488880320,1488880380,1488880440,1488880500,1488880560,1488880620,1488880680,1488880740,1488880800,1488880860,1488880920,1488880980,1488881040,1488881100,1488881160,1488881220,1488881280,1488881340,1488881400,1488881460,1488881520,1488881580,1488881640,1488881700,1488881760,1488881820,1488881880,1488881940,1488882000,1488882060,1488882120,1488882180,1488882240,1488882300,1488882360,1488882420,1488882480,1488882540,1488882600,1488882660,1488882720,1488882780,1488882840,1488882900,1488882960,1488883020,1488883080,1488883140,1488883200,1488883260,1488883320,1488883380,1488883440,1488883500,1488883560,1488883620,1488883680,1488883740,1488883800,1488883860,1488883920,1488883980,1488884040,1488884100,1488884160,1488884220,1488884280,1488884340,1488884400,1488884460,1488884520,1488884580,1488884640,1488884700,1488884760,1488884820,1488884880,1488884940,1488885000,1488885060,1488885120,1488885180,1488885240,1488885300,1488885360,1488885420,1488885480,1488885540,1488885600,1488885660,1488885720,1488885780,1488885840,1488885900,1488885960,1488886020,1488886080,1488886140,1488886200,1488886260,1488886320,1488886380,1488886440,1488886500,1488886560,1488886620,1488886680,1488886740,1488886800,1488886860,1488886920,1488886980,1488887040,1488887100,1488887160,1488887220,1488887280,1488887340,1488887400,1488887460,1488887520,1488887580,1488887640,1488887700,1488887760,1488887820,1488887880,1488887940,1488888000,1488888060,1488888120,1488888180,1488888240,1488888300,1488888360,1488888420,1488888480,1488888540,1488888600,1488888660,1488888720,1488888780,1488888840,1488888900,1488888960,1488889020,1488889080,1488889140,1488889200,1488889260,1488889320,1488889380,1488889440,1488889500,1488889560,1488889620,1488889680,1488889740,1488889800,1488889860,1488889920,1488889980,1488890040,1488890100,1488890160,1488890220,1488890280,1488890340,1488890400,1488890460,1488890520,1488890580,1488890640,1488890700,1488890760,1488890820,1488890880,1488890940,1488891000,1488891060,1488891120,1488891180,1488891240,1488891300,1488891360,1488891420,1488891480,1488891540,1488891600,1488891660,1488891720,1488891780,1488891840,1488891900,1488891960,1488892020,1488892080,1488892140,1488892200,1488892260,1488892320,1488892380,1488892440,1488892500,1488892560,1488892620,1488892680,1488892740,1488892800,1488892920,1488892980,1488893040,1488893100,1488893160,1488893220,1488893280,1488893340,1488893400,1488893460,1488893520,1488893580,1488893640,1488893700,1488893760,1488893820,1488893880,1488893940,1488894000,1488894060,1488894120,1488894180,1488894240,1488894300,1488894360,1488894420,1488894480,1488894540,1488894600,1488894660,1488894720,1488894780,1488894960,1488895020,1488895080,1488895140,1488895200,1488895260,1488895320,1488895380,1488895440,1488895500,1488895560,1488895620,1488895680,1488895740,1488895800,1488895860,1488895920,1488895980,1488896040,1488896100,1488896160,1488896220,1488896280,1488896340,1488896400,1488896460,1488896520,1488896580,1488896640,1488896700,1488896760,1488896820,1488896880,1488896940,1488897000,1488897060,1488897120,1488897180,1488897240,1488897300,1488897360,1488897420,1488897480,1488897540,1488897600,1488897660,1488897720,1488897780,1488897840,1488897900,1488897960,1488898020,1488898080,1488898140,1488898200,1488898260,1488898320,1488898380,1488898440,1488898500,1488898560,1488898620,1488898680,1488898740,1488898800,1488898860,1488898920,1488898980,1488899040,1488899100,1488899160,1488899220,1488899280,1488899340,1488899400,1488899460,1488899520,1488899580,1488899640,1488899700,1488899760,1488899820,1488899880,1488899940,1488900000,1488900060,1488900120,1488900180,1488900240,1488900300,1488900360,1488900420,1488900480,1488900540,1488900600,1488900660,1488900720,1488900780,1488900840,1488900900,1488900960,1488901020,1488901080,1488901140,1488901200,1488901260,1488901320,1488901380,1488901440,1488901500,1488901560,1488901620,1488901680,1488901740,1488901800,1488901860,1488901920,1488901980,1488902040,1488902100,1488902160,1488902220,1488902280,1488902340,1488902400,1488902460,1488902520,1488902580,1488902640,1488902700,1488902760,1488902820,1488902880,1488902940,1488903000,1488903060,1488903120,1488903180,1488903240,1488903300,1488903360,1488903420,1488903480,1488903540,1488903600,1488903660,1488903720,1488903780,1488903840,1488903900,1488903960,1488904020,1488904080,1488904140,1488904200,1488904260,1488904320,1488904380,1488904440,1488904500,1488904560,1488904620,1488904680,1488904740,1488904800,1488904860,1488904920,1488904980,1488905040,1488905100,1488905160,1488905220,1488905280,1488905340,1488905400,1488905460,1488905520,1488905580,1488905640,1488905700,1488905760,1488905820,1488905880,1488905940,1488906000,1488906060,1488906120,1488906180,1488906240,1488906300,1488906360,1488906420,1488906480,1488906540,1488906600,1488906660,1488906720,1488906780,1488906840,1488906900,1488906960,1488907020,1488907080,1488907140,1488907200,1488907260,1488907320,1488907380,1488907440,1488907500,1488907560,1488907620,1488907680,1488907740,1488907800,1488907860,1488907920,1488907980,1488908040,1488908100,1488908160,1488908220,1488908280,1488908340,1488908400,1488908460,1488908520,1488908580,1488908640,1488908700,1488908760,1488908820,1488908880,1488908940,1488909000,1488909060,1488909120,1488909180,1488909240,1488909300,1488909360,1488909420,1488909480,1488909540,1488909600,1488909660,1488909720,1488909780,1488909840,1488909900,1488909960,1488910020,1488910080,1488910140,1488910200,1488910260,1488910320,1488910380,1488910440,1488910500,1488910560,1488910620,1488910680,1488910740,1488910800,1488910860,1488910920,1488910980,1488911040,1488911100,1488911160,1488911220,1488911280,1488911340,1488911400,1488911460,1488911520,1488911580,1488911640,1488911700,1488911760,1488911820,1488911880,1488911940,1488912000,1488912060,1488912120,1488912180,1488912240,1488912300,1488912360,1488912420,1488912480,1488912540,1488912600,1488912660,1488912720,1488912780,1488912840,1488912900,1488912960,1488913020,1488913080,1488913140,1488913200,1488913260,1488913320,1488913380,1488913440,1488913500,1488913560,1488913620,1488913680,1488913740,1488913800,1488913860,1488913920,1488913980,1488914040,1488914100,1488914160,1488914220,1488914280,1488914340,1488914400,1488914460,1488914520,1488914580,1488914640,1488914700,1488914760,1488914820,1488914880,1488914940,1488915000,1488915060,1488915120,1488915180,1488915240,1488915300,1488915360,1488915420,1488915480,1488915540,1488915600,1488915660,1488915720,1488915780,1488915840,1488915900,1488915960,1488916020,1488916080,1488916140,1488916200,1488916260,1488916320,1488916380,1488916440,1488916500,1488916560,1488916620,1488916680,1488916740,1488916800,1488916860,1488916920,1488916980,1488917040,1488917100,1488917160,1488917220,1488917280,1488917340,1488917400,1488917460,1488917520,1488917580,1488917640,1488917700,1488917760,1488917820,1488917880,1488917940,1488918000,1488918060,1488918120,1488918180,1488918240,1488918300,1488918360,1488918420,1488918480,1488918540,1488918600,1488918660,1488918720,1488918780,1488918840,1488918900,1488918960,1488919020,1488919080,1488919140,1488919200,1488919260,1488919320,1488919380,1488919440,1488919500,1488919560,1488919620,1488919680,1488919740,1488919800,1488919860,1488919920,1488919980,1488920040,1488920100,1488920160,1488920220,1488920280,1488920340,1488920400,1488920460,1488920520,1488920580,1488920640,1488920700,1488920760,1488920820,1488920880,1488920940,1488921000,1488921060,1488921120,1488921180,1488921240,1488921300,1488921360,1488921420,1488921480,1488921540,1488921600,1488921660,1488921720,1488921780,1488921840,1488921900,1488921960,1488922020,1488922080,1488922140,1488922200,1488922260,1488922320,1488922380,1488922440,1488922500,1488922560,1488922620,1488922680,1488922740,1488922800,1488922860,1488922920,1488922980,1488923040,1488923100,1488923160,1488923220,1488923280,1488923340,1488923400,1488923460,1488923520,1488923580,1488923640,1488923700,1488923760,1488923820,1488923880,1488923940,1488924000,1488924060,1488924120,1488924180,1488924240,1488924300,1488924360,1488924420,1488924480,1488924540,1488924600,1488924660,1488924720,1488924780,1488924840,1488924900,1488924960,1488925020,1488925080,1488925140,1488925200,1488925260,1488925320,1488925380,1488925440,1488925500,1488925560,1488925620,1488925680,1488925740,1488925800,1488925860,1488925920,1488925980,1488926040,1488926100,1488926160,1488926220,1488926280,1488926340,1488926400,1488926460,1488926520,1488926580,1488926640,1488926700,1488926760,1488926820,1488926880,1488926940,1488927000,1488927060,1488927120,1488927180,1488927240,1488927300,1488927360,1488927420,1488927480,1488927540,1488927600,1488927660,1488927720,1488927780,1488927840,1488927900,1488927960,1488928020,1488928080,1488928140,1488928200,1488928260,1488928320,1488928380,1488928440,1488928500,1488928560,1488928620,1488928680,1488928740,1488928800,1488928860,1488928920,1488928980,1488929040,1488929100,1488929160,1488929220,1488929280,1488929340,1488929400,1488929460,1488929520,1488929580,1488929640,1488929700,1488929760,1488929820,1488929880,1488929940,1488930000,1488930060,1488930120,1488930180,1488930240,1488930300,1488930360,1488930420,1488930480,1488930540,1488930600,1488930660,1488930720,1488930780,1488930840,1488930900,1488930960,1488931020,1488931080,1488931140,1488931200,1488931260,1488931320,1488931380,1488931440,1488931500,1488931560,1488931620,1488931680,1488931740,1488931800,1488931860,1488931920,1488931980,1488932040,1488932100,1488932160,1488932220,1488932280,1488932340,1488932400,1488932460,1488932520,1488932580,1488932640,1488932700,1488932760,1488932820,1488932880,1488932940,1488933000,1488933060,1488933120,1488933180,1488933240,1488933300,1488933360,1488933420,1488933480,1488933540,1488933600,1488933660,1488933720,1488933780,1488933840,1488933900,1488933960,1488934020,1488934080,1488934140,1488934200,1488934260,1488934320,1488934380,1488934440,1488934500,1488934560,1488934620,1488934680,1488934740,1488934800,1488934860,1488934920,1488934980,1488935040,1488935100,1488935160,1488935220,1488935280,1488935340,1488935400,1488935460,1488935520,1488935580,1488935640,1488935700,1488935760,1488935820,1488935880,1488935940,1488936000,1488936060,1488936120,1488936180,1488936240,1488936300,1488936360,1488936420,1488936480,1488936540,1488936600,1488936660,1488936720,1488936780,1488936840,1488936900,1488936960,1488937020,1488937080,1488937140,1488937200,1488937260,1488937320,1488937380,1488937440,1488937500,1488937560,1488937620,1488937680,1488937740,1488937800,1488937860,1488937920,1488937980,1488938040,1488938100,1488938160,1488938220,1488938280,1488938340,1488938400,1488938460,1488938520,1488938580,1488938640,1488938700,1488938760,1488938820,1488938880,1488938940,1488939000,1488939060,1488939120,1488939180,1488939240,1488939300,1488939360,1488939420,1488939480,1488939540,1488939600,1488939660,1488939720,1488939780,1488939840,1488939900,1488939960,1488940020,1488940080,1488940140,1488940200,1488940260,1488940320,1488940380,1488940440,1488940500,1488940560,1488940620,1488940680,1488940740,1488940800,1488940860,1488940920,1488940980,1488941040,1488941100,1488941160,1488941220,1488941280,1488941340,1488941400,1488941460,1488941520,1488941580,1488941640,1488941700,1488941760,1488941820,1488941880,1488941940,1488942000,1488942060,1488942120,1488942180,1488942240,1488942300,1488942360,1488942420,1488942480,1488942540,1488942600,1488942660,1488942720,1488942780,1488942840,1488942900,1488942960,1488943020,1488943080,1488943140,1488943200,1488943260,1488943320,1488943380,1488943440,1488943500,1488943560,1488943620,1488943680,1488943740,1488943800,1488943860,1488943920,1488943980,1488944040,1488944100,1488944160,1488944220,1488944280,1488944340,1488944400,1488944460,1488944520,1488944580,1488944640,1488944700,1488944760,1488944820,1488944880,1488944940,1488945000,1488945060,1488945120,1488945180,1488945240,1488945300,1488945360,1488945420,1488945480,1488945540,1488945600,1488945660,1488945720,1488945780,1488945840,1488945900,1488945960,1488946020,1488946080,1488946140,1488946200,1488946260,1488946320,1488946380,1488946440,1488946500,1488946560,1488946620,1488946680,1488946740,1488946800,1488946860,1488946920,1488946980,1488947040,1488947100,1488947160,1488947220,1488947280,1488947340,1488947400,1488947460,1488947520,1488947580,1488947640,1488947700,1488947760,1488947820,1488947880,1488947940,1488948000,1488948060,1488948120,1488948180,1488948240,1488948300,1488948360,1488948420,1488948480,1488948540,1488948600,1488948660,1488948720,1488948780,1488948840,1488948900,1488948960,1488949020,1488949080,1488949140,1488949200,1488949260,1488949320,1488949380,1488949440,1488949500,1488949560,1488949620,1488949680,1488949740,1488949800,1488949860,1488949920,1488949980,1488950040,1488950100,1488950160,1488950220,1488950280,1488950340,1488950400,1488950460,1488950520,1488950580,1488950640,1488950700,1488950760,1488950820,1488950880,1488950940,1488951000,1488951060,1488951120,1488951180,1488951240,1488951300,1488951360,1488951420,1488951480,1488951540,1488951600,1488951660,1488951720,1488951780,1488951840,1488951900,1488951960,1488952020,1488952080,1488952140,1488952200,1488952260,1488952320,1488952380,1488952440,1488952500,1488952560,1488952620,1488952680,1488952740,1488952800,1488952860,1488952920,1488952980,1488953040,1488953100,1488953160,1488953220,1488953280,1488953340,1488953400,1488953460,1488953520,1488953580,1488953640,1488953700,1488953760,1488953820,1488953880,1488953940,1488954000,1488954060,1488954120,1488954180,1488954240,1488954300,1488954360,1488954420,1488954480,1488954540,1488954600,1488954660,1488954720,1488954780,1488954840,1488954900,1488954960,1488955020,1488955080,1488955140,1488955200,1488955260,1488955320,1488955380,1488955440,1488955500,1488955560,1488955620,1488955680,1488955740,1488955800,1488955860,1488955920,1488955980,1488956040,1488956100,1488956160,1488956220,1488956280,1488956340,1488956400,1488956460,1488956520,1488956580,1488956640,1488956700,1488956760,1488956820,1488956880,1488956940,1488957000,1488957060,1488957120,1488957180,1488957240,1488957300,1488957360,1488957420,1488957480,1488957540,1488957600,1488957660,1488957720,1488957780,1488957840,1488957900,1488957960,1488958020,1488958080,1488958140,1488958200,1488958260,1488958320,1488958380,1488958440,1488958500,1488958560,1488958620,1488958680,1488958740,1488958800,1488958860,1488958920,1488958980,1488959040,1488959100,1488959160,1488959220,1488959280,1488959340,1488959400,1488959460,1488959520,1488959580,1488959640,1488959700,1488959760,1488959820,1488959880,1488959940,1488960000,1488960060,1488960120,1488960180,1488960240,1488960300,1488960360,1488960420,1488960480,1488960540,1488960600,1488960660,1488960720,1488960780,1488960840,1488960900,1488960960,1488961020,1488961080,1488961140,1488961200,1488961260,1488961320,1488961380,1488961440,1488961500,1488961560,1488961620,1488961680,1488961740,1488961800,1488961860,1488961920,1488961980,1488962040,1488962100,1488962160,1488962220,1488962280,1488962340,1488962400,1488962460,1488962520,1488962580,1488962640,1488962700,1488962760,1488962820,1488962880,1488962940,1488963000,1488963060,1488963120,1488963180,1488963240,1488963300,1488963360,1488963420,1488963480,1488963540,1488963600,1488963660,1488963720,1488963780,1488963840,1488963900,1488963960,1488964020,1488964080,1488964140,1488964200,1488964260,1488964320,1488964380,1488964440,1488964500,1488964560,1488964620,1488964680,1488964740,1488964800,1488964860,1488964920,1488964980,1488965040,1488965100,1488965160,1488965220,1488965280,1488965340,1488965400,1488965460,1488965520,1488965580,1488965640,1488965700,1488965760,1488965820,1488965880,1488965940,1488966000,1488966060,1488966120,1488966180,1488966240,1488966300,1488966360,1488966420,1488966480,1488966540,1488966600,1488966660,1488966720,1488966780,1488966840,1488966900,1488966960,1488967020,1488967080,1488967140,1488967200,1488967260,1488967320,1488967380,1488967440,1488967500,1488967560,1488967620,1488967680,1488967740,1488967800,1488967860,1488967920,1488967980,1488968040,1488968100,1488968160,1488968220,1488968280,1488968340,1488968400,1488968460,1488968520,1488968580,1488968640,1488968700,1488968760,1488968820,1488968880,1488968940,1488969000,1488969060,1488969120,1488969180,1488969240,1488969300,1488969360,1488969420,1488969480,1488969540,1488969600,1488969660,1488969720,1488969780,1488969840,1488969900,1488969960,1488970020,1488970080,1488970200,1488970260,1488970320,1488970380,1488970440,1488970500,1488970560,1488970620,1488970680,1488970740,1488970800,1488970860,1488970920,1488970980,1488971040,1488971100,1488971160,1488971220,1488971280,1488971340,1488971400,1488971460,1488971520,1488971580,1488971640,1488971700,1488971760,1488971820,1488971880,1488971940,1488972000,1488972060,1488972120,1488972180,1488972240,1488972300,1488972360,1488972420,1488972480,1488972540,1488972600,1488972660,1488972720,1488972780,1488972840,1488972900,1488972960,1488973020,1488973080,1488973140,1488973200,1488973260,1488973320,1488973380,1488973440,1488973500,1488973560,1488973620,1488973680,1488973740,1488973800,1488973860,1488973920,1488973980,1488974040,1488974100,1488974160,1488974220,1488974280,1488974340,1488974400,1488974460,1488974520,1488974580,1488974640,1488974700,1488974760,1488974820,1488974880,1488974940,1488975000,1488975060,1488975120,1488975180,1488975240,1488975300,1488975360,1488975420,1488975480,1488975540,1488975600,1488975660,1488975720,1488975780,1488975840,1488975900,1488975960,1488976020,1488976080,1488976140,1488976200,1488976260,1488976320,1488976380,1488976440,1488976500,1488976560,1488976620,1488976680,1488976740,1488976800,1488976860,1488976920,1488976980,1488977040,1488977100,1488977160,1488977220,1488977280,1488977340,1488977400,1488977460,1488977520,1488977580,1488977640,1488977700,1488977760,1488977820,1488977880,1488977940,1488978000,1488978060,1488978120,1488978180,1488978240,1488978300,1488978360,1488978420,1488978480,1488978540,1488978600,1488978660,1488978720,1488978780,1488978840,1488978900,1488978960,1488979020,1488979080,1488979140,1488979200,1488979260,1488979320,1488979380,1488979440,1488979500,1488979560,1488979620,1488979680,1488979740,1488979800,1488979860,1488979920,1488979980,1488980040,1488980100,1488980160,1488980220,1488980280,1488980340,1488980400,1488980460,1488980520,1488980580,1488980640,1488980700,1488980760,1488980820,1488980880,1488980940,1488981000,1488981060,1488981120,1488981180,1488981240,1488981300,1488981360,1488981420,1488981480,1488981540,1488981600,1488981660,1488981720,1488981780,1488981840,1488981900,1488981960,1488982020,1488982080,1488982140,1488982200,1488982260,1488982320,1488982380,1488982440,1488982500,1488982560,1488982620,1488982680,1488982740,1488982800,1488982860,1488982920,1488982980,1488983040,1488983100,1488983160,1488983220,1488983280,1488983340,1488983400,1488983460,1488983520,1488983580,1488983640,1488983700,1488983760,1488983820,1488983880,1488983940,1488984000,1488984060,1488984120,1488984180,1488984240,1488984300,1488984360,1488984420,1488984480,1488984540,1488984600,1488984660,1488984720,1488984780,1488984840,1488984900,1488984960,1488985020,1488985080,1488985140,1488985200,1488985260,1488985320,1488985380,1488985440,1488985500,1488985560,1488985620,1488985680,1488985740,1488985800,1488985860,1488985920,1488985980,1488986040,1488986100,1488986160,1488986220,1488986280,1488986340,1488986400,1488986460,1488986520,1488986580,1488986640,1488986700,1488986760,1488986820,1488986880,1488986940,1488987000,1488987060,1488987120,1488987180,1488987240,1488987300,1488987360,1488987420,1488987480,1488987540,1488987600,1488987660,1488987720,1488987780,1488987840,1488987900,1488987960,1488988020,1488988080,1488988140,1488988200,1488988260,1488988320,1488988380,1488988440,1488988500,1488988560,1488988620,1488988680,1488988740,1488988800],&quot;name&quot;:&quot;test&quot;},{&quot;values&quot;:[0.018,0.024,0.012,0.012,0.012,0.024,0.042,0.0,0.03,0.012,0.15,0.0,0.024,0.0,0.024,0.018,0.0,0.012,0.0,0.018,0.024,0.0,0.012,0.0,0.024,0.018,0.0,0.012,0.0,0.012,0.036,0.012,0.012,0.0,0.018,0.161,0.0,0.012,0.0,0.0,0.054,0.012,0.682,0.048,0.018,0.078,0.072,0.024,0.036,0.156,0.036,0.0,0.012,0.0,0.0,0.03,0.012,0.012,0.0,0.024,0.156,1.107,0.072,0.09,0.072,0.114,0.096,0.072,0.096,0.084,0.233,0.072,0.09,0.072,0.072,0.09,0.072,0.072,0.09,0.096,0.078,0.066,0.042,0.203,0.197,0.06,0.036,0.012,0.197,0.018,0.179,0.024,0.156,0.042,0.042,0.09,0.012,0.156,0.102,0.024,0.06,0.054,0.138,0.03,0.132,0.03,0.024,0.042,0.066,0.156,0.203,0.138,0.144,0.138,0.036,0.012,0.0,0.018,0.0,0.012,0.09,0.0,0.024,0.012,0.167,0.018,0.0,0.018,0.0,0.018,0.179,0.156,0.0,0.096,0.0,0.072,0.048,0.06,0.018,0.209,0.024,0.036,0.054,0.054,0.072,0.066,0.036,0.036,0.042,0.012,0.018,0.012,0.09,0.0,0.024,0.03,0.024,0.0,0.0,0.012,0.06,0.072,0.018,0.443,0.323,0.03,0.042,0.144,0.024,0.018,0.018,0.0,0.018,0.0,0.018,0.024,0.0,0.018,0.0,0.0,3.314,0.036,0.036,0.281,0.251,0.293,0.293,0.275,0.281,0.066,0.437,1.077,1.113,1.477,1.376,1.328,0.772,0.993,0.772,0.831,0.825,0.801,0.67,0.395,0.269,0.365,0.197,0.251,0.772,0.209,0.197,0.15,0.167,0.15,0.161,0.173,0.15,0.161,0.15,0.161,0.173,0.15,0.167,0.167,0.161,0.257,0.173,0.203,0.167,0.15,0.185,0.15,0.173,0.15,0.167,0.167,0.15,0.161,0.15,0.161,0.173,0.478,0.239,0.191,0.431,0.179,0.173,0.251,0.245,0.401,0.185,1.567,0.335,0.209,0.161,0.209,0.383,0.221,0.197,0.209,0.042,0.012,0.03,0.036,0.042,0.024,0.012,0.012,0.078,0.018,0.012,0.0,0.012,0.0,0.024,0.012,0.0,0.0,0.024,0.012,0.042,0.072,0.036,0.616,0.024,0.09,0.072,0.0,0.161,0.012,0.03,0.0,0.0,0.0,0.018,0.042,0.0,0.0,0.012,0.0,0.036,0.024,0.012,0.0,0.024,0.173,0.024,0.0,0.012,0.012,0.036,0.024,0.024,0.108,0.03,0.018,0.0,0.042,0.012,0.0,0.03,0.012,0.018,0.0,0.0,0.0,0.036,0.0,0.0,0.012,0.03,0.0,0.012,0.024,0.0,0.036,0.0,0.0,0.012,0.018,0.018,0.012,0.042,0.018,0.144,0.108,0.132,0.042,0.0,0.024,0.036,0.012,0.018,0.0,0.012,0.03,0.048,0.0,0.018,0.024,0.03,0.018,0.012,0.024,0.012,0.042,0.0,0.0,0.012,0.0,0.132,0.03,0.018,0.096,0.078,0.03,0.0,0.036,0.024,0.024,0.024,0.024,0.012,0.012,0.0,0.03,0.036,0.012,0.0,0.0,0.036,0.0,0.012,0.0,0.024,0.048,0.0,0.018,0.0,0.024,0.066,0.072,0.09,0.0,0.622,0.066,0.084,0.156,0.0,0.012,0.018,0.024,0.018,0.012,0.096,0.018,0.0,0.024,0.012,0.012,0.018,0.0,0.0,0.0,0.024,0.024,0.024,0.012,0.024,0.0,0.161,0.012,0.036,0.0,0.024,0.036,0.012,0.018,0.012,0.018,0.018,0.0,0.012,0.0,0.012,0.036,0.0,0.018,0.0,0.012,0.024,0.0,0.012,0.0,0.012,0.012,0.0,0.018,0.0,0.024,0.024,0.012,0.0,0.024,0.0,0.12,0.024,0.024,0.0,0.018,0.03,0.0,0.018,0.012,0.018,0.018,0.0,0.012,0.0,0.024,0.024,0.012,0.012,0.012,0.024,0.024,0.185,0.132,0.0,0.09,0.06,0.0,0.054,0.0,0.0,0.018,0.0,0.036,0.012,0.0,0.03,0.102,0.0,0.0,0.024,0.066,0.018,0.012,0.0,0.353,0.173,0.072,0.024,0.024,0.024,0.048,0.036,0.0,0.018,0.012,0.12,0.072,0.09,0.072,0.742,0.652,0.108,0.024,0.072,0.018,0.054,0.0,0.018,0.0,0.036,0.012,0.0,0.012,0.0,0.012,0.024,0.0,0.0,0.0,0.0,0.012,0.036,0.012,0.03,0.024,0.054,0.042,0.156,0.036,0.012,0.024,0.048,0.024,0.012,0.03,0.036,1.095,0.048,0.084,0.437,0.066,0.036,0.0,0.018,0.0,0.042,0.156,0.0,0.018,0.0,0.03,0.132,0.024,0.012,0.018,0.15,0.0,0.0,0.012,0.0,0.048,0.084,0.054,0.042,0.156,0.036,0.024,0.0,0.0,0.018,0.018,0.042,0.024,0.048,0.012,0.042,0.024,0.0,0.018,0.0,0.036,0.024,0.0,0.018,0.0,0.048,0.024,0.024,0.012,0.0,0.048,0.024,0.0,0.018,0.0,0.03,0.024,0.0,0.024,0.0,0.03,0.0,0.0,0.024,0.024,0.012,0.012,0.0,0.012,0.018,0.018,0.012,0.0,0.0,0.024,0.048,0.108,0.078,0.096,0.084,0.126,0.156,0.114,0.066,0.742,0.628,0.634,0.132,0.024,0.628,0.042,0.06,0.018,0.012,0.012,0.042,0.012,0.012,0.0,0.012,0.0,0.018,0.0,0.018,0.024,0.03,0.024,0.072,0.036,0.012,0.024,0.024,0.0,0.018,0.0,0.024,0.024,0.0,0.0,0.018,0.018,0.036,0.0,0.012,0.018,0.018,0.03,0.0,0.024,0.018,0.012,0.024,0.0,0.0,0.012,0.018,0.024,0.0,0.0,0.012,0.042,0.084,0.024,0.012,0.066,0.018,0.012,0.0,0.0,0.024,0.018,0.0,0.012,0.0,0.0,0.036,0.012,0.012,0.0,0.0,0.042,0.048,0.0,0.018,0.0,0.048,0.024,0.03,0.024,0.024,0.012,0.048,0.0,0.012,0.018,0.114,0.024,0.0,0.024,0.0,0.042,0.0,0.0,0.018,0.0,0.03,0.024,0.0,0.012,0.0,0.03,0.0,0.012,0.0,0.0,0.078,0.072,0.09,0.084,0.09,0.167,0.144,0.096,0.233,0.06,0.772,0.61,0.622,0.61,0.347,0.054,0.622,0.634,0.0,0.012,0.012,0.012,0.0,0.0,0.024,0.012,0.012,0.042,0.042,0.0,0.03,0.0,0.024,0.0,0.0,0.024,0.012,0.0,0.0,0.024,0.036,0.036,0.0,0.0,0.012,0.144,0.024,0.0,0.012,0.012,0.03,0.03,0.0,0.012,0.024,0.024,0.048,0.0,0.018,0.012,0.036,0.0,0.0,0.024,0.018,0.06,0.102,0.072,0.048,0.036,0.167,0.054,0.078,0.03,0.0,0.048,0.024,0.0,0.024,0.012,0.03,0.012,0.0,0.024,0.012,0.036,0.0,0.0,0.024,0.0,0.066,0.06,0.066,0.024,0.024,0.036,0.012,0.0,0.024,0.0,0.03,0.042,0.018,0.12,0.0,0.042,0.012,0.018,0.018,0.0,0.03,0.024,0.0,0.0,0.018,0.012,0.042,0.012,0.024,0.012,0.06,0.108,0.072,0.09,0.072,0.12,0.191,0.167,0.281,0.084,0.221,0.06,0.036,0.03,0.76,0.628,0.623,0.611,0.629,0.635,0.635,0.635,0.234,0.156,0.108,0.12,0.108,0.06,0.048,0.024,0.204,0.671,0.653,0.198,0.0,0.018,0.048,0.0,0.0,0.0,0.048,0.024,0.0,0.012,0.03,0.024,0.042,0.132,0.012,0.024,0.012,0.042,0.018,0.018,0.0,0.042,0.036,0.0,0.0,0.018,0.018,0.036,0.0,0.0,0.012,0.054,0.096,0.072,0.042,0.06,0.15,0.036,0.0,0.024,0.012,0.03,0.042,0.0,0.0,0.0,0.03,0.024,0.012,0.012,0.024,0.012,0.036,0.012,0.012,0.0,0.042,0.036,0.0,0.078,0.012,0.024,0.042,0.036,0.0,0.018,0.012,0.042,0.144,0.018,0.0,0.018,0.06,0.024,0.018,0.0,0.012,0.036,0.012,0.018,0.0,0.024,0.024,0.0,0.018,0.0,0.054,0.048,0.078,0.09,0.072,0.114,0.179,0.12,0.138,0.126,0.191,0.096,0.072,0.096,0.084,0.096,0.048,0.658,0.61,0.61,0.64,0.766,0.61,0.622,0.61,0.484,0.287,0.156,0.132,0.09,0.126,1.591,0.634,0.042,0.0,0.036,0.048,0.024,0.024,0.0,0.036,0.012,0.012,0.0,0.024,0.024,0.03,0.048,0.0,0.0,0.03,0.036,0.018,0.156,0.018,0.03,0.024,0.0,0.012,0.018,0.03,0.024,0.0,0.012,0.018,0.161,0.084,0.012,0.036,0.06,0.156,0.024,0.0,0.012,0.0,0.036,0.132,0.012,0.0,0.018,0.024,0.024,0.0,0.0,0.012,0.024,0.156,0.0,0.0,0.012,0.173,0.132,0.024,0.0,0.018,0.024,0.024,0.0,0.024,0.018,0.024,0.012,0.0,0.0,0.018,0.03,0.024,0.0,0.024,0.018,0.15,0.0,0.012,0.012,0.0,0.048,0.024,0.0,0.012,0.012,0.048,0.078,0.0,1.453,0.078,0.126,0.144,0.126,0.072,0.221,0.227,0.096,0.072,0.096,0.072,0.12,0.096,0.072,0.096,0.078,0.072,0.048,0.191,0.61,0.634,0.634,0.646,0.634,0.628,0.634,0.796,0.622,0.359,0.203,0.167,0.269,0.084,0.09,0.048,0.042,0.042,0.024,0.042,0.024,0.042,0.06,0.024,0.688,0.287,0.06,0.018,0.0,0.012,0.0,0.018,0.03,0.0,0.0,0.018,0.0,0.03,0.0,0.0,0.024,0.018,0.048,0.072,0.15,0.054,0.018,0.018,0.012,0.0,0.018,0.018,0.03,0.012,0.036,0.012,0.012,0.012,0.024,0.0,0.018,0.0,0.036,0.048,0.144,0.024,0.0,0.036,0.036,0.012,0.036,0.024,0.03,0.012,0.0,0.024,0.018,0.036,0.024,0.0,0.0,0.012,0.018,0.024,0.036,0.0,0.018,0.03,0.0,0.012,0.0,0.0,0.018,0.0,0.0,0.0,0.012,0.658,0.658,0.072,0.072,0.09,0.12,0.173,0.114,0.114,0.096,0.084,0.084,0.084,0.072,0.072,0.09,0.072,0.084,0.072,0.048,0.682,0.622,0.61,0.61,0.622,0.622,0.658,0.61,0.61,0.634,0.772,0.371,0.156,0.108,0.072,0.09,0.06,0.036,0.024,1.878,0.664,0.634,0.0,0.012,0.012,0.138,0.012,0.012,0.0,0.012,0.018,0.0,0.012,0.0,0.0,0.012,0.054,0.0,0.0,0.012,0.024,0.024,0.0,0.012,0.012,0.06,0.084,0.054,0.03,0.132,0.042,0.012,0.0,0.012,0.012,0.036,0.012,0.0,0.0,0.012,0.012,0.024,0.0,0.024,0.012,0.018,0.042,0.024,0.024,0.012,0.042,0.012,0.012,0.0,0.018,0.03,0.012,0.0,0.0,0.012,0.018,0.024,0.0,0.024,0.012,0.054,0.024,0.0,0.0,0.024,0.018,0.024,0.0,0.0,0.0,0.03,0.012,0.012,0.0,0.024,1.627,0.024,0.084,0.072,0.072,0.173,0.156,0.084,0.072,0.215,0.09,0.096,0.072,0.072,0.072,0.09,0.108,0.102,0.072,0.09,0.096,0.096,0.036,0.036,0.622,0.646,0.622,0.61,0.61,0.634,0.64,0.622,0.61,0.634,0.628,0.64,0.55,0.215,0.06,2.147,0.76,0.024,0.0,0.012,0.024,0.018,0.0,0.012,0.0,0.024,0.018,0.0,0.012,0.0,0.012,0.018,0.012,0.0,0.0,0.012,0.036,0.0,0.012,0.0,0.018,0.233,0.072,0.03,0.0,0.15,0.018,0.0,0.012,0.0,0.0,0.036,0.0,0.012,0.0,0.018,0.15,0.024,0.012,0.012,0.0,0.024,0.048,0.012,0.036,0.0,0.018,0.0,0.024,0.0,0.018,0.03,0.0,0.018,0.0,0.012,0.018,0.0,0.012,0.0,0.024,0.042,0.0,0.018,0.012,0.018,0.018,0.0,0.018,0.012,0.018,0.018,0.0,0.018,0.0,0.018,0.042,0.036,0.024,0.036,0.598,0.102,0.15,0.072,0.084,0.066,0.078,0.161,0.012,0.15,0.036,0.042,0.0,0.018,0.012,0.012,0.79,0.042,0.012,0.09,0.072,0.108,0.203,0.09,0.072,0.084,0.132,0.072,0.096,0.108,0.084,0.108,0.072,0.084,0.072,0.072,0.108,0.072,0.096,0.09,0.096,0.054,0.024,0.024,0.066,0.06,0.15,0.012,0.167,0.024,0.102,0.156,0.227,0.036,0.185,0.042,0.09,0.03,0.209,0.156,0.012,0.042,0.06,0.084,0.024,0.018,0.06,0.036,0.156,0.012,0.012,0.179,0.144,0.012,0.0,0.024,0.084,0.018,0.042,0.036,0.024,0.06,0.018,0.06,0.048,0.0,0.084,0.06,0.084,0.03,0.0,0.084,0.024,0.132,0.042,0.024,0.048,0.132,0.03,0.012,0.072,0.036,0.024,0.024,0.036,0.048,0.042,0.054,0.012,0.09,0.012,0.167,0.012,0.012,0.018,0.0,0.191,0.108,0.048,0.042,0.132,0.078,0.072,0.03,0.012,0.018,0.036,0.024,0.0,0.0,0.024,0.018,0.0,0.018,0.012,0.018,1.023,0.078,0.072,0.251,0.263,0.293,0.293,0.263,0.263,0.215,0.311,0.209,0.239,0.185,0.185,0.197,0.52,1.567,1.238,0.825,0.987,0.784,0.987,0.801,0.796,0.801,0.796,0.79,0.796,0.76,0.658,0.484,0.353,0.359,0.281,0.245,0.185,0.173,0.981,0.772,0.179,0.161,0.15,0.15,0.15,0.209,0.335,0.185,0.173,0.161,0.179,0.15,0.173,0.15,0.042,0.048,0.0,0.018,0.012,0.018,0.012,0.138,0.102,0.018,0.173,0.227,0.09,0.138,0.203,0.102,0.227,0.048,0.066,0.712,0.072,0.036,0.0,1.394,0.048,0.018,0.161,0.036,0.042,0.0,0.03,0.072,0.012,0.054,0.024,0.024,0.024,0.018,0.132,0.0,0.0,0.036,0.0,0.0,0.012,0.024,0.036,0.09,0.066,0.024,0.61,0.072,0.066,0.03,0.024,0.018,0.024,0.048,0.0,0.018,0.0,0.036,0.096,0.012,0.0,0.024,0.012,0.012,0.0,0.0,0.012,0.018,0.0,0.042,0.132,0.018,0.072,0.0,0.072,0.024,0.0,0.042,0.024,0.132,0.024,0.0,0.03,0.048,0.0,0.0,0.018,0.018,0.012,0.042,0.0,0.018,0.024,0.0,0.0,0.0,0.0,0.03,0.018,0.156,0.0,0.012,0.144,0.0,0.012,0.0,0.024,0.018,0.084,0.024,0.132,0.018,0.018,0.0,0.012,0.024,0.024,0.012,0.018,0.012,0.024,0.0,0.036,0.012,0.012,0.0,0.018,0.048,0.0,0.0,0.024,0.012,0.072,0.042,0.024,0.036,0.0,0.042,0.0,0.024,0.024,0.0,0.042,0.0,0.012,0.0,0.012,0.042,0.024,0.0,0.012,0.0,0.03,0.0,0.0,0.018,0.024,0.03,0.024,0.072,0.012,0.0,0.054,0.066,0.078,0.096,0.036,0.06,0.634,0.179,0.024,0.03,0.042,0.012,0.012,0.012,0.012,0.024,0.0,0.012,0.0,0.036,0.048,0.012,0.0,0.018,0.0,0.042,0.0,0.0,0.018,0.012,0.066,0.0,0.048,0.0,0.018,0.036,0.0,0.0,0.024,0.018,0.024,0.0,0.018,0.0,0.018,0.048,0.012,0.0,0.018,0.0,0.024,0.0,0.012,0.024,0.012,0.036,0.024,0.012,0.0,0.024,0.018,0.0,0.012,0.0,0.012,0.114,0.048,0.024,0.024,0.024,0.018,0.0,0.0,0.024,0.012,0.15,0.0,0.018,0.0,0.012,0.036,0.012,0.012,0.012,0.0,0.048,0.024,0.018,0.012,0.012,0.03,0.0,0.054,0.0,0.024,0.227,0.0,0.0,0.012,0.455,0.042,0.018,0.0,0.024,1.441,0.227,0.167,0.018,0.03,0.048,0.012,0.0,0.018,0.0,0.012,0.036,0.078,0.0,0.018,0.0,0.072,0.054,0.108,0.072,0.09,0.084,0.072,0.664,0.61,0.084,0.042,0.024,0.628,0.012,0.018,0.018,0.0,0.012,0.012,0.0,0.03,0.0,0.012,0.012,0.018,0.012,0.024,0.0,0.018,0.012,0.179,0.042,0.024,0.0,0.012,0.024,0.048,0.0,0.036,0.024,0.024,0.179,0.018,0.144,0.036,0.036,0.102,0.0,0.012,0.0,0.036,0.036,0.0,0.012,0.024,0.036,0.036,0.0,0.012,0.024,0.042,0.036,0.0,0.012,0.0,0.114,0.09,0.054,0.042,0.012,0.024,0.012,0.0,0.0,0.024,0.036,0.024,0.0,0.018,0.012,0.03,0.024,0.0,0.0,0.0,0.03,0.024,0.024,0.018,0.0,0.048,0.036,0.09,0.018,0.0,0.018,0.036,0.018,0.018,0.018,0.042,0.012,0.0,0.018,0.012,0.03,0.024,0.0,0.0,0.018,0.03,0.048,0.0,0.0,0.0,0.018,0.042,0.018,0.012,0.018,0.03,0.108,0.072,0.096,0.072,0.084,0.108,0.084,0.634,0.754,0.52,0.072,0.036,0.042,0.108,0.622,0.054,0.012,0.018,0.018,0.042,0.012,0.018,0.024,0.054,0.042,0.012,0.018,0.0,0.024,0.018,0.0,0.012,0.024,0.0,0.036,0.179,0.0,0.0,0.012,0.018,0.024,0.024,0.0,0.0,0.03,0.048,0.024,0.012,0.018,0.03,0.012,0.0,0.012,0.0,0.03,0.042,0.024,0.012,0.0,0.03,0.156,0.0,0.024,0.0,0.024,0.096,0.012,0.132,0.03,0.161,0.024,0.0,0.0,0.0,0.018,0.0,0.03,0.012,0.012,0.012,0.024,0.0,0.018,0.024,0.03,0.132,0.0,0.024,0.018,0.048,0.191,0.024,0.012,0.03,0.036,0.024,0.0,0.024,0.012,0.03,0.012,0.03,0.0,0.012,0.018,0.0,0.012,0.0,0.0,0.036,0.0,0.012,0.0,0.018,0.012,0.0,0.0,0.012,0.012,0.054,0.024,0.096,0.072,0.084,0.126,0.144,0.144,0.245,0.114,0.191,0.024,0.0,0.628,0.61,0.64,0.61,0.478,0.144,0.036,0.048,0.048,0.754,0.622,0.018,0.03,0.024,0.0,0.024,0.018,0.072,0.024,0.0,0.024,0.012,0.066,0.024,0.0,0.012,0.0,0.024,0.012,0.0,0.0,0.012,0.03,0.0,0.0,0.012,0.012,0.03,0.012,0.024,0.0,0.048,0.15,0.024,0.0,0.012,0.012,0.15,0.012,0.0,0.0,0.0,0.114,0.084,0.042,0.042,0.024,0.03,0.0,0.0,0.0,0.024,0.024,0.144,0.012,0.0,0.024,0.156,0.012,0.0,0.024,0.0,0.036,0.156,0.012,0.0,0.018,0.024,0.048,0.06,0.072,0.024,0.012,0.042,0.024,0.042,0.0,0.03,0.042,0.018,0.03,0.0,0.036,0.036,0.012,0.024,0.03,0.042,0.042,0.0,0.024,0.012,0.03,0.042,0.03,0.018,0.012,0.012,0.066,0.03,0.054,0.126,0.12,0.167,0.108,0.221,0.114,0.096,0.096,0.072,0.084,0.06,0.072,0.012,0.61,0.634,0.61,0.658,0.652,0.61,0.359,0.167,0.108,0.072,0.897,0.64,0.449,0.161,0.024,0.072,0.0,0.012,0.018,0.03,0.012,0.018,0.024,0.012,0.048,0.036,0.024,0.0,0.042,0.024,0.0,0.0,0.018,0.024,0.012,0.0,0.024,0.0,0.018,0.0,0.0,0.0,0.012,0.03,0.156,0.012,0.0,0.024,0.042,0.102,0.042,0.012,0.132,0.036,0.167,0.0,0.018,0.0,0.108,0.048,0.0,0.0,0.012,0.036,0.024,0.0,0.084,0.0,0.024,0.042,0.012,0.024,0.0,0.048,0.024,0.012,0.018,0.0,0.018,0.048,0.0,0.024,0.0,0.036,0.024,0.0,0.0,0.018,0.054,0.024,0.012,0.03,0.012,0.024,0.024,0.0,0.0,0.018,0.018,0.024,0.0,0.03,0.018,0.06,0.084,0.09,0.096,0.072,0.126,0.179,0.144,0.221,0.114,0.258,0.228,0.084,0.078,0.024,0.054,0.048,0.611,0.629,0.611,0.646,0.766,0.61,0.622,0.562,0.269,0.215,0.108,0.072,0.078,0.173,0.048,1.262,0.586,0.036,0.042,0.042,0.0,0.042,0.0,0.024,0.024,0.0,0.012,0.012,0.024,0.024,0.012,0.096,0.066,0.066,0.042,0.018,0.03,0.018,0.036,0.024,0.042,0.0,0.018,0.018,0.036,0.024,0.0,0.012,0.054,0.042,0.167,0.024,0.024,0.0,0.012,0.03,0.042,0.0,0.024,0.03,0.048,0.036,0.012,0.024,0.132,0.042,0.042,0.0,0.036,0.012,0.042,0.048,0.012,0.036,0.0,0.03,0.018,0.0,0.024,0.012,0.03,0.012,0.0,0.0,0.0,0.042,0.024,0.0,0.024,0.012,0.03,0.0,0.012,0.0,0.012,0.042,0.0,0.0,0.012,0.012,0.09,0.0,0.09,0.108,0.203,0.108,0.287,0.084,0.084,0.233,0.09,0.072,0.072,0.084,0.09,0.09,0.072,0.06,0.024,0.042,0.706,0.628,0.61,0.622,0.622,0.64,0.61,0.622,0.646,0.568,0.574,0.275,0.263,0.191,0.191,0.167,0.096,0.066,0.048,0.06,0.054,0.024,1.788,0.616,0.616,0.64,0.096,0.0,0.03,0.012,0.018,0.048,0.096,0.012,0.018,0.012,0.036,0.018,0.012,0.0,0.018,0.15,0.054,0.0,0.0,0.054,0.072,0.042,0.054,0.012,0.15,0.0,0.0,0.0,0.018,0.036,0.024,0.0,0.0,0.024,0.012,0.024,0.0,0.0,0.012,0.03,0.03,0.012,0.018,0.0,0.036,0.036,0.024,0.024,0.0,0.03,0.024,0.0,0.024,0.0,0.03,0.0,0.0,0.018,0.024,0.024,0.048,0.0,0.024,0.012,0.036,0.0,0.0,0.0,0.012,0.012,0.012,0.0,0.0,0.0,0.15,0.054,0.096,0.09,0.203,0.138,0.144,0.12,0.227,0.138,0.173,0.108,0.072,0.09,0.072,0.102,0.108,0.072,0.096,0.084,0.078,0.048,0.646,0.622,0.628,0.634,0.64,0.646,0.634,0.61,0.652,0.622,0.598,0.335,0.114,0.096,0.054,0.036,0.048,0.054,0.084,0.167,0.048,0.054,0.078,0.048,0.072,0.048,0.036,0.072,0.108,0.036,0.06,0.024,0.054,0.06,0.024,0.754,0.622,0.108,0.072,0.0,0.018,0.0,0.072,0.108,0.072,0.03,0.024,0.161,0.042,0.036,0.0,0.102,0.024,0.042,0.0,0.03,0.012,0.0,0.018,0.024,0.018,0.036,0.0,0.012,0.018,0.054,0.012,0.012,0.018,0.0,0.042,0.012,0.0,0.024,0.0,0.03,0.024,0.0,0.042,0.0,0.03,0.036,0.0,0.018,0.0,0.024,0.018,0.024,0.0,0.0,0.036,0.036,0.132,0.012,0.012,0.15,0.197,0.072,0.072,0.096,0.138,0.167,0.167,0.215,0.09,0.251,0.12,0.096,0.072,0.072,0.108,0.084,0.072,0.096,0.084,0.102,0.108,0.024,0.018,0.616,0.652,0.634,0.61,0.61,0.634,0.646,0.634,0.664,0.634,0.61,0.64,0.526,0.12,0.084,0.078,0.078,0.036,0.048,0.036,0.042,0.042,0.024,0.036,0.024,0.048,0.042,0.036,0.024,0.024,0.042,0.036,0.024,0.024,0.048,0.718,0.066,0.0,0.012,0.0,0.024,0.102,0.072,0.024,0.0,0.144,0.018,0.0,0.018,0.012,0.024,0.018,0.0,0.018,0.0,0.012,0.024,0.024,0.024,0.024,0.024,0.018,0.042,0.012,0.03,0.018,0.018,0.0,0.048,0.012,0.0,0.036,0.12,0.012,0.0,0.0,0.042,0.0,0.018,0.0,0.024,0.018,0.0,0.012,0.0,0.024,0.018,0.0,0.0,0.0,0.012,0.012,0.0,0.0,0.0,0.018,0.066,0.012,0.042,0.622,0.299,0.096,0.132,0.054,0.084,0.012,0.036,0.048,0.0,0.024,0.0,0.024,0.0,0.0,0.0,0.0,0.7,0.144,0.012,0.09,0.072,0.12,0.072,0.084,0.072,0.09,0.084,0.12,0.084,0.102,0.072,0.096,0.09,0.072,0.072,0.096,0.084,0.072,0.09,0.072,0.066,0.09,0.167,0.024,0.036,0.06,0.15,0.144,0.215,0.09,0.132,0.12,0.132,0.239,0.108,0.15,0.126,0.0,0.066,0.102,0.09,0.042,0.156,0.024,0.078,0.072,0.072,0.036,0.024,0.018,0.03,0.066,0.03,0.156,0.048,0.126,0.251,0.138,0.012,0.03,0.018,0.06,0.0,0.036,0.024,0.024,0.197,0.287,0.132,0.0,0.084,0.012,0.114,0.06,0.06,0.0,0.048,0.072,0.03,0.0,0.036,0.012,0.072,0.024,0.012,0.042,0.054,0.036,0.0,0.012,0.012,0.072,0.06,0.012,0.012,0.0,0.036,0.096,0.024,0.072,0.048,0.365,0.712,0.024,0.173,0.018,0.048,0.012,0.0,0.012,0.012,0.018,0.018,0.024,0.0,0.018,2.303,0.054,0.012,0.251,0.287,0.323,0.299,0.299,0.443,0.191,0.138,0.335,0.203,0.209,0.269,0.209,0.197,0.317,0.191,0.173,0.185,0.197,0.215,0.173,0.197,0.209,0.173,0.191,0.538,1.872,1.31,1.238,0.873,0.795,0.969,0.843,0.783,0.813,0.825,0.801,0.772,0.748,0.706,0.419,0.209,0.449,0.329,0.227,0.185,0.221,0.221,0.185,0.203,0.185,0.185,0.203,0.185,0.203,0.185,0.209,0.203,0.437,0.239,0.221,0.173,0.06,0.389,0.036,1.519,0.138,0.132,0.185,0.126,1.202,0.221,0.078,0.0,1.346,0.042,0.042,0.012,0.0,0.054,0.018,0.012,0.048,0.0,0.0,0.012,0.054,0.018,0.012,0.0,0.0,0.0,0.03,0.012,0.0,0.0,0.024,0.048,0.323,0.09,0.012,0.323,0.06,0.06,0.054,0.024,0.018,0.018,0.0,0.012,0.012,0.012,0.018,0.0,0.024,0.018,0.012,0.012,0.0,0.012,0.0,0.0,0.042,0.144,0.012,0.0,0.018,0.072,0.0,0.012,0.03,0.0,0.03,0.048,0.012,0.0,0.024,0.03,0.0,0.012,0.024,0.012,0.036,0.0,0.012,0.0,0.024,0.018,0.0,0.024,0.0,0.012,0.012,0.0,0.012,0.0,0.012,0.018,0.024,0.0,0.0,0.0,0.048,0.09,0.012,0.0,0.012,0.024,0.018,0.15,0.0,0.012,0.012,0.018,0.0,0.0,0.012,0.036,0.042,0.018,0.0,0.012,0.03,0.024,0.0,0.03,0.018,0.173,0.012,0.09,0.0,0.0,0.018,0.0,0.012,0.0,0.018,0.15,0.0,0.0,0.0,0.024,0.018,0.012,0.03,0.0,0.018,0.06,0.0,0.0,0.018,0.0,0.018,0.018,0.03,0.0,0.012,0.066,0.096,0.072,0.066,0.012,0.664,0.156,0.67,0.054,0.0,0.036,0.132,0.012,0.012,0.0,0.036,0.024,0.018,0.0,0.018,0.018,0.012,0.0,0.0,0.012,0.03,0.0,0.012,0.0,0.018,0.173,0.024,0.072,0.024,0.012,0.06,0.0,0.0,0.012,0.018,0.036,0.0,0.018,0.0,0.018,0.036,0.012,0.0,0.012,0.018,0.018,0.0,0.036,0.132,0.024,0.018,0.012,0.0,0.0,0.024,0.15,0.0,0.018,0.0,0.012,0.096,0.054,0.132,0.0,0.024,0.024,0.024,0.0,0.012,0.0,0.036,0.036,0.042,0.0,0.0,0.018,0.024,0.012,0.0,0.0,0.048,0.09,0.024,0.024,1.25,0.227,0.024,0.012,0.066,0.0,0.066,0.012,0.0,0.144,0.0,0.042,0.03,0.06,0.036,0.0,0.048,0.042,0.012,0.383,0.197,0.191,0.167,0.084,0.096,0.048,0.036,0.012,0.0,0.024,0.024,0.179,0.281,0.072,0.09,0.036,0.67,0.813,0.072,0.048,0.712,0.628,0.012,0.024,0.018,0.0,0.018,0.048,0.024,0.018,0.018,0.018,0.048,0.0,0.012,0.018,0.012,0.012,0.132,0.036,0.0,0.167,0.03,0.054,0.0,0.0,0.036,0.042,0.024,0.012,0.0,0.024,0.646,0.036,0.03,0.144,0.072,0.024,0.0,0.012,0.012,0.036,0.042,0.024,0.012,0.036,0.06,0.036,0.024,0.036,0.018,0.03,0.042,0.012,0.024,0.024,0.066,0.114,0.06,0.0,0.126,0.036,0.024,0.0,0.012,0.0,0.03,0.012,0.0,0.018,0.0,0.048,0.0,0.0,0.0,0.024,0.03,0.144,0.0,0.012,0.0,0.078,0.048,0.078,0.018,0.0,0.048,0.179,0.0,0.0,0.0,0.024,0.036,0.024,0.0,0.0,0.042,0.048,0.024,0.018,0.024,0.173,0.054,0.03,0.024,0.0,0.024,0.06,0.048,0.0,0.024,0.03,0.084,0.048,0.102,0.084,0.12,0.156,0.084,0.132,0.09,0.203,0.634,0.61,0.526,0.042,0.066,0.634,0.628,0.0,0.024,0.03,0.012,0.084,0.0,0.0,0.066,0.072,0.012,0.0,0.0,0.048,0.012,0.066,0.024,0.0,0.024,0.048,0.012,0.012,0.0,0.036,0.036,0.024,0.018,0.012,0.036,0.0,0.0,0.024,0.012,0.036,0.132,0.0,0.012,0.0,0.024,0.024,0.012,0.0,0.012,0.03,0.024,0.0,0.024,0.0,0.048,0.072,0.012,0.012,0.144,0.084,0.12,0.012,0.0,0.018,0.018,0.0,0.012,0.0,0.0,0.018,0.024,0.0,0.0,0.0,0.042,0.048,0.0,0.018,0.0,0.102,0.042,0.012,0.024,0.012,0.03,0.042,0.024,0.018,0.0,0.024,0.036,0.0,0.012,0.012,0.012,0.024,0.0,0.0,0.018,0.018,0.0,0.012,0.0,0.018,0.0,0.012,0.0,0.0,0.018,0.048,0.036,0.096,0.072,0.09,0.293,0.144,0.126,0.114,0.114,0.066,0.61,0.61,0.61,0.61,0.12,0.06,0.024,0.024,0.933,0.042,0.0,0.012,0.0,0.0,0.036,0.036,0.024,0.0,0.066,0.114,0.048,0.036,0.066,0.06,0.054,0.024,0.012,0.15,0.024,0.03,0.012,0.0,0.024,0.018,0.024,0.0,0.0,0.0,0.0,0.036,0.0,0.0,0.0,0.018,0.018,0.0,0.0,0.0,0.024,0.018,0.0,0.012,0.0,0.0,0.102,0.072,0.138,0.042,0.018,0.024,0.012,0.0,0.024,0.012,0.03,0.012,0.012,0.012,0.0,0.03,0.024,0.012,0.018,0.0,0.161,0.0,0.042,0.0,0.0,0.024,0.03,0.012,0.048,0.024,0.036,0.024,0.024,0.0,0.024,0.024,0.048,0.018,0.024,0.018,0.048,0.024,0.012,0.03,0.156,0.036,0.036,0.0,0.0,0.0,0.024,0.024,0.018,0.144,0.0,0.06,0.269,0.072,0.072,0.084,0.167,0.167,0.114,0.132,0.072,0.09,0.024,0.634,0.634,0.61,0.646,0.634,0.622,0.275,0.084,0.09,0.048,0.024,1.047,0.64,0.096,0.048,0.024,0.018,0.012,0.036,0.024,0.072,0.012,0.0,0.018,0.024,0.012,0.0,0.0,0.03,0.024,0.0,0.018,0.0,0.03,0.012,0.012,0.024,0.0,0.036,0.012,0.0,0.012,0.0,0.03,0.0,0.0,0.018,0.0,0.03,0.012,0.0,0.012,0.024,0.114,0.09,0.012,0.084,0.066,0.156,0.024,0.018,0.018,0.0,0.036,0.024,0.0,0.012,0.012,0.03,0.012,0.0,0.012,0.018,0.024,0.042,0.156,0.024,0.0,0.042,0.042,0.203,0.018,0.0,0.042,0.024,0.024,0.0,0.012,0.012,0.036,0.0,0.0,0.0,0.042,0.024,0.012,0.0,0.036,0.036,0.048,0.0,0.018,0.0,0.036,0.024,0.0,0.018,0.018,0.078,0.036,0.09,0.108,0.072,0.126,0.167,0.096,0.072,0.221,0.108,0.096,0.072,0.036,0.048,0.102,0.652,0.61,0.61,0.622,0.628,0.658,0.55,0.251,0.179,0.108,0.108,0.048,0.036,0.981,0.694,0.054,0.09,0.173,0.0,0.03,0.012,0.0,0.024,0.012,0.15,0.024,0.012,0.03,0.0,0.018,0.024,0.0,0.018,0.024,0.018,0.024,0.012,0.0,0.0,0.018,0.03,0.0,0.0,0.024,0.03,0.012,0.0,0.0,0.0,0.018,0.096,0.048,0.012,0.138,0.024,0.024,0.0,0.018,0.0,0.018,0.012,0.0,0.024,0.012,0.042,0.012,0.0,0.0,0.012,0.036,0.132,0.024,0.048,0.024,0.06,0.012,0.084,0.03,0.024,0.036,0.0,0.0,0.012,0.012,0.03,0.0,0.0,0.024,0.0,0.042,0.0,0.0,0.012,0.012,0.036,0.0,0.024,0.036,0.0,0.03,0.018,0.012,0.0,0.018,0.078,0.012,0.126,0.072,0.084,0.173,0.144,0.114,0.114,0.09,0.096,0.072,0.072,0.09,0.09,0.048,0.048,0.622,0.628,0.628,0.61,0.622,0.622,0.61,0.652,0.67,0.227,0.156,0.066,0.042,0.024,0.042,0.61,0.012,0.036,0.0,0.012,0.024,0.012,0.036,0.024,0.0,0.012,0.0,0.012,0.048,0.018,0.024,0.0,0.036,0.012,0.0,0.0,0.0,0.018,0.024,0.012,0.0,0.018,0.018,0.0,0.018,0.0,0.012,0.042,0.072,0.108,0.167,0.0,0.03,0.0,0.012,0.0,0.012,0.024,0.0,0.0,0.0,0.024,0.018,0.0,0.018,0.012,0.018,0.036,0.0,0.0,0.024,0.012,0.072,0.048,0.0,0.072,0.0,0.03,0.156,0.0,0.024,0.0,0.024,0.012,0.024,0.012,0.042,0.054,0.024,0.0,0.024,0.0,0.03,0.0,0.012,0.0,0.024,0.018,0.0,0.0,0.012,0.012,0.084,0.15,0.084,0.072,0.096,0.12,0.144,0.084,0.108,0.132,0.114,0.072,0.084,0.072,0.084,0.09,0.072,0.06,0.036,0.042,0.807,0.622,0.61,0.634,0.61,0.634,0.64,0.634,0.634,0.61,0.353,0.12,0.06,0.072,0.036,0.042,0.072,0.048,0.042,0.036,1.382,0.67,0.084,0.06,0.036,0.03,0.042,0.018,0.024,0.024,0.03,0.024,0.0,0.0,0.012,0.012,0.03,0.03,0.036,0.06,0.018,0.018,0.012,0.018,0.024,0.066,0.233,0.096,0.048,0.048,0.072,0.048,0.054,0.185,0.179,0.072,0.024,0.0,0.018,0.0,0.03,0.048,0.0,0.018,0.0,0.03,0.036,0.012,0.024,0.0,0.054,0.012,0.0,0.012,0.042,0.036,0.06,0.0,0.012,0.0,0.042,0.042,0.06,0.0,0.024,0.036,0.03,0.0,0.024,0.0,0.036,0.167,0.0,0.024,0.0,0.036,0.0,0.012,0.018,0.012,0.03,0.036,0.072,0.084,0.084,0.12,0.191,0.096,0.233,0.114,0.144,0.233,0.203,0.09,0.096,0.108,0.12,0.227,0.084,0.06,0.072,0.078,0.036,0.042,0.024,0.06,0.054,0.024,0.042,0.024,0.102,0.048,0.084,0.048,0.024,0.066,0.048,0.048,0.078,0.042,0.048,0.072,0.06,0.042,0.024,0.06,0.048,0.024,0.042,0.042,0.036,0.048,0.622,0.634,0.61,0.652,0.646,0.628,0.634,0.634,0.628,0.61,0.628,0.287,0.221,0.227,0.299,0.263,0.233,0.203,0.203,0.323,0.144,0.173,0.144,0.144,0.12,0.096,0.096,0.114,0.132],&quot;times&quot;:[1488729600,1488729660,1488729720,1488729780,1488729840,1488729900,1488729960,1488730020,1488730080,1488730140,1488730200,1488730260,1488730320,1488730380,1488730440,1488730500,1488730560,1488730620,1488730680,1488730740,1488730800,1488730860,1488730920,1488730980,1488731040,1488731100,1488731160,1488731220,1488731280,1488731340,1488731400,1488731460,1488731520,1488731580,1488731640,1488731700,1488731760,1488731820,1488731880,1488731940,1488732000,1488732060,1488732120,1488732180,1488732240,1488732300,1488732360,1488732420,1488732480,1488732540,1488732600,1488732660,1488732720,1488732780,1488732840,1488732900,1488732960,1488733020,1488733080,1488733140,1488733200,1488733260,1488733320,1488733380,1488733440,1488733500,1488733560,1488733620,1488733680,1488733740,1488733800,1488733860,1488733920,1488733980,1488734040,1488734100,1488734160,1488734220,1488734280,1488734340,1488734400,1488734460,1488734520,1488734580,1488734640,1488734700,1488734760,1488734820,1488734880,1488734940,1488735000,1488735060,1488735120,1488735180,1488735240,1488735300,1488735360,1488735420,1488735480,1488735540,1488735600,1488735660,1488735720,1488735780,1488735840,1488735900,1488735960,1488736020,1488736080,1488736140,1488736200,1488736260,1488736320,1488736380,1488736440,1488736500,1488736560,1488736620,1488736680,1488736740,1488736800,1488736860,1488736920,1488736980,1488737040,1488737100,1488737160,1488737220,1488737280,1488737340,1488737400,1488737460,1488737520,1488737580,1488737640,1488737700,1488737760,1488737820,1488737880,1488737940,1488738000,1488738060,1488738120,1488738180,1488738240,1488738300,1488738360,1488738420,1488738480,1488738540,1488738600,1488738660,1488738720,1488738780,1488738840,1488738900,1488738960,1488739020,1488739080,1488739140,1488739200,1488739260,1488739320,1488739380,1488739440,1488739500,1488739560,1488739620,1488739680,1488739740,1488739800,1488739860,1488739920,1488739980,1488740040,1488740100,1488740160,1488740220,1488740280,1488740340,1488740400,1488740460,1488740520,1488740580,1488740640,1488740700,1488740760,1488740820,1488740880,1488740940,1488741000,1488741060,1488741120,1488741180,1488741240,1488741300,1488741360,1488741420,1488741480,1488741540,1488741600,1488741660,1488741720,1488741780,1488741840,1488741900,1488741960,1488742020,1488742080,1488742140,1488742200,1488742260,1488742320,1488742380,1488742440,1488742500,1488742560,1488742620,1488742680,1488742740,1488742800,1488742860,1488742920,1488742980,1488743040,1488743100,1488743160,1488743220,1488743280,1488743340,1488743400,1488743460,1488743520,1488743580,1488743640,1488743700,1488743760,1488743820,1488743880,1488743940,1488744000,1488744060,1488744120,1488744180,1488744240,1488744300,1488744360,1488744420,1488744480,1488744540,1488744600,1488744660,1488744720,1488744780,1488744840,1488744900,1488744960,1488745020,1488745080,1488745140,1488745200,1488745260,1488745320,1488745380,1488745440,1488745500,1488745560,1488745620,1488745680,1488745740,1488745800,1488745860,1488745920,1488745980,1488746040,1488746100,1488746160,1488746220,1488746280,1488746340,1488746400,1488746460,1488746520,1488746580,1488746640,1488746700,1488746760,1488746820,1488746880,1488746940,1488747000,1488747060,1488747120,1488747180,1488747240,1488747300,1488747360,1488747420,1488747480,1488747540,1488747600,1488747660,1488747720,1488747780,1488747840,1488747900,1488747960,1488748020,1488748080,1488748140,1488748200,1488748260,1488748320,1488748380,1488748440,1488748500,1488748560,1488748620,1488748680,1488748740,1488748800,1488748860,1488748920,1488748980,1488749040,1488749100,1488749160,1488749220,1488749280,1488749340,1488749400,1488749460,1488749520,1488749580,1488749640,1488749700,1488749760,1488749820,1488749880,1488749940,1488750000,1488750060,1488750120,1488750180,1488750240,1488750300,1488750360,1488750420,1488750480,1488750540,1488750600,1488750660,1488750720,1488750780,1488750840,1488750900,1488750960,1488751020,1488751080,1488751140,1488751200,1488751260,1488751320,1488751380,1488751440,1488751500,1488751560,1488751620,1488751680,1488751740,1488751800,1488751860,1488751920,1488751980,1488752040,1488752100,1488752160,1488752220,1488752280,1488752340,1488752400,1488752460,1488752520,1488752580,1488752640,1488752700,1488752760,1488752820,1488752880,1488752940,1488753000,1488753060,1488753120,1488753180,1488753240,1488753300,1488753360,1488753420,1488753480,1488753540,1488753600,1488753660,1488753720,1488753780,1488753840,1488753900,1488753960,1488754020,1488754080,1488754140,1488754200,1488754260,1488754320,1488754380,1488754440,1488754500,1488754560,1488754620,1488754680,1488754740,1488754800,1488754860,1488754920,1488754980,1488755040,1488755100,1488755160,1488755220,1488755280,1488755340,1488755400,1488755460,1488755520,1488755580,1488755640,1488755700,1488755760,1488755820,1488755880,1488755940,1488756000,1488756060,1488756120,1488756180,1488756240,1488756300,1488756360,1488756420,1488756480,1488756540,1488756600,1488756660,1488756720,1488756780,1488756840,1488756900,1488756960,1488757020,1488757080,1488757140,1488757200,1488757260,1488757320,1488757380,1488757440,1488757500,1488757560,1488757620,1488757680,1488757740,1488757800,1488757860,1488757920,1488757980,1488758040,1488758100,1488758160,1488758220,1488758280,1488758340,1488758400,1488758460,1488758520,1488758580,1488758640,1488758700,1488758760,1488758820,1488758880,1488758940,1488759000,1488759060,1488759120,1488759180,1488759240,1488759300,1488759360,1488759420,1488759480,1488759540,1488759600,1488759660,1488759720,1488759780,1488759840,1488759900,1488759960,1488760020,1488760080,1488760140,1488760200,1488760260,1488760320,1488760380,1488760440,1488760500,1488760560,1488760620,1488760680,1488760740,1488760800,1488760860,1488760920,1488760980,1488761040,1488761100,1488761160,1488761220,1488761280,1488761340,1488761400,1488761460,1488761520,1488761580,1488761640,1488761700,1488761760,1488761820,1488761880,1488761940,1488762000,1488762060,1488762120,1488762180,1488762240,1488762300,1488762360,1488762420,1488762480,1488762540,1488762600,1488762660,1488762720,1488762780,1488762840,1488762900,1488762960,1488763020,1488763080,1488763140,1488763200,1488763260,1488763320,1488763380,1488763440,1488763500,1488763560,1488763620,1488763680,1488763740,1488763800,1488763860,1488763920,1488763980,1488764040,1488764100,1488764160,1488764220,1488764280,1488764340,1488764400,1488764460,1488764520,1488764580,1488764640,1488764700,1488764760,1488764820,1488764880,1488764940,1488765000,1488765060,1488765120,1488765180,1488765240,1488765300,1488765360,1488765420,1488765480,1488765540,1488765600,1488765660,1488765720,1488765780,1488765840,1488765900,1488765960,1488766020,1488766080,1488766140,1488766200,1488766260,1488766320,1488766380,1488766440,1488766500,1488766560,1488766620,1488766680,1488766740,1488766800,1488766860,1488766920,1488766980,1488767040,1488767100,1488767160,1488767220,1488767280,1488767340,1488767400,1488767460,1488767520,1488767580,1488767640,1488767700,1488767760,1488767820,1488767880,1488767940,1488768000,1488768060,1488768120,1488768180,1488768240,1488768300,1488768360,1488768420,1488768480,1488768540,1488768600,1488768660,1488768720,1488768780,1488768840,1488768900,1488768960,1488769020,1488769080,1488769140,1488769200,1488769260,1488769320,1488769380,1488769440,1488769500,1488769560,1488769620,1488769680,1488769740,1488769800,1488769860,1488769920,1488769980,1488770040,1488770100,1488770160,1488770220,1488770280,1488770340,1488770400,1488770460,1488770520,1488770580,1488770640,1488770700,1488770760,1488770820,1488770880,1488770940,1488771000,1488771060,1488771120,1488771180,1488771240,1488771300,1488771360,1488771420,1488771480,1488771540,1488771600,1488771660,1488771720,1488771780,1488771840,1488771900,1488771960,1488772020,1488772080,1488772140,1488772200,1488772260,1488772320,1488772380,1488772440,1488772500,1488772560,1488772620,1488772680,1488772740,1488772800,1488772860,1488772920,1488772980,1488773040,1488773100,1488773160,1488773220,1488773280,1488773340,1488773400,1488773460,1488773520,1488773580,1488773640,1488773700,1488773760,1488773820,1488773880,1488773940,1488774000,1488774060,1488774120,1488774180,1488774240,1488774300,1488774360,1488774420,1488774480,1488774540,1488774600,1488774660,1488774720,1488774780,1488774840,1488774900,1488774960,1488775020,1488775080,1488775140,1488775200,1488775260,1488775320,1488775380,1488775440,1488775500,1488775560,1488775620,1488775680,1488775740,1488775800,1488775860,1488775920,1488775980,1488776040,1488776100,1488776160,1488776220,1488776280,1488776340,1488776400,1488776460,1488776520,1488776580,1488776640,1488776700,1488776760,1488776820,1488776880,1488776940,1488777000,1488777060,1488777120,1488777180,1488777240,1488777300,1488777360,1488777420,1488777480,1488777540,1488777600,1488777660,1488777720,1488777780,1488777840,1488777900,1488777960,1488778020,1488778080,1488778140,1488778200,1488778260,1488778320,1488778380,1488778440,1488778500,1488778560,1488778620,1488778680,1488778740,1488778800,1488778860,1488778920,1488778980,1488779040,1488779100,1488779160,1488779220,1488779280,1488779340,1488779400,1488779460,1488779520,1488779580,1488779640,1488779700,1488779760,1488779820,1488779880,1488779940,1488780000,1488780060,1488780120,1488780180,1488780240,1488780300,1488780360,1488780420,1488780480,1488780540,1488780600,1488780660,1488780720,1488780780,1488780840,1488780900,1488780960,1488781020,1488781080,1488781140,1488781200,1488781260,1488781320,1488781380,1488781440,1488781500,1488781560,1488781620,1488781680,1488781740,1488781800,1488781860,1488781920,1488781980,1488782040,1488782100,1488782160,1488782220,1488782280,1488782340,1488782400,1488782460,1488782520,1488782580,1488782640,1488782700,1488782760,1488782820,1488782880,1488782940,1488783000,1488783060,1488783120,1488783180,1488783240,1488783300,1488783360,1488783420,1488783480,1488783540,1488783600,1488783660,1488783720,1488783780,1488783840,1488783900,1488783960,1488784020,1488784080,1488784140,1488784200,1488784260,1488784320,1488784380,1488784440,1488784500,1488784560,1488784620,1488784680,1488784740,1488784800,1488784860,1488784920,1488784980,1488785040,1488785100,1488785160,1488785220,1488785280,1488785340,1488785400,1488785460,1488785520,1488785580,1488785640,1488785700,1488785760,1488785820,1488785880,1488785940,1488786000,1488786060,1488786120,1488786180,1488786240,1488786300,1488786360,1488786420,1488786480,1488786540,1488786600,1488786660,1488786720,1488786780,1488786840,1488786900,1488786960,1488787020,1488787080,1488787140,1488787200,1488787260,1488787320,1488787380,1488787440,1488787500,1488787560,1488787620,1488787680,1488787740,1488787800,1488787860,1488787920,1488787980,1488788040,1488788100,1488788160,1488788220,1488788280,1488788340,1488788400,1488788460,1488788520,1488788580,1488788640,1488788700,1488788760,1488788820,1488788880,1488788940,1488789000,1488789060,1488789120,1488789180,1488789240,1488789300,1488789360,1488789420,1488789480,1488789540,1488789600,1488789660,1488789720,1488789780,1488789840,1488789900,1488789960,1488790020,1488790080,1488790140,1488790200,1488790260,1488790320,1488790380,1488790440,1488790500,1488790560,1488790620,1488790680,1488790740,1488790800,1488790860,1488790920,1488790980,1488791040,1488791100,1488791160,1488791220,1488791280,1488791340,1488791400,1488791460,1488791520,1488791580,1488791640,1488791700,1488791760,1488791820,1488791880,1488791940,1488792000,1488792060,1488792120,1488792180,1488792240,1488792300,1488792360,1488792420,1488792480,1488792540,1488792600,1488792660,1488792720,1488792780,1488792840,1488792900,1488792960,1488793020,1488793080,1488793140,1488793200,1488793260,1488793320,1488793380,1488793440,1488793500,1488793560,1488793620,1488793680,1488793740,1488793800,1488793860,1488793920,1488793980,1488794040,1488794100,1488794160,1488794220,1488794280,1488794340,1488794400,1488794460,1488794520,1488794580,1488794640,1488794700,1488794760,1488794820,1488794880,1488794940,1488795000,1488795060,1488795120,1488795180,1488795240,1488795300,1488795360,1488795420,1488795480,1488795540,1488795600,1488795660,1488795720,1488795780,1488795840,1488795900,1488795960,1488796020,1488796080,1488796140,1488796200,1488796260,1488796320,1488796380,1488796440,1488796500,1488796560,1488796620,1488796680,1488796740,1488796800,1488796860,1488796920,1488796980,1488797040,1488797100,1488797160,1488797220,1488797280,1488797340,1488797400,1488797460,1488797520,1488797580,1488797640,1488797700,1488797760,1488797820,1488797880,1488797940,1488798000,1488798060,1488798120,1488798180,1488798240,1488798300,1488798360,1488798420,1488798480,1488798540,1488798600,1488798660,1488798720,1488798780,1488798840,1488798900,1488798960,1488799020,1488799080,1488799140,1488799200,1488799260,1488799320,1488799380,1488799440,1488799500,1488799560,1488799620,1488799680,1488799740,1488799800,1488799860,1488799920,1488799980,1488800040,1488800100,1488800160,1488800220,1488800280,1488800340,1488800400,1488800460,1488800520,1488800580,1488800640,1488800700,1488800760,1488800820,1488800880,1488800940,1488801000,1488801060,1488801120,1488801180,1488801240,1488801300,1488801360,1488801420,1488801480,1488801540,1488801600,1488801660,1488801720,1488801780,1488801840,1488801900,1488801960,1488802020,1488802080,1488802140,1488802200,1488802260,1488802320,1488802380,1488802440,1488802500,1488802560,1488802620,1488802680,1488802740,1488802800,1488802860,1488802920,1488802980,1488803040,1488803100,1488803160,1488803220,1488803280,1488803340,1488803400,1488803460,1488803520,1488803580,1488803640,1488803700,1488803760,1488803820,1488803880,1488803940,1488804000,1488804060,1488804120,1488804180,1488804240,1488804300,1488804360,1488804420,1488804480,1488804540,1488804600,1488804660,1488804720,1488804780,1488804840,1488804900,1488804960,1488805020,1488805080,1488805140,1488805200,1488805260,1488805320,1488805380,1488805440,1488805500,1488805560,1488805620,1488805680,1488805740,1488805800,1488805860,1488805920,1488805980,1488806040,1488806100,1488806160,1488806220,1488806280,1488806340,1488806400,1488806460,1488806520,1488806580,1488806640,1488806700,1488806760,1488806820,1488806880,1488806940,1488807000,1488807060,1488807120,1488807180,1488807240,1488807300,1488807360,1488807420,1488807480,1488807540,1488807600,1488807660,1488807720,1488807780,1488807840,1488807900,1488807960,1488808020,1488808080,1488808140,1488808200,1488808260,1488808320,1488808380,1488808440,1488808500,1488808560,1488808620,1488808680,1488808740,1488808800,1488808860,1488808920,1488808980,1488809040,1488809100,1488809160,1488809220,1488809280,1488809340,1488809400,1488809460,1488809520,1488809580,1488809640,1488809700,1488809760,1488809820,1488809880,1488809940,1488810000,1488810060,1488810120,1488810180,1488810240,1488810300,1488810360,1488810420,1488810480,1488810540,1488810600,1488810660,1488810720,1488810780,1488810840,1488810900,1488810960,1488811020,1488811080,1488811140,1488811200,1488811260,1488811320,1488811380,1488811440,1488811500,1488811560,1488811620,1488811680,1488811740,1488811800,1488811860,1488811920,1488811980,1488812040,1488812100,1488812160,1488812220,1488812280,1488812340,1488812400,1488812460,1488812520,1488812580,1488812640,1488812700,1488812760,1488812820,1488812880,1488812940,1488813000,1488813060,1488813120,1488813180,1488813240,1488813300,1488813360,1488813420,1488813480,1488813540,1488813600,1488813660,1488813720,1488813780,1488813840,1488813900,1488813960,1488814020,1488814080,1488814140,1488814200,1488814260,1488814320,1488814380,1488814440,1488814500,1488814560,1488814620,1488814680,1488814740,1488814800,1488814860,1488814920,1488814980,1488815040,1488815100,1488815160,1488815220,1488815280,1488815340,1488815400,1488815460,1488815520,1488815580,1488815640,1488815700,1488815760,1488815820,1488815880,1488815940,1488816000,1488816060,1488816120,1488816180,1488816240,1488816300,1488816360,1488816420,1488816480,1488816540,1488816600,1488816660,1488816720,1488816780,1488816840,1488816900,1488816960,1488817020,1488817080,1488817140,1488817200,1488817260,1488817320,1488817380,1488817440,1488817500,1488817560,1488817620,1488817680,1488817740,1488817800,1488817860,1488817920,1488817980,1488818040,1488818100,1488818160,1488818220,1488818280,1488818340,1488818400,1488818460,1488818520,1488818580,1488818640,1488818700,1488818760,1488818820,1488818880,1488818940,1488819000,1488819060,1488819120,1488819180,1488819240,1488819300,1488819360,1488819420,1488819480,1488819540,1488819600,1488819660,1488819720,1488819780,1488819840,1488819900,1488819960,1488820020,1488820080,1488820140,1488820200,1488820260,1488820320,1488820380,1488820440,1488820500,1488820560,1488820620,1488820680,1488820740,1488820800,1488820860,1488820920,1488820980,1488821040,1488821100,1488821160,1488821220,1488821280,1488821340,1488821400,1488821460,1488821520,1488821580,1488821640,1488821700,1488821760,1488821820,1488821880,1488821940,1488822000,1488822060,1488822120,1488822180,1488822240,1488822300,1488822360,1488822420,1488822480,1488822540,1488822600,1488822660,1488822720,1488822780,1488822840,1488822900,1488822960,1488823020,1488823080,1488823140,1488823200,1488823260,1488823320,1488823380,1488823440,1488823500,1488823560,1488823620,1488823680,1488823740,1488823800,1488823860,1488823920,1488823980,1488824040,1488824100,1488824160,1488824220,1488824280,1488824340,1488824400,1488824460,1488824520,1488824580,1488824640,1488824700,1488824760,1488824820,1488824880,1488824940,1488825000,1488825060,1488825120,1488825180,1488825240,1488825300,1488825360,1488825420,1488825480,1488825540,1488825600,1488825660,1488825720,1488825780,1488825840,1488825900,1488825960,1488826020,1488826080,1488826140,1488826200,1488826260,1488826320,1488826380,1488826440,1488826500,1488826560,1488826620,1488826680,1488826740,1488826800,1488826860,1488826920,1488826980,1488827040,1488827100,1488827160,1488827220,1488827280,1488827340,1488827400,1488827460,1488827520,1488827580,1488827640,1488827700,1488827760,1488827820,1488827880,1488827940,1488828000,1488828060,1488828120,1488828180,1488828240,1488828300,1488828360,1488828420,1488828480,1488828540,1488828600,1488828660,1488828720,1488828780,1488828840,1488828900,1488828960,1488829020,1488829080,1488829140,1488829200,1488829260,1488829320,1488829380,1488829440,1488829500,1488829560,1488829620,1488829680,1488829740,1488829800,1488829860,1488829920,1488829980,1488830040,1488830100,1488830160,1488830220,1488830280,1488830340,1488830400,1488830460,1488830520,1488830580,1488830640,1488830700,1488830760,1488830820,1488830880,1488830940,1488831000,1488831060,1488831120,1488831180,1488831240,1488831300,1488831360,1488831420,1488831480,1488831540,1488831600,1488831660,1488831720,1488831780,1488831840,1488831900,1488831960,1488832020,1488832080,1488832140,1488832200,1488832260,1488832320,1488832380,1488832440,1488832500,1488832560,1488832620,1488832680,1488832740,1488832800,1488832860,1488832920,1488832980,1488833040,1488833100,1488833160,1488833220,1488833280,1488833340,1488833400,1488833460,1488833520,1488833580,1488833640,1488833700,1488833760,1488833820,1488833880,1488833940,1488834000,1488834060,1488834120,1488834180,1488834240,1488834300,1488834360,1488834420,1488834480,1488834540,1488834600,1488834660,1488834720,1488834780,1488834840,1488834900,1488834960,1488835020,1488835080,1488835140,1488835200,1488835260,1488835320,1488835380,1488835440,1488835500,1488835560,1488835620,1488835680,1488835740,1488835800,1488835860,1488835920,1488835980,1488836040,1488836100,1488836160,1488836220,1488836280,1488836340,1488836400,1488836460,1488836520,1488836580,1488836640,1488836700,1488836760,1488836820,1488836880,1488836940,1488837000,1488837060,1488837120,1488837180,1488837240,1488837300,1488837360,1488837420,1488837480,1488837540,1488837600,1488837660,1488837720,1488837780,1488837840,1488837900,1488837960,1488838020,1488838080,1488838140,1488838200,1488838260,1488838320,1488838380,1488838440,1488838500,1488838560,1488838620,1488838680,1488838740,1488838800,1488838860,1488838920,1488838980,1488839040,1488839100,1488839160,1488839220,1488839280,1488839340,1488839400,1488839460,1488839520,1488839580,1488839640,1488839700,1488839760,1488839820,1488839880,1488839940,1488840000,1488840060,1488840120,1488840180,1488840240,1488840300,1488840360,1488840420,1488840480,1488840540,1488840600,1488840660,1488840720,1488840780,1488840840,1488840900,1488840960,1488841020,1488841080,1488841140,1488841200,1488841260,1488841320,1488841380,1488841440,1488841500,1488841560,1488841620,1488841680,1488841740,1488841800,1488841860,1488841920,1488841980,1488842040,1488842100,1488842160,1488842220,1488842280,1488842340,1488842400,1488842460,1488842520,1488842580,1488842640,1488842700,1488842760,1488842820,1488842880,1488842940,1488843000,1488843060,1488843120,1488843180,1488843240,1488843300,1488843360,1488843420,1488843480,1488843540,1488843600,1488843660,1488843720,1488843780,1488843840,1488843900,1488843960,1488844020,1488844080,1488844140,1488844200,1488844260,1488844320,1488844380,1488844440,1488844500,1488844560,1488844620,1488844680,1488844740,1488844800,1488844860,1488844920,1488844980,1488845040,1488845100,1488845160,1488845220,1488845280,1488845340,1488845400,1488845460,1488845520,1488845580,1488845640,1488845700,1488845760,1488845820,1488845880,1488845940,1488846000,1488846060,1488846120,1488846180,1488846240,1488846300,1488846360,1488846420,1488846480,1488846540,1488846600,1488846660,1488846720,1488846780,1488846840,1488846900,1488846960,1488847020,1488847080,1488847140,1488847200,1488847260,1488847320,1488847380,1488847440,1488847500,1488847560,1488847620,1488847680,1488847740,1488847800,1488847860,1488847920,1488847980,1488848040,1488848100,1488848160,1488848220,1488848280,1488848340,1488848400,1488848460,1488848520,1488848580,1488848640,1488848700,1488848760,1488848820,1488848880,1488848940,1488849000,1488849060,1488849120,1488849180,1488849240,1488849300,1488849360,1488849420,1488849480,1488849540,1488849600,1488849660,1488849720,1488849780,1488849840,1488849900,1488849960,1488850020,1488850080,1488850140,1488850200,1488850260,1488850320,1488850380,1488850440,1488850500,1488850560,1488850620,1488850680,1488850740,1488850800,1488850860,1488850920,1488850980,1488851040,1488851100,1488851160,1488851220,1488851280,1488851340,1488851400,1488851460,1488851520,1488851580,1488851640,1488851700,1488851760,1488851820,1488851880,1488851940,1488852000,1488852060,1488852120,1488852180,1488852240,1488852300,1488852360,1488852420,1488852480,1488852540,1488852600,1488852660,1488852720,1488852780,1488852840,1488852900,1488852960,1488853020,1488853080,1488853140,1488853200,1488853260,1488853320,1488853380,1488853440,1488853500,1488853560,1488853620,1488853680,1488853740,1488853800,1488853860,1488853920,1488853980,1488854040,1488854100,1488854160,1488854220,1488854280,1488854340,1488854400,1488854460,1488854520,1488854580,1488854640,1488854700,1488854760,1488854820,1488854880,1488854940,1488855000,1488855060,1488855120,1488855180,1488855240,1488855300,1488855360,1488855420,1488855480,1488855540,1488855600,1488855660,1488855720,1488855780,1488855840,1488855900,1488855960,1488856020,1488856080,1488856140,1488856200,1488856260,1488856320,1488856380,1488856440,1488856500,1488856560,1488856620,1488856680,1488856740,1488856800,1488856860,1488856920,1488856980,1488857040,1488857100,1488857160,1488857220,1488857280,1488857340,1488857400,1488857460,1488857520,1488857580,1488857640,1488857700,1488857760,1488857820,1488857880,1488857940,1488858000,1488858060,1488858120,1488858180,1488858240,1488858300,1488858360,1488858420,1488858480,1488858540,1488858600,1488858660,1488858720,1488858780,1488858840,1488858900,1488858960,1488859020,1488859080,1488859140,1488859200,1488859260,1488859320,1488859380,1488859440,1488859500,1488859560,1488859620,1488859680,1488859740,1488859800,1488859860,1488859920,1488859980,1488860040,1488860100,1488860160,1488860220,1488860280,1488860340,1488860400,1488860460,1488860520,1488860580,1488860640,1488860700,1488860760,1488860820,1488860880,1488860940,1488861000,1488861060,1488861120,1488861180,1488861240,1488861300,1488861360,1488861420,1488861480,1488861540,1488861600,1488861660,1488861720,1488861780,1488861840,1488861900,1488861960,1488862020,1488862080,1488862140,1488862200,1488862260,1488862320,1488862380,1488862440,1488862500,1488862560,1488862620,1488862680,1488862740,1488862800,1488862860,1488862920,1488862980,1488863040,1488863100,1488863160,1488863220,1488863280,1488863340,1488863400,1488863460,1488863520,1488863580,1488863640,1488863700,1488863760,1488863820,1488863880,1488863940,1488864000,1488864060,1488864120,1488864180,1488864240,1488864300,1488864360,1488864420,1488864480,1488864540,1488864600,1488864660,1488864720,1488864780,1488864840,1488864900,1488864960,1488865020,1488865080,1488865140,1488865200,1488865260,1488865320,1488865380,1488865440,1488865500,1488865560,1488865620,1488865680,1488865740,1488865800,1488865860,1488865920,1488865980,1488866040,1488866100,1488866160,1488866220,1488866280,1488866340,1488866400,1488866460,1488866520,1488866580,1488866640,1488866700,1488866760,1488866820,1488866880,1488866940,1488867000,1488867060,1488867120,1488867180,1488867240,1488867300,1488867360,1488867420,1488867480,1488867540,1488867600,1488867660,1488867720,1488867780,1488867840,1488867900,1488867960,1488868020,1488868080,1488868140,1488868200,1488868260,1488868320,1488868380,1488868440,1488868500,1488868560,1488868620,1488868680,1488868740,1488868800,1488868860,1488868920,1488868980,1488869040,1488869100,1488869160,1488869220,1488869280,1488869340,1488869400,1488869460,1488869520,1488869580,1488869640,1488869700,1488869760,1488869820,1488869880,1488869940,1488870000,1488870060,1488870120,1488870180,1488870240,1488870300,1488870360,1488870420,1488870480,1488870540,1488870600,1488870660,1488870720,1488870780,1488870840,1488870900,1488870960,1488871020,1488871080,1488871140,1488871200,1488871260,1488871320,1488871380,1488871440,1488871500,1488871560,1488871620,1488871680,1488871740,1488871800,1488871860,1488871920,1488871980,1488872040,1488872100,1488872160,1488872220,1488872280,1488872340,1488872400,1488872460,1488872520,1488872580,1488872640,1488872700,1488872760,1488872820,1488872880,1488872940,1488873000,1488873060,1488873120,1488873180,1488873240,1488873300,1488873360,1488873420,1488873480,1488873540,1488873600,1488873660,1488873720,1488873780,1488873840,1488873900,1488873960,1488874020,1488874080,1488874140,1488874200,1488874260,1488874320,1488874380,1488874440,1488874500,1488874560,1488874620,1488874680,1488874740,1488874800,1488874860,1488874920,1488874980,1488875040,1488875100,1488875160,1488875220,1488875280,1488875340,1488875400,1488875460,1488875520,1488875580,1488875640,1488875700,1488875760,1488875820,1488875880,1488875940,1488876000,1488876060,1488876120,1488876180,1488876240,1488876300,1488876360,1488876420,1488876480,1488876540,1488876600,1488876660,1488876720,1488876780,1488876840,1488876900,1488876960,1488877020,1488877080,1488877140,1488877200,1488877260,1488877320,1488877380,1488877440,1488877500,1488877560,1488877620,1488877680,1488877740,1488877800,1488877860,1488877920,1488877980,1488878040,1488878100,1488878160,1488878220,1488878280,1488878340,1488878400,1488878460,1488878520,1488878580,1488878640,1488878700,1488878760,1488878820,1488878880,1488878940,1488879000,1488879060,1488879120,1488879180,1488879240,1488879300,1488879360,1488879420,1488879480,1488879540,1488879600,1488879660,1488879720,1488879780,1488879840,1488879900,1488880140,1488880200,1488880260,1488880320,1488880380,1488880440,1488880500,1488880560,1488880620,1488880680,1488880740,1488880800,1488880860,1488880920,1488880980,1488881040,1488881100,1488881160,1488881220,1488881280,1488881340,1488881400,1488881460,1488881520,1488881580,1488881640,1488881700,1488881760,1488881820,1488881880,1488881940,1488882000,1488882060,1488882120,1488882180,1488882240,1488882300,1488882360,1488882420,1488882480,1488882540,1488882600,1488882660,1488882720,1488882780,1488882840,1488882900,1488882960,1488883020,1488883080,1488883140,1488883200,1488883260,1488883320,1488883380,1488883440,1488883500,1488883560,1488883620,1488883680,1488883740,1488883800,1488883860,1488883920,1488883980,1488884040,1488884100,1488884160,1488884220,1488884280,1488884340,1488884400,1488884460,1488884520,1488884580,1488884640,1488884700,1488884760,1488884820,1488884880,1488884940,1488885000,1488885060,1488885120,1488885180,1488885240,1488885300,1488885360,1488885420,1488885480,1488885540,1488885600,1488885660,1488885720,1488885780,1488885840,1488885900,1488885960,1488886020,1488886080,1488886140,1488886200,1488886260,1488886320,1488886380,1488886440,1488886500,1488886560,1488886620,1488886680,1488886740,1488886800,1488886860,1488886920,1488886980,1488887040,1488887100,1488887160,1488887220,1488887280,1488887340,1488887400,1488887460,1488887520,1488887580,1488887640,1488887700,1488887760,1488887820,1488887880,1488887940,1488888000,1488888060,1488888120,1488888180,1488888240,1488888300,1488888360,1488888420,1488888480,1488888540,1488888600,1488888660,1488888720,1488888780,1488888840,1488888900,1488888960,1488889020,1488889080,1488889140,1488889200,1488889260,1488889320,1488889380,1488889440,1488889500,1488889560,1488889620,1488889680,1488889740,1488889800,1488889860,1488889920,1488889980,1488890040,1488890100,1488890160,1488890220,1488890280,1488890340,1488890400,1488890460,1488890520,1488890580,1488890640,1488890700,1488890760,1488890820,1488890880,1488890940,1488891000,1488891060,1488891120,1488891180,1488891240,1488891300,1488891360,1488891420,1488891480,1488891540,1488891600,1488891660,1488891720,1488891780,1488891840,1488891900,1488891960,1488892020,1488892080,1488892140,1488892200,1488892260,1488892320,1488892380,1488892440,1488892500,1488892560,1488892620,1488892680,1488892740,1488892800,1488892920,1488892980,1488893040,1488893100,1488893160,1488893220,1488893280,1488893340,1488893400,1488893460,1488893520,1488893580,1488893640,1488893700,1488893760,1488893820,1488893880,1488893940,1488894000,1488894060,1488894120,1488894180,1488894240,1488894300,1488894360,1488894420,1488894480,1488894540,1488894600,1488894660,1488894720,1488894780,1488894960,1488895020,1488895080,1488895140,1488895200,1488895260,1488895320,1488895380,1488895440,1488895500,1488895560,1488895620,1488895680,1488895740,1488895800,1488895860,1488895920,1488895980,1488896040,1488896100,1488896160,1488896220,1488896280,1488896340,1488896400,1488896460,1488896520,1488896580,1488896640,1488896700,1488896760,1488896820,1488896880,1488896940,1488897000,1488897060,1488897120,1488897180,1488897240,1488897300,1488897360,1488897420,1488897480,1488897540,1488897600,1488897660,1488897720,1488897780,1488897840,1488897900,1488897960,1488898020,1488898080,1488898140,1488898200,1488898260,1488898320,1488898380,1488898440,1488898500,1488898560,1488898620,1488898680,1488898740,1488898800,1488898860,1488898920,1488898980,1488899040,1488899100,1488899160,1488899220,1488899280,1488899340,1488899400,1488899460,1488899520,1488899580,1488899640,1488899700,1488899760,1488899820,1488899880,1488899940,1488900000,1488900060,1488900120,1488900180,1488900240,1488900300,1488900360,1488900420,1488900480,1488900540,1488900600,1488900660,1488900720,1488900780,1488900840,1488900900,1488900960,1488901020,1488901080,1488901140,1488901200,1488901260,1488901320,1488901380,1488901440,1488901500,1488901560,1488901620,1488901680,1488901740,1488901800,1488901860,1488901920,1488901980,1488902040,1488902100,1488902160,1488902220,1488902280,1488902340,1488902400,1488902460,1488902520,1488902580,1488902640,1488902700,1488902760,1488902820,1488902880,1488902940,1488903000,1488903060,1488903120,1488903180,1488903240,1488903300,1488903360,1488903420,1488903480,1488903540,1488903600,1488903660,1488903720,1488903780,1488903840,1488903900,1488903960,1488904020,1488904080,1488904140,1488904200,1488904260,1488904320,1488904380,1488904440,1488904500,1488904560,1488904620,1488904680,1488904740,1488904800,1488904860,1488904920,1488904980,1488905040,1488905100,1488905160,1488905220,1488905280,1488905340,1488905400,1488905460,1488905520,1488905580,1488905640,1488905700,1488905760,1488905820,1488905880,1488905940,1488906000,1488906060,1488906120,1488906180,1488906240,1488906300,1488906360,1488906420,1488906480,1488906540,1488906600,1488906660,1488906720,1488906780,1488906840,1488906900,1488906960,1488907020,1488907080,1488907140,1488907200,1488907260,1488907320,1488907380,1488907440,1488907500,1488907560,1488907620,1488907680,1488907740,1488907800,1488907860,1488907920,1488907980,1488908040,1488908100,1488908160,1488908220,1488908280,1488908340,1488908400,1488908460,1488908520,1488908580,1488908640,1488908700,1488908760,1488908820,1488908880,1488908940,1488909000,1488909060,1488909120,1488909180,1488909240,1488909300,1488909360,1488909420,1488909480,1488909540,1488909600,1488909660,1488909720,1488909780,1488909840,1488909900,1488909960,1488910020,1488910080,1488910140,1488910200,1488910260,1488910320,1488910380,1488910440,1488910500,1488910560,1488910620,1488910680,1488910740,1488910800,1488910860,1488910920,1488910980,1488911040,1488911100,1488911160,1488911220,1488911280,1488911340,1488911400,1488911460,1488911520,1488911580,1488911640,1488911700,1488911760,1488911820,1488911880,1488911940,1488912000,1488912060,1488912120,1488912180,1488912240,1488912300,1488912360,1488912420,1488912480,1488912540,1488912600,1488912660,1488912720,1488912780,1488912840,1488912900,1488912960,1488913020,1488913080,1488913140,1488913200,1488913260,1488913320,1488913380,1488913440,1488913500,1488913560,1488913620,1488913680,1488913740,1488913800,1488913860,1488913920,1488913980,1488914040,1488914100,1488914160,1488914220,1488914280,1488914340,1488914400,1488914460,1488914520,1488914580,1488914640,1488914700,1488914760,1488914820,1488914880,1488914940,1488915000,1488915060,1488915120,1488915180,1488915240,1488915300,1488915360,1488915420,1488915480,1488915540,1488915600,1488915660,1488915720,1488915780,1488915840,1488915900,1488915960,1488916020,1488916080,1488916140,1488916200,1488916260,1488916320,1488916380,1488916440,1488916500,1488916560,1488916620,1488916680,1488916740,1488916800,1488916860,1488916920,1488916980,1488917040,1488917100,1488917160,1488917220,1488917280,1488917340,1488917400,1488917460,1488917520,1488917580,1488917640,1488917700,1488917760,1488917820,1488917880,1488917940,1488918000,1488918060,1488918120,1488918180,1488918240,1488918300,1488918360,1488918420,1488918480,1488918540,1488918600,1488918660,1488918720,1488918780,1488918840,1488918900,1488918960,1488919020,1488919080,1488919140,1488919200,1488919260,1488919320,1488919380,1488919440,1488919500,1488919560,1488919620,1488919680,1488919740,1488919800,1488919860,1488919920,1488919980,1488920040,1488920100,1488920160,1488920220,1488920280,1488920340,1488920400,1488920460,1488920520,1488920580,1488920640,1488920700,1488920760,1488920820,1488920880,1488920940,1488921000,1488921060,1488921120,1488921180,1488921240,1488921300,1488921360,1488921420,1488921480,1488921540,1488921600,1488921660,1488921720,1488921780,1488921840,1488921900,1488921960,1488922020,1488922080,1488922140,1488922200,1488922260,1488922320,1488922380,1488922440,1488922500,1488922560,1488922620,1488922680,1488922740,1488922800,1488922860,1488922920,1488922980,1488923040,1488923100,1488923160,1488923220,1488923280,1488923340,1488923400,1488923460,1488923520,1488923580,1488923640,1488923700,1488923760,1488923820,1488923880,1488923940,1488924000,1488924060,1488924120,1488924180,1488924240,1488924300,1488924360,1488924420,1488924480,1488924540,1488924600,1488924660,1488924720,1488924780,1488924840,1488924900,1488924960,1488925020,1488925080,1488925140,1488925200,1488925260,1488925320,1488925380,1488925440,1488925500,1488925560,1488925620,1488925680,1488925740,1488925800,1488925860,1488925920,1488925980,1488926040,1488926100,1488926160,1488926220,1488926280,1488926340,1488926400,1488926460,1488926520,1488926580,1488926640,1488926700,1488926760,1488926820,1488926880,1488926940,1488927000,1488927060,1488927120,1488927180,1488927240,1488927300,1488927360,1488927420,1488927480,1488927540,1488927600,1488927660,1488927720,1488927780,1488927840,1488927900,1488927960,1488928020,1488928080,1488928140,1488928200,1488928260,1488928320,1488928380,1488928440,1488928500,1488928560,1488928620,1488928680,1488928740,1488928800,1488928860,1488928920,1488928980,1488929040,1488929100,1488929160,1488929220,1488929280,1488929340,1488929400,1488929460,1488929520,1488929580,1488929640,1488929700,1488929760,1488929820,1488929880,1488929940,1488930000,1488930060,1488930120,1488930180,1488930240,1488930300,1488930360,1488930420,1488930480,1488930540,1488930600,1488930660,1488930720,1488930780,1488930840,1488930900,1488930960,1488931020,1488931080,1488931140,1488931200,1488931260,1488931320,1488931380,1488931440,1488931500,1488931560,1488931620,1488931680,1488931740,1488931800,1488931860,1488931920,1488931980,1488932040,1488932100,1488932160,1488932220,1488932280,1488932340,1488932400,1488932460,1488932520,1488932580,1488932640,1488932700,1488932760,1488932820,1488932880,1488932940,1488933000,1488933060,1488933120,1488933180,1488933240,1488933300,1488933360,1488933420,1488933480,1488933540,1488933600,1488933660,1488933720,1488933780,1488933840,1488933900,1488933960,1488934020,1488934080,1488934140,1488934200,1488934260,1488934320,1488934380,1488934440,1488934500,1488934560,1488934620,1488934680,1488934740,1488934800,1488934860,1488934920,1488934980,1488935040,1488935100,1488935160,1488935220,1488935280,1488935340,1488935400,1488935460,1488935520,1488935580,1488935640,1488935700,1488935760,1488935820,1488935880,1488935940,1488936000,1488936060,1488936120,1488936180,1488936240,1488936300,1488936360,1488936420,1488936480,1488936540,1488936600,1488936660,1488936720,1488936780,1488936840,1488936900,1488936960,1488937020,1488937080,1488937140,1488937200,1488937260,1488937320,1488937380,1488937440,1488937500,1488937560,1488937620,1488937680,1488937740,1488937800,1488937860,1488937920,1488937980,1488938040,1488938100,1488938160,1488938220,1488938280,1488938340,1488938400,1488938460,1488938520,1488938580,1488938640,1488938700,1488938760,1488938820,1488938880,1488938940,1488939000,1488939060,1488939120,1488939180,1488939240,1488939300,1488939360,1488939420,1488939480,1488939540,1488939600,1488939660,1488939720,1488939780,1488939840,1488939900,1488939960,1488940020,1488940080,1488940140,1488940200,1488940260,1488940320,1488940380,1488940440,1488940500,1488940560,1488940620,1488940680,1488940740,1488940800,1488940860,1488940920,1488940980,1488941040,1488941100,1488941160,1488941220,1488941280,1488941340,1488941400,1488941460,1488941520,1488941580,1488941640,1488941700,1488941760,1488941820,1488941880,1488941940,1488942000,1488942060,1488942120,1488942180,1488942240,1488942300,1488942360,1488942420,1488942480,1488942540,1488942600,1488942660,1488942720,1488942780,1488942840,1488942900,1488942960,1488943020,1488943080,1488943140,1488943200,1488943260,1488943320,1488943380,1488943440,1488943500,1488943560,1488943620,1488943680,1488943740,1488943800,1488943860,1488943920,1488943980,1488944040,1488944100,1488944160,1488944220,1488944280,1488944340,1488944400,1488944460,1488944520,1488944580,1488944640,1488944700,1488944760,1488944820,1488944880,1488944940,1488945000,1488945060,1488945120,1488945180,1488945240,1488945300,1488945360,1488945420,1488945480,1488945540,1488945600,1488945660,1488945720,1488945780,1488945840,1488945900,1488945960,1488946020,1488946080,1488946140,1488946200,1488946260,1488946320,1488946380,1488946440,1488946500,1488946560,1488946620,1488946680,1488946740,1488946800,1488946860,1488946920,1488946980,1488947040,1488947100,1488947160,1488947220,1488947280,1488947340,1488947400,1488947460,1488947520,1488947580,1488947640,1488947700,1488947760,1488947820,1488947880,1488947940,1488948000,1488948060,1488948120,1488948180,1488948240,1488948300,1488948360,1488948420,1488948480,1488948540,1488948600,1488948660,1488948720,1488948780,1488948840,1488948900,1488948960,1488949020,1488949080,1488949140,1488949200,1488949260,1488949320,1488949380,1488949440,1488949500,1488949560,1488949620,1488949680,1488949740,1488949800,1488949860,1488949920,1488949980,1488950040,1488950100,1488950160,1488950220,1488950280,1488950340,1488950400,1488950460,1488950520,1488950580,1488950640,1488950700,1488950760,1488950820,1488950880,1488950940,1488951000,1488951060,1488951120,1488951180,1488951240,1488951300,1488951360,1488951420,1488951480,1488951540,1488951600,1488951660,1488951720,1488951780,1488951840,1488951900,1488951960,1488952020,1488952080,1488952140,1488952200,1488952260,1488952320,1488952380,1488952440,1488952500,1488952560,1488952620,1488952680,1488952740,1488952800,1488952860,1488952920,1488952980,1488953040,1488953100,1488953160,1488953220,1488953280,1488953340,1488953400,1488953460,1488953520,1488953580,1488953640,1488953700,1488953760,1488953820,1488953880,1488953940,1488954000,1488954060,1488954120,1488954180,1488954240,1488954300,1488954360,1488954420,1488954480,1488954540,1488954600,1488954660,1488954720,1488954780,1488954840,1488954900,1488954960,1488955020,1488955080,1488955140,1488955200,1488955260,1488955320,1488955380,1488955440,1488955500,1488955560,1488955620,1488955680,1488955740,1488955800,1488955860,1488955920,1488955980,1488956040,1488956100,1488956160,1488956220,1488956280,1488956340,1488956400,1488956460,1488956520,1488956580,1488956640,1488956700,1488956760,1488956820,1488956880,1488956940,1488957000,1488957060,1488957120,1488957180,1488957240,1488957300,1488957360,1488957420,1488957480,1488957540,1488957600,1488957660,1488957720,1488957780,1488957840,1488957900,1488957960,1488958020,1488958080,1488958140,1488958200,1488958260,1488958320,1488958380,1488958440,1488958500,1488958560,1488958620,1488958680,1488958740,1488958800,1488958860,1488958920,1488958980,1488959040,1488959100,1488959160,1488959220,1488959280,1488959340,1488959400,1488959460,1488959520,1488959580,1488959640,1488959700,1488959760,1488959820,1488959880,1488959940,1488960000,1488960060,1488960120,1488960180,1488960240,1488960300,1488960360,1488960420,1488960480,1488960540,1488960600,1488960660,1488960720,1488960780,1488960840,1488960900,1488960960,1488961020,1488961080,1488961140,1488961200,1488961260,1488961320,1488961380,1488961440,1488961500,1488961560,1488961620,1488961680,1488961740,1488961800,1488961860,1488961920,1488961980,1488962040,1488962100,1488962160,1488962220,1488962280,1488962340,1488962400,1488962460,1488962520,1488962580,1488962640,1488962700,1488962760,1488962820,1488962880,1488962940,1488963000,1488963060,1488963120,1488963180,1488963240,1488963300,1488963360,1488963420,1488963480,1488963540,1488963600,1488963660,1488963720,1488963780,1488963840,1488963900,1488963960,1488964020,1488964080,1488964140,1488964200,1488964260,1488964320,1488964380,1488964440,1488964500,1488964560,1488964620,1488964680,1488964740,1488964800,1488964860,1488964920,1488964980,1488965040,1488965100,1488965160,1488965220,1488965280,1488965340,1488965400,1488965460,1488965520,1488965580,1488965640,1488965700,1488965760,1488965820,1488965880,1488965940,1488966000,1488966060,1488966120,1488966180,1488966240,1488966300,1488966360,1488966420,1488966480,1488966540,1488966600,1488966660,1488966720,1488966780,1488966840,1488966900,1488966960,1488967020,1488967080,1488967140,1488967200,1488967260,1488967320,1488967380,1488967440,1488967500,1488967560,1488967620,1488967680,1488967740,1488967800,1488967860,1488967920,1488967980,1488968040,1488968100,1488968160,1488968220,1488968280,1488968340,1488968400,1488968460,1488968520,1488968580,1488968640,1488968700,1488968760,1488968820,1488968880,1488968940,1488969000,1488969060,1488969120,1488969180,1488969240,1488969300,1488969360,1488969420,1488969480,1488969540,1488969600,1488969660,1488969720,1488969780,1488969840,1488969900,1488969960,1488970020,1488970080,1488970200,1488970260,1488970320,1488970380,1488970440,1488970500,1488970560,1488970620,1488970680,1488970740,1488970800,1488970860,1488970920,1488970980,1488971040,1488971100,1488971160,1488971220,1488971280,1488971340,1488971400,1488971460,1488971520,1488971580,1488971640,1488971700,1488971760,1488971820,1488971880,1488971940,1488972000,1488972060,1488972120,1488972180,1488972240,1488972300,1488972360,1488972420,1488972480,1488972540,1488972600,1488972660,1488972720,1488972780,1488972840,1488972900,1488972960,1488973020,1488973080,1488973140,1488973200,1488973260,1488973320,1488973380,1488973440,1488973500,1488973560,1488973620,1488973680,1488973740,1488973800,1488973860,1488973920,1488973980,1488974040,1488974100,1488974160,1488974220,1488974280,1488974340,1488974400,1488974460,1488974520,1488974580,1488974640,1488974700,1488974760,1488974820,1488974880,1488974940,1488975000,1488975060,1488975120,1488975180,1488975240,1488975300,1488975360,1488975420,1488975480,1488975540,1488975600,1488975660,1488975720,1488975780,1488975840,1488975900,1488975960,1488976020,1488976080,1488976140,1488976200,1488976260,1488976320,1488976380,1488976440,1488976500,1488976560,1488976620,1488976680,1488976740,1488976800,1488976860,1488976920,1488976980,1488977040,1488977100,1488977160,1488977220,1488977280,1488977340,1488977400,1488977460,1488977520,1488977580,1488977640,1488977700,1488977760,1488977820,1488977880,1488977940,1488978000,1488978060,1488978120,1488978180,1488978240,1488978300,1488978360,1488978420,1488978480,1488978540,1488978600,1488978660,1488978720,1488978780,1488978840,1488978900,1488978960,1488979020,1488979080,1488979140,1488979200,1488979260,1488979320,1488979380,1488979440,1488979500,1488979560,1488979620,1488979680,1488979740,1488979800,1488979860,1488979920,1488979980,1488980040,1488980100,1488980160,1488980220,1488980280,1488980340,1488980400,1488980460,1488980520,1488980580,1488980640,1488980700,1488980760,1488980820,1488980880,1488980940,1488981000,1488981060,1488981120,1488981180,1488981240,1488981300,1488981360,1488981420,1488981480,1488981540,1488981600,1488981660,1488981720,1488981780,1488981840,1488981900,1488981960,1488982020,1488982080,1488982140,1488982200,1488982260,1488982320,1488982380,1488982440,1488982500,1488982560,1488982620,1488982680,1488982740,1488982800,1488982860,1488982920,1488982980,1488983040,1488983100,1488983160,1488983220,1488983280,1488983340,1488983400,1488983460,1488983520,1488983580,1488983640,1488983700,1488983760,1488983820,1488983880,1488983940,1488984000,1488984060,1488984120,1488984180,1488984240,1488984300,1488984360,1488984420,1488984480,1488984540,1488984600,1488984660,1488984720,1488984780,1488984840,1488984900,1488984960,1488985020,1488985080,1488985140,1488985200,1488985260,1488985320,1488985380,1488985440,1488985500,1488985560,1488985620,1488985680,1488985740,1488985800,1488985860,1488985920,1488985980,1488986040,1488986100,1488986160,1488986220,1488986280,1488986340,1488986400,1488986460,1488986520,1488986580,1488986640,1488986700,1488986760,1488986820,1488986880,1488986940,1488987000,1488987060,1488987120,1488987180,1488987240,1488987300,1488987360,1488987420,1488987480,1488987540,1488987600,1488987660,1488987720,1488987780,1488987840,1488987900,1488987960,1488988020,1488988080,1488988140,1488988200,1488988260,1488988320,1488988380,1488988440,1488988500,1488988560,1488988620,1488988680,1488988740,1488988800],&quot;name&quot;:&quot;focus&quot;},{&quot;values&quot;:[1.077,0.7,0.628,0.592,0.58,0.628,11.891,1.244,1.142,0.7,0.718,0.742,0.646,1.465,0.801,0.694,0.772,0.688,0.658,0.646,0.766,0.628,0.568,0.598,0.586,0.598,0.598,0.58,0.568,0.568,0.634,0.628,0.772,0.592,0.694,0.652,0.58,0.568,0.592,0.586,0.616,0.682,0.61,0.568,0.646,0.921,0.58,0.568,11.747,1.292,1.113,0.706,0.837,0.748,0.7,0.604,0.682,0.682,0.7,0.634,0.61,3.009,2.434,1.836,0.682,1.561,2.5,2.147,1.328,0.568,2.769,1.83,1.041,1.31,0.724,0.694,0.772,0.688,2.494,2.476,2.47,0.813,0.688,0.676,0.742,0.688,0.688,0.658,0.604,0.772,0.634,0.628,0.742,0.61,0.628,1.364,0.933,0.873,0.915,0.831,0.628,0.73,0.604,0.58,0.658,0.598,0.592,0.568,0.568,0.568,0.568,0.634,0.646,0.604,0.568,0.568,0.616,0.598,0.634,0.568,2.632,0.748,0.658,0.58,0.634,0.664,2.608,2.668,2.345,2.075,1.758,1.328,0.903,1.196,1.238,0.819,1.22,0.849,0.801,0.754,0.748,0.79,0.712,0.682,0.646,0.706,0.843,0.652,0.736,0.999,0.999,0.915,2.375,2.351,2.357,2.345,0.909,0.736,0.813,0.796,0.831,0.754,0.676,1.663,1.681,1.657,1.035,0.712,2.596,0.778,1.196,0.616,9.558,3.493,1.729,1.519,1.107,1.059,1.101,0.981,0.951,0.939,0.951,1.699,2.207,15.731,11.801,10.784,6.699,2.309,2.153,2.315,2.255,2.889,2.117,2.267,1.908,1.501,1.471,2.805,2.68,2.249,1.382,1.376,1.364,1.322,1.286,2.279,2.183,4.958,4.893,2.973,2.117,1.872,1.86,1.836,4.653,4.354,2.034,1.453,0.867,0.807,0.766,0.688,0.724,1.011,1.011,0.646,0.604,0.604,0.646,1.669,1.364,0.724,0.592,1.525,11.424,1.029,1.274,1.597,1.364,1.232,1.19,0.981,2.075,1.292,0.993,1.083,1.244,1.25,1.118,0.969,1.118,0.909,1.071,1.095,0.999,0.975,2.638,2.195,1.172,1.017,1.035,0.945,0.957,0.993,0.909,0.921,0.885,0.891,0.945,0.873,0.891,0.819,0.825,0.801,0.73,0.676,0.676,0.706,0.861,2.524,1.986,2.512,1.818,3.056,2.925,0.592,2.183,24.679,5.054,3.397,3.32,3.29,3.272,3.092,3.104,2.751,0.772,0.622,0.604,2.901,0.586,22.782,25.63,24.248,14.708,11.903,8.093,5.73,6.274,23.5,16.496,9.827,5.574,3.894,3.421,3.349,5.467,4.073,4.061,3.397,3.2,3.218,3.224,3.2,3.122,3.074,3.092,3.451,3.272,3.098,3.098,3.086,2.626,1.585,1.364,1.017,0.772,0.766,0.736,0.748,0.849,0.616,3.194,0.825,3.026,3.05,3.05,22.316,5.688,3.278,3.523,3.266,3.308,3.296,2.853,1.651,0.933,0.843,2.105,0.76,0.682,0.664,0.628,4.522,1.041,16.538,18.709,5.521,3.828,18.554,9.008,8.242,6.137,4.504,3.278,3.116,3.086,3.068,3.164,3.122,3.074,3.188,3.134,3.188,3.074,3.098,3.068,3.05,3.11,2.955,2.464,1.806,1.154,0.807,0.712,0.664,0.646,0.616,0.61,0.694,0.664,0.628,0.604,0.634,0.688,0.592,0.604,0.849,0.873,0.706,0.628,0.616,0.975,1.041,0.927,0.897,0.736,0.652,0.592,0.592,0.61,0.604,0.646,0.784,0.748,0.903,0.813,0.825,0.73,0.999,0.807,1.633,0.766,0.748,0.724,0.712,0.873,0.796,0.73,0.915,0.796,4.372,6.137,2.052,1.782,1.998,2.925,1.262,0.586,0.634,0.646,1.453,0.688,0.598,1.86,1.836,1.836,1.854,1.854,1.866,1.872,1.89,1.848,1.866,1.848,1.86,1.836,1.836,1.836,1.854,3.086,3.062,1.86,3.17,2.913,1.878,2.41,1.836,1.836,1.848,9.881,5.096,2.04,1.944,1.98,2.075,1.926,1.908,1.884,2.153,2.207,2.596,2.016,2.034,1.986,2.075,1.992,2.099,1.98,1.944,1.932,1.914,1.938,2.081,1.914,1.962,3.81,2.147,2.207,2.578,2.488,2.387,2.404,2.901,2.799,2.614,2.189,2.129,2.129,2.081,2.064,2.028,1.944,1.938,1.89,1.86,2.046,1.914,2.028,1.95,1.86,1.848,1.848,1.836,1.854,1.836,1.86,1.848,1.836,1.836,1.86,1.866,1.836,2.01,1.95,1.89,1.89,1.866,1.866,2.387,1.974,1.944,2.07,1.998,1.986,2.369,2.141,2.117,2.07,2.022,1.95,2.644,2.081,1.938,1.914,1.938,1.914,1.926,1.962,2.034,1.92,2.004,1.95,1.962,1.944,1.95,1.86,3.236,2.111,1.884,3.11,1.866,3.086,2.392,1.83,1.842,1.83,1.83,1.83,1.836,1.854,1.83,1.854,1.836,1.83,1.764,1.752,1.729,1.711,9.235,1.729,1.711,2.482,2.997,4.761,2.686,2.602,2.213,2.237,2.213,2.099,2.638,2.016,2.111,1.974,1.896,1.878,1.573,1.627,1.585,1.561,1.561,1.543,1.549,1.537,1.537,1.519,1.651,1.531,2.07,1.693,2.787,2.781,1.555,1.525,1.447,1.447,1.453,1.465,1.501,1.453,1.435,1.495,1.465,1.435,1.418,1.418,1.418,1.418,1.43,1.465,1.435,1.418,1.418,1.453,1.435,1.447,1.43,1.441,11.927,2.859,2.333,1.89,1.914,1.854,1.776,2.081,1.735,1.693,2.351,1.519,1.758,1.77,1.657,1.627,1.633,1.609,1.812,1.651,1.675,1.495,1.812,1.531,2.883,2.799,2.823,1.723,1.567,1.531,1.507,1.555,1.525,1.531,1.615,1.441,1.453,1.621,1.519,1.531,1.507,1.501,1.447,1.471,1.435,1.43,1.418,1.418,1.418,1.418,1.447,1.453,1.43,1.418,1.418,1.447,1.447,1.447,1.418,1.418,1.418,1.459,1.43,1.43,2.363,2.434,2.596,1.872,1.717,1.633,1.663,1.609,1.603,2.614,1.854,1.735,1.687,1.645,1.639,1.675,1.567,1.794,1.717,1.705,1.705,1.681,1.705,1.675,1.675,1.782,1.705,1.735,1.657,1.633,1.424,1.322,1.298,1.25,1.364,1.113,1.083,0.951,1.089,1.005,0.879,0.784,0.748,0.724,0.7,0.7,0.682,0.688,0.652,0.616,0.616,0.64,0.616,0.634,0.604,0.592,0.592,0.622,0.604,0.676,0.694,0.64,1.083,1.083,1.029,1.292,1.956,1.842,2.56,2.321,1.555,1.447,1.376,1.322,1.13,1.077,0.957,0.939,0.891,0.867,0.885,0.778,0.778,0.748,6.4,5.365,4.588,4.486,1.513,1.424,1.382,1.148,1.19,2.213,1.4,1.382,1.25,1.095,1.322,1.071,1.412,1.286,1.268,1.657,1.579,1.537,1.501,1.507,1.412,1.447,1.34,1.591,1.292,4.845,1.501,1.579,1.483,1.352,2.47,1.406,1.549,1.525,1.083,1.017,0.688,1.005,0.885,0.778,1.304,1.717,1.525,1.561,0.981,0.76,1.956,1.029,0.975,0.999,0.957,0.909,2.44,2.093,2.123,0.754,0.909,0.772,0.754,0.766,0.736,0.736,0.754,0.712,0.7,0.724,0.58,0.604,0.646,0.64,0.658,1.136,0.819,0.61,0.586,0.634,0.598,0.568,0.909,0.652,1.866,2.602,6.932,2.372,2.94,0.838,0.814,0.791,0.802,0.868,0.773,0.737,0.791,0.707,0.749,0.737,0.689,0.856,0.617,0.826,1.365,1.755,1.036,1.006,0.946,0.898,0.838,0.922,2.773,1.952,1.898,1.797,1.012,3.318,3.414,1.533,0.886,0.844,0.808,0.844,0.737,0.725,0.785,0.719,0.569,0.599,0.617,0.868,1.0,0.617,0.581,5.138,0.976,0.778,0.664,0.676,0.682,0.628,0.724,0.73,0.658,0.61,0.622,0.646,0.61,0.61,0.61,0.61,0.568,0.604,0.61,0.58,1.124,0.796,0.706,0.897,0.634,1.101,1.459,1.848,1.699,2.883,1.388,1.639,1.561,1.256,0.73,0.796,0.778,0.903,0.766,0.748,0.784,0.742,0.742,0.742,0.73,0.855,1.107,2.04,0.939,1.471,1.98,0.646,1.878,0.592,1.824,0.61,0.628,0.658,1.848,1.896,2.195,2.022,0.897,0.754,0.748,0.7,0.772,0.796,0.64,0.568,0.568,0.604,0.58,0.61,0.568,0.568,0.568,0.604,0.58,0.58,0.945,1.717,1.705,1.681,1.22,0.939,1.453,0.939,0.748,1.884,1.866,1.029,1.011,0.778,0.73,0.766,0.748,0.634,0.778,0.778,0.784,0.778,0.742,0.712,0.796,0.772,1.633,1.669,1.657,0.939,0.909,0.855,0.813,0.772,0.712,0.628,0.616,0.592,1.101,0.945,0.706,0.676,0.658,0.622,0.658,0.568,0.616,0.652,0.568,0.568,0.568,0.604,0.568,0.58,0.604,0.568,0.568,0.604,0.568,0.568,0.736,0.766,0.796,0.682,0.592,1.256,1.8,1.041,0.999,1.998,2.351,1.154,0.885,0.772,0.706,0.915,1.992,1.22,0.963,0.825,0.801,0.712,1.95,2.093,2.416,0.855,3.308,0.807,1.98,0.819,1.992,0.7,0.58,0.568,1.525,1.543,1.567,1.549,1.256,0.927,0.748,0.694,0.694,0.807,0.58,0.778,0.628,1.118,1.059,0.801,0.688,0.796,0.748,0.712,0.628,0.568,0.568,0.616,0.604,0.652,0.658,0.67,0.861,0.682,0.622,0.652,1.525,1.717,2.434,2.805,1.226,0.819,1.465,0.718,0.7,0.7,0.634,0.849,0.796,0.766,0.73,0.712,0.742,0.79,0.766,0.766,0.7,0.772,0.754,0.76,0.772,0.7,0.568,0.592,0.586,0.61,0.646,0.628,0.604,0.568,0.568,0.622,0.61,0.568,0.568,0.568,1.615,1.609,1.549,1.549,0.861,0.784,0.73,0.73,0.676,0.676,0.885,0.658,0.849,0.568,5.293,1.196,0.79,0.79,0.742,0.7,1.244,1.406,1.633,1.16,1.196,0.813,0.784,0.748,0.706,0.676,0.64,0.748,0.76,0.742,0.754,0.7,0.7,0.712,0.813,0.766,2.225,1.364,0.849,0.76,2.004,1.639,1.842,1.118,0.652,0.604,0.592,0.688,0.61,0.634,0.604,0.592,0.568,0.568,0.568,0.568,0.61,0.622,0.592,0.568,0.568,0.604,0.592,0.646,0.58,0.58,0.843,0.646,0.58,0.58,0.694,0.825,4.372,1.113,0.981,1.196,0.813,0.784,1.4,1.28,2.249,2.04,1.956,1.322,0.831,0.784,0.76,0.927,0.76,0.742,0.766,0.742,0.7,0.7,0.778,0.766,0.748,0.801,0.748,0.76,0.634,0.586,0.568,0.592,0.586,0.628,0.622,0.616,0.58,0.658,0.604,0.586,0.568,0.568,0.568,0.568,0.634,0.64,0.58,0.568,0.568,0.61,0.592,0.616,0.568,0.568,0.568,0.628,0.568,0.622,0.7,0.682,4.576,1.101,0.903,1.011,0.748,0.64,1.483,0.778,0.688,0.73,0.682,0.67,0.646,0.634,0.58,0.796,0.73,0.7,0.724,0.754,0.724,2.022,2.093,2.081,1.065,0.951,0.819,0.843,0.837,0.586,0.568,0.61,0.58,0.634,0.67,0.622,0.586,0.568,0.682,0.592,0.568,0.568,0.568,2.997,1.83,0.712,0.61,0.568,0.568,0.622,0.568,0.622,0.58,0.568,0.568,0.664,0.58,0.652,0.652,0.885,0.831,0.646,0.592,0.951,0.646,0.867,1.394,1.16,0.999,8.786,1.412,1.023,0.819,0.861,0.772,0.819,0.778,0.801,0.778,0.7,0.748,0.7,0.766,0.784,0.7,0.796,0.724,0.772,0.813,0.61,0.568,0.568,0.58,0.64,0.652,0.622,0.58,0.592,0.682,0.58,0.58,0.568,0.568,0.568,0.628,0.7,0.592,0.568,0.568,0.628,0.568,0.628,0.58,0.568,0.568,0.568,0.568,0.568,0.634,0.778,0.772,0.694,0.951,2.315,3.32,2.829,2.369,1.346,1.226,1.035,1.25,0.999,0.843,0.801,0.748,0.831,0.921,0.903,0.837,0.796,0.801,0.825,0.819,0.873,0.724,0.825,0.831,0.766,0.825,0.784,0.58,0.568,0.58,0.664,0.754,0.628,0.568,0.676,0.658,0.622,0.598,0.634,0.592,0.568,0.652,0.646,0.64,0.568,0.867,0.604,0.604,0.664,0.879,3.128,4.151,2.931,2.458,1.687,1.304,2.398,3.044,2.47,1.938,1.998,1.681,2.345,1.13,1.124,1.083,0.861,0.76,0.724,0.7,0.7,0.64,0.736,0.784,0.784,0.736,0.712,0.772,0.712,0.76,0.778,0.766,0.843,0.736,2.536,3.314,2.68,1.053,0.79,1.358,0.867,0.849,0.748,0.754,0.825,0.807,0.652,0.64,0.616,0.592,0.592,0.628,0.67,0.598,0.568,0.568,0.622,0.628,0.658,0.634,2.422,0.58,0.664,0.58,0.568,0.712,0.694,0.724,0.688,0.592,1.035,0.939,0.754,1.124,1.256,1.118,0.897,0.909,0.843,0.796,0.885,0.807,0.969,0.903,1.023,0.831,0.837,0.766,1.495,5.82,1.274,1.101,1.101,1.083,1.095,1.083,0.885,0.801,0.688,0.766,0.736,0.819,0.748,0.688,2.058,1.818,4.845,4.336,3.774,1.214,10.001,4.899,1.741,1.741,1.717,1.717,1.681,2.65,2.596,2.596,2.488,2.201,1.962,1.89,10.336,11.759,7.459,5.443,5.509,8.057,3.003,3.158,2.919,2.793,3.338,3.649,3.08,3.009,3.481,2.171,2.231,2.656,2.799,2.506,2.243,1.866,3.021,6.113,5.234,4.779,2.345,3.643,3.2,2.973,8.733,6.155,5.569,2.692,1.376,0.993,0.945,0.819,0.79,0.766,0.766,0.778,0.772,0.742,1.077,1.029,2.309,1.866,1.531,1.226,9.044,5.275,1.651,1.292,0.897,0.957,1.262,1.418,1.43,1.316,1.148,2.829,1.878,1.836,1.764,1.477,1.358,1.328,1.047,1.932,1.364,1.274,1.154,2.123,1.346,1.196,1.178,1.166,1.615,1.495,1.394,1.388,1.352,1.328,1.316,1.083,1.107,1.107,0.969,0.909,0.897,0.891,0.7,0.676,0.7,0.706,0.688,4.755,2.811,2.285,3.553,4.952,1.418,3.601,2.249,2.04,2.297,18.267,8.362,9.127,3.942,3.284,3.158,3.104,2.997,2.973,2.458,1.083,0.676,0.604,0.58,0.807,0.67,0.676,25.647,25.749,18.859,13.709,6.98,5.246,8.505,7.309,16.921,8.852,4.881,6.639,4.767,4.618,3.314,3.475,3.75,3.678,3.176,3.104,3.188,3.505,3.236,3.164,3.176,3.505,3.152,3.75,3.128,3.08,2.668,2.309,1.735,1.118,1.035,0.831,0.7,0.766,0.712,0.688,1.023,0.969,3.092,0.742,3.021,7.524,9.056,5.778,3.768,3.684,3.17,3.511,4.588,2.255,1.262,0.748,0.766,1.663,1.848,1.053,26.06,17.046,5.724,4.426,19.248,11.053,7.064,5.485,4.552,3.547,3.349,3.493,3.242,3.212,3.655,3.326,3.332,3.314,3.278,3.188,3.17,3.26,3.212,3.116,2.907,2.47,2.129,1.848,1.447,1.214,0.957,0.7,0.682,0.7,0.658,0.61,0.61,0.688,0.604,0.604,1.041,0.843,0.903,0.879,0.634,0.801,0.855,0.694,0.921,0.885,0.61,0.616,0.658,0.592,0.61,0.61,0.604,0.825,0.754,1.244,1.196,1.065,0.981,0.957,0.891,1.525,1.244,0.993,0.861,1.172,0.891,0.861,0.921,0.837,1.232,1.005,4.48,3.678,2.046,1.788,1.717,0.784,2.07,0.813,2.811,0.79,2.291,1.998,1.884,1.836,1.854,1.86,1.86,1.89,1.878,1.836,1.854,1.872,1.836,1.836,1.836,1.836,1.836,1.98,1.896,3.044,3.062,2.363,3.068,1.836,1.848,1.836,1.836,11.442,6.49,2.237,1.848,1.956,1.92,2.004,1.89,1.848,1.932,1.86,2.034,2.65,2.404,2.781,2.153,2.141,2.692,2.189,2.07,2.081,2.757,2.68,2.65,2.584,2.345,2.56,2.207,2.572,2.369,2.243,2.141,2.04,2.052,2.937,2.739,3.565,3.26,1.98,1.968,1.986,1.908,1.884,1.908,1.92,1.896,1.86,2.064,1.872,1.956,1.878,1.86,1.848,1.836,1.836,1.854,1.836,1.854,1.836,1.848,1.836,1.866,1.836,1.848,1.992,1.998,1.926,1.95,1.92,1.872,2.165,1.956,2.59,2.387,2.267,2.249,2.075,2.064,2.273,2.117,2.111,2.141,2.297,2.159,2.081,2.022,2.022,2.016,2.171,2.01,2.022,2.273,2.159,2.058,2.052,2.046,2.123,2.087,1.968,3.421,3.098,3.14,1.884,1.884,1.854,1.848,1.854,1.836,1.824,1.824,1.848,1.824,1.83,2.512,2.476,2.482,2.518,1.926,1.878,1.866,7.435,1.836,1.729,1.693,2.955,2.614,1.866,1.944,1.633,2.064,1.776,2.141,2.392,2.141,1.998,2.058,1.914,1.848,1.681,1.711,1.663,1.854,1.758,1.764,1.669,1.627,1.627,1.585,1.621,1.615,1.603,1.627,1.609,1.609,1.621,1.591,1.615,2.249,1.609,1.8,1.627,1.567,1.525,2.979,1.513,2.656,1.43,1.597,1.418,1.418,1.441,1.465,1.43,1.418,1.418,1.447,1.441,1.447,1.418,1.418,11.041,1.483,1.501,1.591,1.543,1.519,1.818,1.549,1.453,1.657,1.567,1.615,2.757,2.919,2.704,2.817,2.111,2.428,1.944,1.896,1.609,2.387,1.764,1.681,3.05,1.812,1.627,1.788,3.056,2.877,1.603,2.853,1.615,1.627,1.603,1.537,1.43,1.418,1.657,1.477,1.681,1.489,1.723,1.489,1.531,1.537,1.519,1.525,1.489,1.453,1.447,1.477,1.459,1.418,1.418,1.441,1.418,1.447,1.418,1.418,1.418,1.459,1.453,1.43,1.507,1.501,1.561,1.471,1.43,2.243,2.016,2.046,1.872,2.488,2.153,1.926,2.261,1.615,1.591,1.621,1.603,1.675,1.699,1.699,1.693,1.657,1.609,1.531,1.501,1.471,2.225,2.171,2.099,1.346,1.274,1.184,1.035,0.915,0.807,0.772,1.029,0.742,0.694,0.987,0.849,0.736,0.7,0.652,0.676,0.652,0.688,0.664,0.646,0.628,0.604,0.628,0.634,0.616,0.616,0.604,0.592,0.616,0.592,1.011,1.154,1.047,1.37,1.059,1.011,1.023,1.597,1.202,1.842,1.812,1.639,1.495,1.017,0.873,0.819,0.849,0.867,0.981,0.873,3.015,5.287,4.695,4.94,2.327,2.201,2.249,1.412,2.542,1.585,1.507,1.406,1.19,2.046,1.292,1.25,1.16,1.071,1.029,1.8,1.513,1.346,1.274,1.268,1.244,1.501,1.447,1.328,1.268,1.25,1.322,1.848,1.8,1.25,1.908,1.836,1.43,1.37,1.525,1.346,1.268,1.854,0.718,0.849,0.801,0.664,0.718,1.585,0.807,0.568,2.237,1.202,1.035,1.041,1.19,1.035,0.933,0.933,1.214,1.274,1.059,2.458,1.053,0.921,2.249,1.071,1.477,2.129,2.141,0.921,0.879,0.891,0.855,0.772,0.652,0.664,0.622,0.658,0.67,0.885,0.718,0.652,0.873,0.658,0.634,0.58,0.598,1.908,0.849,0.855,2.052,2.064,3.176,1.806,3.038,1.657,0.784,0.748,0.724,0.712,0.616,0.742,0.622,0.843,0.658,0.58,0.568,1.585,0.837,0.652,1.663,1.687,1.292,0.879,1.095,0.801,0.831,12.728,1.824,1.298,0.849,3.302,1.083,0.867,0.981,1.029,1.011,0.903,0.813,0.736,0.754,0.736,0.688,0.568,0.58,0.604,0.61,0.61,0.646,0.592,0.628,0.616,0.568,0.568,0.807,0.568,0.568,1.477,1.035,0.867,0.742,0.688,0.706,0.658,0.724,0.646,0.568,0.568,0.604,0.61,0.586,1.352,0.724,0.903,0.682,0.628,0.64,0.712,0.646,0.766,2.105,1.166,1.059,1.172,0.993,0.825,0.855,0.813,0.879,0.855,0.748,0.831,0.742,0.742,0.7,0.819,0.891,0.79,0.837,0.778,0.813,0.754,0.712,0.891,0.682,1.346,1.836,0.676,1.812,1.842,0.67,0.622,0.604,0.58,0.568,0.569,0.569,0.569,0.623,0.617,0.581,0.581,0.665,0.599,0.629,0.581,0.592,5.425,0.957,0.64,0.682,0.807,1.95,1.968,2.016,1.914,1.364,1.184,0.975,0.873,1.591,1.262,1.298,0.969,0.975,0.891,0.855,0.754,0.819,0.813,0.819,0.843,0.837,0.801,0.831,0.843,0.867,0.861,0.867,0.843,0.789,0.825,0.837,0.646,0.622,0.658,0.658,0.694,0.682,0.664,0.676,0.646,0.616,0.616,1.728,1.687,1.639,1.657,0.742,0.969,0.819,0.772,0.766,1.19,0.64,0.652,0.694,0.646,0.604,1.059,1.705,1.244,0.825,1.041,1.28,0.837,1.388,2.051,1.316,1.214,1.722,1.035,0.801,0.837,1.238,0.897,2.47,2.028,0.825,2.159,0.963,0.772,1.938,0.915,1.681,3.032,1.645,2.865,1.154,0.891,1.902,0.682,0.694,0.73,0.724,0.748,0.736,0.622,0.604,0.592,0.598,0.568,0.568,0.568,0.622,1.142,0.64,0.616,0.724,0.628,0.604,0.568,3.624,0.789,0.801,0.801,0.658,0.652,0.742,0.706,0.957,0.736,0.646,0.688,0.885,0.646,0.825,1.19,1.053,1.029,0.861,0.748,0.849,0.778,0.634,0.855,0.766,0.789,0.801,0.748,0.742,1.328,0.807,0.885,0.849,1.746,1.711,1.74,1.74,1.543,1.124,0.772,0.682,0.748,0.718,0.7,0.616,0.634,0.58,0.604,0.568,0.604,0.568,0.58,0.604,0.652,0.61,0.568,0.568,0.604,0.568,0.604,0.568,0.568,0.568,0.616,0.61,0.61,0.724,0.67,0.807,4.312,1.112,0.748,1.675,1.035,0.718,1.376,1.591,1.059,0.849,0.789,0.766,0.819,0.754,0.789,0.975,0.891,0.867,0.801,0.825,0.813,1.86,1.866,1.758,2.153,0.963,0.921,2.117,2.004,0.766,1.89,1.836,1.872,0.837,0.807,0.783,0.742,0.766,0.742,0.724,0.736,0.7,0.628,0.688,0.706,0.64,0.646,0.616,0.664,0.658,1.232,0.646,0.616,0.628,1.112,0.742,0.712,0.646,0.718,0.873,1.035,0.604,0.592,0.927,0.867,0.646,1.238,1.16,1.172,0.903,0.885,0.837,0.909,6.388,1.471,1.346,1.094,1.118,1.041,0.891,0.939,0.975,0.951,0.903,0.831,0.801,0.813,0.766,0.622,0.67,0.634,0.688,0.742,0.664,0.658,0.748,0.718,0.706,0.652,0.616,0.616,0.616,0.664,0.67,0.658,0.658,0.664,0.67,0.616,0.568,0.568,0.58,0.58,0.592,0.676,0.67,0.795,0.706,0.622,1.806,2.685,2.129,1.836,2.141,1.178,1.202,0.981,0.945,0.885,0.903,0.909,0.807,1.011,0.909,0.921,0.861,0.861,0.987,0.831,0.915,4.922,1.525,1.071,0.951,0.879,0.951,0.742,0.772,0.682,0.718,0.813,0.813,0.73,0.7,0.664,0.694,0.664,0.634,0.616,0.616,0.67,0.748,0.7,0.64,0.616,0.688,0.658,0.634,0.616,0.568,0.568,0.658,0.58,0.58,0.67,0.658,0.867,0.664,0.634,0.616,0.891,0.634,0.64,1.232,1.071,1.005,0.963,0.783,0.754,0.819,0.772,0.981,0.939,0.843,0.819,0.795,0.855,0.789,0.807,2.171,2.117,2.213,2.093,0.951,0.921,0.819,0.766,0.772,0.64,1.262,0.969,0.813,0.748,0.867,0.652,0.7,0.664,0.616,0.616,0.616,0.658,0.688,0.628,0.628,0.616,0.676,0.58,0.646,0.58,0.568,0.568,0.568,0.568,0.568,0.646,0.795,0.634,0.64,0.927,0.592,0.718,0.652,0.616,0.975,1.214,1.471,0.855,0.813,0.778,1.621,0.825,1.112,1.059,0.987,0.873,0.879,0.879,0.748,0.813,0.837,0.783,0.885,0.76,0.837,0.825,0.783,0.616,0.616,0.688,0.646,0.748,0.712,0.652,0.712,0.664,0.676,0.616,0.616,0.616,0.616,0.682,0.76,0.736,0.628,0.616,0.963,0.682,0.718,3.911,1.687,3.648,3.678,2.913,2.721,1.406,2.476,3.2,2.506,1.28,1.627,2.147,1.932,2.464,2.41,2.344,2.129,1.435,2.548,2.482,2.44,2.374,0.951,1.017,0.951,1.029,0.921,0.915,0.921,0.993,1.029,0.915,0.993,0.969,0.927,1.537,1.376,0.903,0.652,0.807,0.772,0.778,0.76,0.664,0.718,0.628,0.658,0.676,0.616,0.616,0.616,0.628,0.73,0.67,0.64,0.616,0.694,0.676,0.676,0.628,4.3,1.172,0.843,0.568,0.568,0.682,0.67,0.951,0.825,0.634,0.616,1.37,1.154,0.831,1.974,2.045,1.435,1.011,0.993,0.939,1.011,0.963,1.041,1.065,1.023,1.083,0.933,1.059,5.819,3.242,3.116,2.984,3.654,1.597,1.382,1.376,1.298,1.011,1.089,0.891,0.957,0.987,0.849,0.778,0.831,0.969,0.76,3.397,2.177,0.927,0.789,1.95,0.801,11.453,2.135,1.746,1.19,1.154,1.13,1.094,1.059,1.806,1.83,2.398,2.703,16.507,12.925,6.687,5.825,6.896,9.414,6.077,4.246,3.439,4.533,5.06,4.486,4.049,3.906,3.768,3.66,2.65,2.691,2.554,3.236,2.949,3.373,4.031,8.343,10.49,10.401,10.819,8.941,8.63,7.829,5.371,4.581,4.444,4.33,4.097,8.995,6.77,6.262,5.281,1.25,1.567,1.382,5.478,4.88,1.411,1.232,1.19,1.196,1.148,1.136,1.136,1.154,0.772,0.795,0.748,0.748,0.748,0.939,0.819,1.836,1.513,1.25,1.1,1.244,2.309,1.806,1.938,1.956,1.908,2.452,1.268,6.794,13.098,2.913,1.22,1.22,1.914,1.758,1.764,1.292,1.585,1.417,1.238,1.376,1.077,1.148,1.094,1.118,1.124,1.118,1.124,1.136,0.951,0.951,0.963,1.035,1.184,1.011,1.28,0.975,0.927,1.106,0.885,0.885,0.885,0.849,0.837,0.742,0.969,3.469,3.451,1.938,0.831,0.789,6.059,2.189,2.153,0.813,18.379,19.916,5.365,4.982,4.886,3.744,5.389,8.624,7.392,5.383,3.87,4.306,4.157,4.964,2.303,1.974,1.4,1.089,0.993,1.447,1.142,2.955,1.693,1.956,1.681,1.806,1.681,0.933,1.334,1.328,1.208,0.987,0.879,0.927,0.748,0.724,0.664,0.664,0.789,3.923,1.154,1.465,1.471,1.495,1.459,1.447,1.435,1.429,1.268,3.511,1.089,1.352,26.106,24.528,22.727,13.23,9.294,6.693,4.815,20.783,10.801,4.486,4.025,3.451,3.433,3.439,3.714,3.337,3.361,3.146,3.367,3.774,3.511,3.493,3.481,3.254,3.224,3.618,3.391,3.553,3.439,3.433,3.457,3.128,2.524,2.129,1.884,1.573,1.31,1.232,1.196,1.178,1.053,1.047,1.035,0.897,0.807,0.843,0.903,0.855,0.831,0.843,0.843,0.819,0.837,1.262,1.065,0.831,1.13,0.939,0.867,0.873,0.879,1.077,1.148,0.831,1.382,1.142,1.172,1.196,1.023,0.915,1.124,1.077,1.346,0.957,0.933,0.885,0.801,1.124,0.849,1.358,1.22,1.262,1.555,0.921,1.011,1.035,0.963,1.184,1.112,1.244,1.148,1.005,2.231,1.112,1.029,2.165,0.891,2.081,0.819,2.063,0.837,0.652,0.664,0.652,0.664,0.694,0.688,0.694,0.718,0.712,0.694,0.688,0.664,0.652,0.652,0.664,0.825,0.718,0.706,0.7,0.7,1.998,0.724,1.914,1.89,0.652,11.441,5.652,1.053,0.676,0.789,0.682,0.867,1.071,0.688,0.634,0.622,0.7,0.7,1.106,1.136,1.071,0.885,1.447,0.951,0.849,0.813,1.023,0.945,0.939,0.927,0.957,1.059,1.035,0.915,1.609,1.501,1.543,1.023,0.993,0.927,1.794,1.711,0.891,0.819,0.819,0.825,0.831,0.819,0.813,0.748,3.26,3.122,3.313,0.688,22.309,4.45,3.248,3.056,3.068,3.044,3.068,1.322,0.813,0.724,0.7,0.664,0.682,0.652,0.652,0.742,0.819,0.999,0.801,0.7,0.646,0.831,1.065,0.819,0.951,1.106,1.118,1.017,0.849,0.795,0.861,1.077,1.017,1.023,0.951,0.939,3.583,1.047,8.056,6.011,5.897,4.055,10.425,11.525,7.069,4.833,3.188,3.158,3.062,3.116,3.254,3.032,3.301,3.2,3.104,3.11,3.313,3.325,3.056,3.72,4.252,3.427,3.236,1.328,0.939,0.736,0.712,0.7,0.664,0.64,10.227,1.382,0.694,0.592,2.022,0.783,0.945,0.867,0.73,0.819,0.801,0.795,0.813,1.836,1.083,1.489,1.118,0.879,0.801,0.831,1.752,1.573,1.621,1.579,1.394,1.124,1.041,1.029,1.023,1.035,1.023,0.945,0.909,0.843,2.53,2.051,1.017,0.712,0.849,1.884,4.3,3.726,2.039,1.699,1.645,1.142,0.646,0.658,0.658,1.483,0.658,1.938,1.884,1.884,1.884,1.896,1.896,2.004,1.896,1.884,11.705,1.938,2.709,1.896,2.039,2.033,2.033,2.063,1.98,2.195,2.967,2.105,2.063,2.721,2.386,2.751,2.506,2.153,2.045,2.344,2.35,2.356,2.147,2.171,2.356,2.141,2.153,2.644,2.333,2.225,3.469,2.141,3.385,3.236,2.159,3.164,1.908,2.626,2.656,2.853,2.817,2.267,2.189,2.039,2.028,1.95,1.92,1.884,1.896,1.884,1.914,1.926,1.884,1.884,1.884,1.896,1.896,1.914,1.914,1.884,1.884,1.866,1.86,1.836,1.956,1.956,1.98,1.92,1.908,1.872,2.039,1.902,2.159,2.548,2.41,2.303,2.099,2.081,2.039,2.075,2.028,2.135,2.177,2.171,2.201,2.165,2.141,2.141,2.237,2.183,2.093,2.075,2.057,2.063,2.051,2.811,2.679,2.703,2.099,2.231,2.051,1.938,1.902,2.028,2.051,1.974,1.956,1.908,1.92,1.884,1.914,1.92,1.896,1.884,1.884,1.914,1.896,1.914,1.896,1.836,1.83,1.86,1.83,1.83,1.95,1.95,1.92,2.147,1.914,1.854,2.315,2.667,2.434,2.374,2.602,2.769,3.319,2.488,2.243,2.135,2.237,2.028,2.045,1.98,1.962,1.95,1.938,1.896,1.938,1.92,1.824,1.854,1.74,1.717,1.693,1.537,2.339,2.35,2.344,2.362,1.693,1.645,1.603,1.531,1.531,1.501,1.489,1.489,1.483,1.483,1.507,1.663,1.483,1.471,1.722,1.669,1.567,1.531,1.501,1.639,1.465,1.615,1.537,1.429,2.117,1.555,1.854,1.567,1.465,1.489,1.878,1.567,1.585,2.452,2.446,2.099,1.908,1.699,2.865,1.758,1.728,1.687,2.309,2.871,2.853,2.895,3.002,2.057,3.236,2.937,1.728,1.746,2.925,1.806,1.693,1.669,1.657,1.627,1.597,1.639,1.711,1.657,1.752,1.585,1.525,1.842,1.537,1.489,1.465,1.465,2.721,1.573,1.525,2.123,2.679,1.501,1.746,1.758,1.465,2.01,1.513,1.609,1.555,1.573,1.621,2.41,2.656,2.488,1.902,2.123,2.022,1.693,1.603,2.344,2.051,2.171,1.711,1.657,1.621,1.681,3.571,2.518,2.614,1.878,2.099,1.657,1.681,2.285,1.854,1.782,1.711,1.74,1.651,1.663,1.639,1.585,1.465,1.507,1.465,1.501,1.531,1.549,1.477,1.525,1.495,1.495,1.501,1.429,1.382,1.358,1.316,1.465,1.112,1.178,0.909,5.813,1.322,1.005,0.843,0.801,0.795,0.748,0.724,0.766,1.184,0.831,0.766,0.754,0.736,0.628,1.388,1.663,1.597,2.225,1.884,1.645,1.4,1.292,1.214,1.25,1.184,1.22,1.244,1.28,1.28,1.208,1.118,0.987,0.969,0.987,0.825,0.867,0.795,0.837,1.142,0.778,0.873,1.848,2.961,2.937,2.237,1.693,7.62,7.883,6.166,4.982,2.243,2.404,2.285,2.279,2.434,1.178,1.328,1.651,1.429,1.274,1.184,1.178,1.423,1.346,1.238,1.657,1.561,1.382,1.489,1.376,1.603,2.554,1.334,1.274,1.423,1.328,1.322,2.057,1.77,1.794,1.579,1.537,1.453,1.591,2.656,2.673,2.745,2.303,1.071,1.615,1.154,0.963,1.035,1.495,0.843,1.872,1.812,1.86,1.609,0.957,0.819,0.801,0.783,0.7,0.736,0.754,0.694,0.682,0.676,0.712,0.682,0.664,0.664,0.664,0.7,0.7,0.676,0.682,0.867,0.909,0.7,1.077,0.987,0.813,0.712,0.676,0.64,1.579,2.165,1.651,0.999,0.861,1.047,1.142,0.879,0.616,1.429,1.435,1.154,1.573,1.071,0.819,0.783,2.213,0.945,0.975,2.919,2.315,2.051,2.464,0.903,2.051,3.654,2.123,2.739,3.248,2.01,2.087,0.772,0.664,0.664,0.616,0.628,0.676,0.67,0.664,0.652,0.652,0.628,0.652,0.628,0.616,0.616,0.676,1.83,2.907,0.879,1.053,0.837,0.694,0.778,0.652,0.616,0.568,0.604,1.495,1.495,1.639,1.639,0.951,0.897,0.795,0.778,0.748,0.736,0.724,1.316,1.136,1.238,0.969,0.903,0.855,0.909,0.831,0.987,0.891,0.825,1.13,0.795,0.831,1.083,1.19,0.903,0.819,0.819,0.861,0.819,0.652,0.652,0.616,0.616,0.652,0.664,0.676,0.64,0.64,0.664,0.634,0.628,0.628,0.634,0.616,0.616,0.628,0.688,0.628,0.616,0.616,0.658,0.616,0.604,0.568,0.568,0.568,0.61,0.604,0.568,0.837,0.64,0.843,0.664,1.071,0.963,1.788,1.758,1.722,2.159,1.537,1.376,1.089,0.963,0.891,0.861,0.789,0.939,0.849,0.801,0.843,0.837,0.789,0.789,0.849,0.849,0.772,0.789,1.226,0.867,0.825,1.83,1.95,1.872,1.872,1.866,1.232,0.682,0.628,0.682,0.64,0.634,0.616,0.616,0.616,0.616,0.658,0.664,0.616,0.616,0.616,0.652,0.628,0.718,0.658,0.58,0.754,0.7,0.646,0.604,0.682,0.688,0.73,0.7,0.652,0.981,0.622,0.951,7.47,1.429,2.028,1.346,1.041,1.172,0.969,0.999,0.873,0.969,0.975,1.035,1.017,0.939,0.951,0.915,0.879,0.837,0.795,0.855,0.837,0.813,0.843,0.795,0.766,0.646,0.676,0.718,0.73,1.86,1.854,1.872,0.921,0.843,0.873,0.813,0.742,0.73,0.772,0.754,0.712,0.658,0.64,0.67,0.616,0.628,0.658,0.616,0.616,0.664,0.652,0.628,0.748,0.724,0.855,0.724,0.622,0.909,0.658,0.688,0.694,1.388,1.077,1.22,0.855,2.183,3.026,1.136,0.999,1.035,0.915,0.939,0.909,0.933,0.933,0.849,0.855,0.843,0.849,0.867,0.807,0.807,0.772,0.819,0.658,0.616,0.664,0.706,0.67,0.64,0.676,0.688,0.664,0.676,0.64,0.64,0.616,0.616,0.664,0.712,0.712,1.968,1.932,1.92,0.969,0.891,0.867,0.837,0.712,0.742,0.736,0.73,0.783,0.783,0.706,0.849,0.664,0.634,0.783,0.783,0.748,1.154,1.136,1.083,0.885,0.927,0.772,4.952,1.346,1.083,0.879,0.903,0.975,0.927,0.891,0.837,0.987,1.023,0.837,0.855,0.813,0.801,0.855,0.76,0.616,0.67,0.628,0.67,0.694,0.694,0.664,0.706,0.658,0.652,0.628,0.646,0.616,0.616,0.67,0.688,0.658,0.616,0.616,0.628,0.658,0.664,0.586,0.568],&quot;times&quot;:[1488729600,1488729660,1488729720,1488729780,1488729840,1488729900,1488729960,1488730020,1488730080,1488730140,1488730200,1488730260,1488730320,1488730380,1488730440,1488730500,1488730560,1488730620,1488730680,1488730740,1488730800,1488730860,1488730920,1488730980,1488731040,1488731100,1488731160,1488731220,1488731280,1488731340,1488731400,1488731460,1488731520,1488731580,1488731640,1488731700,1488731760,1488731820,1488731880,1488731940,1488732000,1488732060,1488732120,1488732180,1488732240,1488732300,1488732360,1488732420,1488732480,1488732540,1488732600,1488732660,1488732720,1488732780,1488732840,1488732900,1488732960,1488733020,1488733080,1488733140,1488733200,1488733260,1488733320,1488733380,1488733440,1488733500,1488733560,1488733620,1488733680,1488733740,1488733800,1488733860,1488733920,1488733980,1488734040,1488734100,1488734160,1488734220,1488734280,1488734340,1488734400,1488734460,1488734520,1488734580,1488734640,1488734700,1488734760,1488734820,1488734880,1488734940,1488735000,1488735060,1488735120,1488735180,1488735240,1488735300,1488735360,1488735420,1488735480,1488735540,1488735600,1488735660,1488735720,1488735780,1488735840,1488735900,1488735960,1488736020,1488736080,1488736140,1488736200,1488736260,1488736320,1488736380,1488736440,1488736500,1488736560,1488736620,1488736680,1488736740,1488736800,1488736860,1488736920,1488736980,1488737040,1488737100,1488737160,1488737220,1488737280,1488737340,1488737400,1488737460,1488737520,1488737580,1488737640,1488737700,1488737760,1488737820,1488737880,1488737940,1488738000,1488738060,1488738120,1488738180,1488738240,1488738300,1488738360,1488738420,1488738480,1488738540,1488738600,1488738660,1488738720,1488738780,1488738840,1488738900,1488738960,1488739020,1488739080,1488739140,1488739200,1488739260,1488739320,1488739380,1488739440,1488739500,1488739560,1488739620,1488739680,1488739740,1488739800,1488739860,1488739920,1488739980,1488740040,1488740100,1488740160,1488740220,1488740280,1488740340,1488740400,1488740460,1488740520,1488740580,1488740640,1488740700,1488740760,1488740820,1488740880,1488740940,1488741000,1488741060,1488741120,1488741180,1488741240,1488741300,1488741360,1488741420,1488741480,1488741540,1488741600,1488741660,1488741720,1488741780,1488741840,1488741900,1488741960,1488742020,1488742080,1488742140,1488742200,1488742260,1488742320,1488742380,1488742440,1488742500,1488742560,1488742620,1488742680,1488742740,1488742800,1488742860,1488742920,1488742980,1488743040,1488743100,1488743160,1488743220,1488743280,1488743340,1488743400,1488743460,1488743520,1488743580,1488743640,1488743700,1488743760,1488743820,1488743880,1488743940,1488744000,1488744060,1488744120,1488744180,1488744240,1488744300,1488744360,1488744420,1488744480,1488744540,1488744600,1488744660,1488744720,1488744780,1488744840,1488744900,1488744960,1488745020,1488745080,1488745140,1488745200,1488745260,1488745320,1488745380,1488745440,1488745500,1488745560,1488745620,1488745680,1488745740,1488745800,1488745860,1488745920,1488745980,1488746040,1488746100,1488746160,1488746220,1488746280,1488746340,1488746400,1488746460,1488746520,1488746580,1488746640,1488746700,1488746760,1488746820,1488746880,1488746940,1488747000,1488747060,1488747120,1488747180,1488747240,1488747300,1488747360,1488747420,1488747480,1488747540,1488747600,1488747660,1488747720,1488747780,1488747840,1488747900,1488747960,1488748020,1488748080,1488748140,1488748200,1488748260,1488748320,1488748380,1488748440,1488748500,1488748560,1488748620,1488748680,1488748740,1488748800,1488748860,1488748920,1488748980,1488749040,1488749100,1488749160,1488749220,1488749280,1488749340,1488749400,1488749460,1488749520,1488749580,1488749640,1488749700,1488749760,1488749820,1488749880,1488749940,1488750000,1488750060,1488750120,1488750180,1488750240,1488750300,1488750360,1488750420,1488750480,1488750540,1488750600,1488750660,1488750720,1488750780,1488750840,1488750900,1488750960,1488751020,1488751080,1488751140,1488751200,1488751260,1488751320,1488751380,1488751440,1488751500,1488751560,1488751620,1488751680,1488751740,1488751800,1488751860,1488751920,1488751980,1488752040,1488752100,1488752160,1488752220,1488752280,1488752340,1488752400,1488752460,1488752520,1488752580,1488752640,1488752700,1488752760,1488752820,1488752880,1488752940,1488753000,1488753060,1488753120,1488753180,1488753240,1488753300,1488753360,1488753420,1488753480,1488753540,1488753600,1488753660,1488753720,1488753780,1488753840,1488753900,1488753960,1488754020,1488754080,1488754140,1488754200,1488754260,1488754320,1488754380,1488754440,1488754500,1488754560,1488754620,1488754680,1488754740,1488754800,1488754860,1488754920,1488754980,1488755040,1488755100,1488755160,1488755220,1488755280,1488755340,1488755400,1488755460,1488755520,1488755580,1488755640,1488755700,1488755760,1488755820,1488755880,1488755940,1488756000,1488756060,1488756120,1488756180,1488756240,1488756300,1488756360,1488756420,1488756480,1488756540,1488756600,1488756660,1488756720,1488756780,1488756840,1488756900,1488756960,1488757020,1488757080,1488757140,1488757200,1488757260,1488757320,1488757380,1488757440,1488757500,1488757560,1488757620,1488757680,1488757740,1488757800,1488757860,1488757920,1488757980,1488758040,1488758100,1488758160,1488758220,1488758280,1488758340,1488758400,1488758460,1488758520,1488758580,1488758640,1488758700,1488758760,1488758820,1488758880,1488758940,1488759000,1488759060,1488759120,1488759180,1488759240,1488759300,1488759360,1488759420,1488759480,1488759540,1488759600,1488759660,1488759720,1488759780,1488759840,1488759900,1488759960,1488760020,1488760080,1488760140,1488760200,1488760260,1488760320,1488760380,1488760440,1488760500,1488760560,1488760620,1488760680,1488760740,1488760800,1488760860,1488760920,1488760980,1488761040,1488761100,1488761160,1488761220,1488761280,1488761340,1488761400,1488761460,1488761520,1488761580,1488761640,1488761700,1488761760,1488761820,1488761880,1488761940,1488762000,1488762060,1488762120,1488762180,1488762240,1488762300,1488762360,1488762420,1488762480,1488762540,1488762600,1488762660,1488762720,1488762780,1488762840,1488762900,1488762960,1488763020,1488763080,1488763140,1488763200,1488763260,1488763320,1488763380,1488763440,1488763500,1488763560,1488763620,1488763680,1488763740,1488763800,1488763860,1488763920,1488763980,1488764040,1488764100,1488764160,1488764220,1488764280,1488764340,1488764400,1488764460,1488764520,1488764580,1488764640,1488764700,1488764760,1488764820,1488764880,1488764940,1488765000,1488765060,1488765120,1488765180,1488765240,1488765300,1488765360,1488765420,1488765480,1488765540,1488765600,1488765660,1488765720,1488765780,1488765840,1488765900,1488765960,1488766020,1488766080,1488766140,1488766200,1488766260,1488766320,1488766380,1488766440,1488766500,1488766560,1488766620,1488766680,1488766740,1488766800,1488766860,1488766920,1488766980,1488767040,1488767100,1488767160,1488767220,1488767280,1488767340,1488767400,1488767460,1488767520,1488767580,1488767640,1488767700,1488767760,1488767820,1488767880,1488767940,1488768000,1488768060,1488768120,1488768180,1488768240,1488768300,1488768360,1488768420,1488768480,1488768540,1488768600,1488768660,1488768720,1488768780,1488768840,1488768900,1488768960,1488769020,1488769080,1488769140,1488769200,1488769260,1488769320,1488769380,1488769440,1488769500,1488769560,1488769620,1488769680,1488769740,1488769800,1488769860,1488769920,1488769980,1488770040,1488770100,1488770160,1488770220,1488770280,1488770340,1488770400,1488770460,1488770520,1488770580,1488770640,1488770700,1488770760,1488770820,1488770880,1488770940,1488771000,1488771060,1488771120,1488771180,1488771240,1488771300,1488771360,1488771420,1488771480,1488771540,1488771600,1488771660,1488771720,1488771780,1488771840,1488771900,1488771960,1488772020,1488772080,1488772140,1488772200,1488772260,1488772320,1488772380,1488772440,1488772500,1488772560,1488772620,1488772680,1488772740,1488772800,1488772860,1488772920,1488772980,1488773040,1488773100,1488773160,1488773220,1488773280,1488773340,1488773400,1488773460,1488773520,1488773580,1488773640,1488773700,1488773760,1488773820,1488773880,1488773940,1488774000,1488774060,1488774120,1488774180,1488774240,1488774300,1488774360,1488774420,1488774480,1488774540,1488774600,1488774660,1488774720,1488774780,1488774840,1488774900,1488774960,1488775020,1488775080,1488775140,1488775200,1488775260,1488775320,1488775380,1488775440,1488775500,1488775560,1488775620,1488775680,1488775740,1488775800,1488775860,1488775920,1488775980,1488776040,1488776100,1488776160,1488776220,1488776280,1488776340,1488776400,1488776460,1488776520,1488776580,1488776640,1488776700,1488776760,1488776820,1488776880,1488776940,1488777000,1488777060,1488777120,1488777180,1488777240,1488777300,1488777360,1488777420,1488777480,1488777540,1488777600,1488777660,1488777720,1488777780,1488777840,1488777900,1488777960,1488778020,1488778080,1488778140,1488778200,1488778260,1488778320,1488778380,1488778440,1488778500,1488778560,1488778620,1488778680,1488778740,1488778800,1488778860,1488778920,1488778980,1488779040,1488779100,1488779160,1488779220,1488779280,1488779340,1488779400,1488779460,1488779520,1488779580,1488779640,1488779700,1488779760,1488779820,1488779880,1488779940,1488780000,1488780060,1488780120,1488780180,1488780240,1488780300,1488780360,1488780420,1488780480,1488780540,1488780600,1488780660,1488780720,1488780780,1488780840,1488780900,1488780960,1488781020,1488781080,1488781140,1488781200,1488781260,1488781320,1488781380,1488781440,1488781500,1488781560,1488781620,1488781680,1488781740,1488781800,1488781860,1488781920,1488781980,1488782040,1488782100,1488782160,1488782220,1488782280,1488782340,1488782400,1488782460,1488782520,1488782580,1488782640,1488782700,1488782760,1488782820,1488782880,1488782940,1488783000,1488783060,1488783120,1488783180,1488783240,1488783300,1488783360,1488783420,1488783480,1488783540,1488783600,1488783660,1488783720,1488783780,1488783840,1488783900,1488783960,1488784020,1488784080,1488784140,1488784200,1488784260,1488784320,1488784380,1488784440,1488784500,1488784560,1488784620,1488784680,1488784740,1488784800,1488784860,1488784920,1488784980,1488785040,1488785100,1488785160,1488785220,1488785280,1488785340,1488785400,1488785460,1488785520,1488785580,1488785640,1488785700,1488785760,1488785820,1488785880,1488785940,1488786000,1488786060,1488786120,1488786180,1488786240,1488786300,1488786360,1488786420,1488786480,1488786540,1488786600,1488786660,1488786720,1488786780,1488786840,1488786900,1488786960,1488787020,1488787080,1488787140,1488787200,1488787260,1488787320,1488787380,1488787440,1488787500,1488787560,1488787620,1488787680,1488787740,1488787800,1488787860,1488787920,1488787980,1488788040,1488788100,1488788160,1488788220,1488788280,1488788340,1488788400,1488788460,1488788520,1488788580,1488788640,1488788700,1488788760,1488788820,1488788880,1488788940,1488789000,1488789060,1488789120,1488789180,1488789240,1488789300,1488789360,1488789420,1488789480,1488789540,1488789600,1488789660,1488789720,1488789780,1488789840,1488789900,1488789960,1488790020,1488790080,1488790140,1488790200,1488790260,1488790320,1488790380,1488790440,1488790500,1488790560,1488790620,1488790680,1488790740,1488790800,1488790860,1488790920,1488790980,1488791040,1488791100,1488791160,1488791220,1488791280,1488791340,1488791400,1488791460,1488791520,1488791580,1488791640,1488791700,1488791760,1488791820,1488791880,1488791940,1488792000,1488792060,1488792120,1488792180,1488792240,1488792300,1488792360,1488792420,1488792480,1488792540,1488792600,1488792660,1488792720,1488792780,1488792840,1488792900,1488792960,1488793020,1488793080,1488793140,1488793200,1488793260,1488793320,1488793380,1488793440,1488793500,1488793560,1488793620,1488793680,1488793740,1488793800,1488793860,1488793920,1488793980,1488794040,1488794100,1488794160,1488794220,1488794280,1488794340,1488794400,1488794460,1488794520,1488794580,1488794640,1488794700,1488794760,1488794820,1488794880,1488794940,1488795000,1488795060,1488795120,1488795180,1488795240,1488795300,1488795360,1488795420,1488795480,1488795540,1488795600,1488795660,1488795720,1488795780,1488795840,1488795900,1488795960,1488796020,1488796080,1488796140,1488796200,1488796260,1488796320,1488796380,1488796440,1488796500,1488796560,1488796620,1488796680,1488796740,1488796800,1488796860,1488796920,1488796980,1488797040,1488797100,1488797160,1488797220,1488797280,1488797340,1488797400,1488797460,1488797520,1488797580,1488797640,1488797700,1488797760,1488797820,1488797880,1488797940,1488798000,1488798060,1488798120,1488798180,1488798240,1488798300,1488798360,1488798420,1488798480,1488798540,1488798600,1488798660,1488798720,1488798780,1488798840,1488798900,1488798960,1488799020,1488799080,1488799140,1488799200,1488799260,1488799320,1488799380,1488799440,1488799500,1488799560,1488799620,1488799680,1488799740,1488799800,1488799860,1488799920,1488799980,1488800040,1488800100,1488800160,1488800220,1488800280,1488800340,1488800400,1488800460,1488800520,1488800580,1488800640,1488800700,1488800760,1488800820,1488800880,1488800940,1488801000,1488801060,1488801120,1488801180,1488801240,1488801300,1488801360,1488801420,1488801480,1488801540,1488801600,1488801660,1488801720,1488801780,1488801840,1488801900,1488801960,1488802020,1488802080,1488802140,1488802200,1488802260,1488802320,1488802380,1488802440,1488802500,1488802560,1488802620,1488802680,1488802740,1488802800,1488802860,1488802920,1488802980,1488803040,1488803100,1488803160,1488803220,1488803280,1488803340,1488803400,1488803460,1488803520,1488803580,1488803640,1488803700,1488803760,1488803820,1488803880,1488803940,1488804000,1488804060,1488804120,1488804180,1488804240,1488804300,1488804360,1488804420,1488804480,1488804540,1488804600,1488804660,1488804720,1488804780,1488804840,1488804900,1488804960,1488805020,1488805080,1488805140,1488805200,1488805260,1488805320,1488805380,1488805440,1488805500,1488805560,1488805620,1488805680,1488805740,1488805800,1488805860,1488805920,1488805980,1488806040,1488806100,1488806160,1488806220,1488806280,1488806340,1488806400,1488806460,1488806520,1488806580,1488806640,1488806700,1488806760,1488806820,1488806880,1488806940,1488807000,1488807060,1488807120,1488807180,1488807240,1488807300,1488807360,1488807420,1488807480,1488807540,1488807600,1488807660,1488807720,1488807780,1488807840,1488807900,1488807960,1488808020,1488808080,1488808140,1488808200,1488808260,1488808320,1488808380,1488808440,1488808500,1488808560,1488808620,1488808680,1488808740,1488808800,1488808860,1488808920,1488808980,1488809040,1488809100,1488809160,1488809220,1488809280,1488809340,1488809400,1488809460,1488809520,1488809580,1488809640,1488809700,1488809760,1488809820,1488809880,1488809940,1488810000,1488810060,1488810120,1488810180,1488810240,1488810300,1488810360,1488810420,1488810480,1488810540,1488810600,1488810660,1488810720,1488810780,1488810840,1488810900,1488810960,1488811020,1488811080,1488811140,1488811200,1488811260,1488811320,1488811380,1488811440,1488811500,1488811560,1488811620,1488811680,1488811740,1488811800,1488811860,1488811920,1488811980,1488812040,1488812100,1488812160,1488812220,1488812280,1488812340,1488812400,1488812460,1488812520,1488812580,1488812640,1488812700,1488812760,1488812820,1488812880,1488812940,1488813000,1488813060,1488813120,1488813180,1488813240,1488813300,1488813360,1488813420,1488813480,1488813540,1488813600,1488813660,1488813720,1488813780,1488813840,1488813900,1488813960,1488814020,1488814080,1488814140,1488814200,1488814260,1488814320,1488814380,1488814440,1488814500,1488814560,1488814620,1488814680,1488814740,1488814800,1488814860,1488814920,1488814980,1488815040,1488815100,1488815160,1488815220,1488815280,1488815340,1488815400,1488815460,1488815520,1488815580,1488815640,1488815700,1488815760,1488815820,1488815880,1488815940,1488816000,1488816060,1488816120,1488816180,1488816240,1488816300,1488816360,1488816420,1488816480,1488816540,1488816600,1488816660,1488816720,1488816780,1488816840,1488816900,1488816960,1488817020,1488817080,1488817140,1488817200,1488817260,1488817320,1488817380,1488817440,1488817500,1488817560,1488817620,1488817680,1488817740,1488817800,1488817860,1488817920,1488817980,1488818040,1488818100,1488818160,1488818220,1488818280,1488818340,1488818400,1488818460,1488818520,1488818580,1488818640,1488818700,1488818760,1488818820,1488818880,1488818940,1488819000,1488819060,1488819120,1488819180,1488819240,1488819300,1488819360,1488819420,1488819480,1488819540,1488819600,1488819660,1488819720,1488819780,1488819840,1488819900,1488819960,1488820020,1488820080,1488820140,1488820200,1488820260,1488820320,1488820380,1488820440,1488820500,1488820560,1488820620,1488820680,1488820740,1488820800,1488820860,1488820920,1488820980,1488821040,1488821100,1488821160,1488821220,1488821280,1488821340,1488821400,1488821460,1488821520,1488821580,1488821640,1488821700,1488821760,1488821820,1488821880,1488821940,1488822000,1488822060,1488822120,1488822180,1488822240,1488822300,1488822360,1488822420,1488822480,1488822540,1488822600,1488822660,1488822720,1488822780,1488822840,1488822900,1488822960,1488823020,1488823080,1488823140,1488823200,1488823260,1488823320,1488823380,1488823440,1488823500,1488823560,1488823620,1488823680,1488823740,1488823800,1488823860,1488823920,1488823980,1488824040,1488824100,1488824160,1488824220,1488824280,1488824340,1488824400,1488824460,1488824520,1488824580,1488824640,1488824700,1488824760,1488824820,1488824880,1488824940,1488825000,1488825060,1488825120,1488825180,1488825240,1488825300,1488825360,1488825420,1488825480,1488825540,1488825600,1488825660,1488825720,1488825780,1488825840,1488825900,1488825960,1488826020,1488826080,1488826140,1488826200,1488826260,1488826320,1488826380,1488826440,1488826500,1488826560,1488826620,1488826680,1488826740,1488826800,1488826860,1488826920,1488826980,1488827040,1488827100,1488827160,1488827220,1488827280,1488827340,1488827400,1488827460,1488827520,1488827580,1488827640,1488827700,1488827760,1488827820,1488827880,1488827940,1488828000,1488828060,1488828120,1488828180,1488828240,1488828300,1488828360,1488828420,1488828480,1488828540,1488828600,1488828660,1488828720,1488828780,1488828840,1488828900,1488828960,1488829020,1488829080,1488829140,1488829200,1488829260,1488829320,1488829380,1488829440,1488829500,1488829560,1488829620,1488829680,1488829740,1488829800,1488829860,1488829920,1488829980,1488830040,1488830100,1488830160,1488830220,1488830280,1488830340,1488830400,1488830460,1488830520,1488830580,1488830640,1488830700,1488830760,1488830820,1488830880,1488830940,1488831000,1488831060,1488831120,1488831180,1488831240,1488831300,1488831360,1488831420,1488831480,1488831540,1488831600,1488831660,1488831720,1488831780,1488831840,1488831900,1488831960,1488832020,1488832080,1488832140,1488832200,1488832260,1488832320,1488832380,1488832440,1488832500,1488832560,1488832620,1488832680,1488832740,1488832800,1488832860,1488832920,1488832980,1488833040,1488833100,1488833160,1488833220,1488833280,1488833340,1488833400,1488833460,1488833520,1488833580,1488833640,1488833700,1488833760,1488833820,1488833880,1488833940,1488834000,1488834060,1488834120,1488834180,1488834240,1488834300,1488834360,1488834420,1488834480,1488834540,1488834600,1488834660,1488834720,1488834780,1488834840,1488834900,1488834960,1488835020,1488835080,1488835140,1488835200,1488835260,1488835320,1488835380,1488835440,1488835500,1488835560,1488835620,1488835680,1488835740,1488835800,1488835860,1488835920,1488835980,1488836040,1488836100,1488836160,1488836220,1488836280,1488836340,1488836400,1488836460,1488836520,1488836580,1488836640,1488836700,1488836760,1488836820,1488836880,1488836940,1488837000,1488837060,1488837120,1488837180,1488837240,1488837300,1488837360,1488837420,1488837480,1488837540,1488837600,1488837660,1488837720,1488837780,1488837840,1488837900,1488837960,1488838020,1488838080,1488838140,1488838200,1488838260,1488838320,1488838380,1488838440,1488838500,1488838560,1488838620,1488838680,1488838740,1488838800,1488838860,1488838920,1488838980,1488839040,1488839100,1488839160,1488839220,1488839280,1488839340,1488839400,1488839460,1488839520,1488839580,1488839640,1488839700,1488839760,1488839820,1488839880,1488839940,1488840000,1488840060,1488840120,1488840180,1488840240,1488840300,1488840360,1488840420,1488840480,1488840540,1488840600,1488840660,1488840720,1488840780,1488840840,1488840900,1488840960,1488841020,1488841080,1488841140,1488841200,1488841260,1488841320,1488841380,1488841440,1488841500,1488841560,1488841620,1488841680,1488841740,1488841800,1488841860,1488841920,1488841980,1488842040,1488842100,1488842160,1488842220,1488842280,1488842340,1488842400,1488842460,1488842520,1488842580,1488842640,1488842700,1488842760,1488842820,1488842880,1488842940,1488843000,1488843060,1488843120,1488843180,1488843240,1488843300,1488843360,1488843420,1488843480,1488843540,1488843600,1488843660,1488843720,1488843780,1488843840,1488843900,1488843960,1488844020,1488844080,1488844140,1488844200,1488844260,1488844320,1488844380,1488844440,1488844500,1488844560,1488844620,1488844680,1488844740,1488844800,1488844860,1488844920,1488844980,1488845040,1488845100,1488845160,1488845220,1488845280,1488845340,1488845400,1488845460,1488845520,1488845580,1488845640,1488845700,1488845760,1488845820,1488845880,1488845940,1488846000,1488846060,1488846120,1488846180,1488846240,1488846300,1488846360,1488846420,1488846480,1488846540,1488846600,1488846660,1488846720,1488846780,1488846840,1488846900,1488846960,1488847020,1488847080,1488847140,1488847200,1488847260,1488847320,1488847380,1488847440,1488847500,1488847560,1488847620,1488847680,1488847740,1488847800,1488847860,1488847920,1488847980,1488848040,1488848100,1488848160,1488848220,1488848280,1488848340,1488848400,1488848460,1488848520,1488848580,1488848640,1488848700,1488848760,1488848820,1488848880,1488848940,1488849000,1488849060,1488849120,1488849180,1488849240,1488849300,1488849360,1488849420,1488849480,1488849540,1488849600,1488849660,1488849720,1488849780,1488849840,1488849900,1488849960,1488850020,1488850080,1488850140,1488850200,1488850260,1488850320,1488850380,1488850440,1488850500,1488850560,1488850620,1488850680,1488850740,1488850800,1488850860,1488850920,1488850980,1488851040,1488851100,1488851160,1488851220,1488851280,1488851340,1488851400,1488851460,1488851520,1488851580,1488851640,1488851700,1488851760,1488851820,1488851880,1488851940,1488852000,1488852060,1488852120,1488852180,1488852240,1488852300,1488852360,1488852420,1488852480,1488852540,1488852600,1488852660,1488852720,1488852780,1488852840,1488852900,1488852960,1488853020,1488853080,1488853140,1488853200,1488853260,1488853320,1488853380,1488853440,1488853500,1488853560,1488853620,1488853680,1488853740,1488853800,1488853860,1488853920,1488853980,1488854040,1488854100,1488854160,1488854220,1488854280,1488854340,1488854400,1488854460,1488854520,1488854580,1488854640,1488854700,1488854760,1488854820,1488854880,1488854940,1488855000,1488855060,1488855120,1488855180,1488855240,1488855300,1488855360,1488855420,1488855480,1488855540,1488855600,1488855660,1488855720,1488855780,1488855840,1488855900,1488855960,1488856020,1488856080,1488856140,1488856200,1488856260,1488856320,1488856380,1488856440,1488856500,1488856560,1488856620,1488856680,1488856740,1488856800,1488856860,1488856920,1488856980,1488857040,1488857100,1488857160,1488857220,1488857280,1488857340,1488857400,1488857460,1488857520,1488857580,1488857640,1488857700,1488857760,1488857820,1488857880,1488857940,1488858000,1488858060,1488858120,1488858180,1488858240,1488858300,1488858360,1488858420,1488858480,1488858540,1488858600,1488858660,1488858720,1488858780,1488858840,1488858900,1488858960,1488859020,1488859080,1488859140,1488859200,1488859260,1488859320,1488859380,1488859440,1488859500,1488859560,1488859620,1488859680,1488859740,1488859800,1488859860,1488859920,1488859980,1488860040,1488860100,1488860160,1488860220,1488860280,1488860340,1488860400,1488860460,1488860520,1488860580,1488860640,1488860700,1488860760,1488860820,1488860880,1488860940,1488861000,1488861060,1488861120,1488861180,1488861240,1488861300,1488861360,1488861420,1488861480,1488861540,1488861600,1488861660,1488861720,1488861780,1488861840,1488861900,1488861960,1488862020,1488862080,1488862140,1488862200,1488862260,1488862320,1488862380,1488862440,1488862500,1488862560,1488862620,1488862680,1488862740,1488862800,1488862860,1488862920,1488862980,1488863040,1488863100,1488863160,1488863220,1488863280,1488863340,1488863400,1488863460,1488863520,1488863580,1488863640,1488863700,1488863760,1488863820,1488863880,1488863940,1488864000,1488864060,1488864120,1488864180,1488864240,1488864300,1488864360,1488864420,1488864480,1488864540,1488864600,1488864660,1488864720,1488864780,1488864840,1488864900,1488864960,1488865020,1488865080,1488865140,1488865200,1488865260,1488865320,1488865380,1488865440,1488865500,1488865560,1488865620,1488865680,1488865740,1488865800,1488865860,1488865920,1488865980,1488866040,1488866100,1488866160,1488866220,1488866280,1488866340,1488866400,1488866460,1488866520,1488866580,1488866640,1488866700,1488866760,1488866820,1488866880,1488866940,1488867000,1488867060,1488867120,1488867180,1488867240,1488867300,1488867360,1488867420,1488867480,1488867540,1488867600,1488867660,1488867720,1488867780,1488867840,1488867900,1488867960,1488868020,1488868080,1488868140,1488868200,1488868260,1488868320,1488868380,1488868440,1488868500,1488868560,1488868620,1488868680,1488868740,1488868800,1488868860,1488868920,1488868980,1488869040,1488869100,1488869160,1488869220,1488869280,1488869340,1488869400,1488869460,1488869520,1488869580,1488869640,1488869700,1488869760,1488869820,1488869880,1488869940,1488870000,1488870060,1488870120,1488870180,1488870240,1488870300,1488870360,1488870420,1488870480,1488870540,1488870600,1488870660,1488870720,1488870780,1488870840,1488870900,1488870960,1488871020,1488871080,1488871140,1488871200,1488871260,1488871320,1488871380,1488871440,1488871500,1488871560,1488871620,1488871680,1488871740,1488871800,1488871860,1488871920,1488871980,1488872040,1488872100,1488872160,1488872220,1488872280,1488872340,1488872400,1488872460,1488872520,1488872580,1488872640,1488872700,1488872760,1488872820,1488872880,1488872940,1488873000,1488873060,1488873120,1488873180,1488873240,1488873300,1488873360,1488873420,1488873480,1488873540,1488873600,1488873660,1488873720,1488873780,1488873840,1488873900,1488873960,1488874020,1488874080,1488874140,1488874200,1488874260,1488874320,1488874380,1488874440,1488874500,1488874560,1488874620,1488874680,1488874740,1488874800,1488874860,1488874920,1488874980,1488875040,1488875100,1488875160,1488875220,1488875280,1488875340,1488875400,1488875460,1488875520,1488875580,1488875640,1488875700,1488875760,1488875820,1488875880,1488875940,1488876000,1488876060,1488876120,1488876180,1488876240,1488876300,1488876360,1488876420,1488876480,1488876540,1488876600,1488876660,1488876720,1488876780,1488876840,1488876900,1488876960,1488877020,1488877080,1488877140,1488877200,1488877260,1488877320,1488877380,1488877440,1488877500,1488877560,1488877620,1488877680,1488877740,1488877800,1488877860,1488877920,1488877980,1488878040,1488878100,1488878160,1488878220,1488878280,1488878340,1488878400,1488878460,1488878520,1488878580,1488878640,1488878700,1488878760,1488878820,1488878880,1488878940,1488879000,1488879060,1488879120,1488879180,1488879240,1488879300,1488879360,1488879420,1488879480,1488879540,1488879600,1488879660,1488879720,1488879780,1488879840,1488879900,1488880140,1488880200,1488880260,1488880320,1488880380,1488880440,1488880500,1488880560,1488880620,1488880680,1488880740,1488880800,1488880860,1488880920,1488880980,1488881040,1488881100,1488881160,1488881220,1488881280,1488881340,1488881400,1488881460,1488881520,1488881580,1488881640,1488881700,1488881760,1488881820,1488881880,1488881940,1488882000,1488882060,1488882120,1488882180,1488882240,1488882300,1488882360,1488882420,1488882480,1488882540,1488882600,1488882660,1488882720,1488882780,1488882840,1488882900,1488882960,1488883020,1488883080,1488883140,1488883200,1488883260,1488883320,1488883380,1488883440,1488883500,1488883560,1488883620,1488883680,1488883740,1488883800,1488883860,1488883920,1488883980,1488884040,1488884100,1488884160,1488884220,1488884280,1488884340,1488884400,1488884460,1488884520,1488884580,1488884640,1488884700,1488884760,1488884820,1488884880,1488884940,1488885000,1488885060,1488885120,1488885180,1488885240,1488885300,1488885360,1488885420,1488885480,1488885540,1488885600,1488885660,1488885720,1488885780,1488885840,1488885900,1488885960,1488886020,1488886080,1488886140,1488886200,1488886260,1488886320,1488886380,1488886440,1488886500,1488886560,1488886620,1488886680,1488886740,1488886800,1488886860,1488886920,1488886980,1488887040,1488887100,1488887160,1488887220,1488887280,1488887340,1488887400,1488887460,1488887520,1488887580,1488887640,1488887700,1488887760,1488887820,1488887880,1488887940,1488888000,1488888060,1488888120,1488888180,1488888240,1488888300,1488888360,1488888420,1488888480,1488888540,1488888600,1488888660,1488888720,1488888780,1488888840,1488888900,1488888960,1488889020,1488889080,1488889140,1488889200,1488889260,1488889320,1488889380,1488889440,1488889500,1488889560,1488889620,1488889680,1488889740,1488889800,1488889860,1488889920,1488889980,1488890040,1488890100,1488890160,1488890220,1488890280,1488890340,1488890400,1488890460,1488890520,1488890580,1488890640,1488890700,1488890760,1488890820,1488890880,1488890940,1488891000,1488891060,1488891120,1488891180,1488891240,1488891300,1488891360,1488891420,1488891480,1488891540,1488891600,1488891660,1488891720,1488891780,1488891840,1488891900,1488891960,1488892020,1488892080,1488892140,1488892200,1488892260,1488892320,1488892380,1488892440,1488892500,1488892560,1488892620,1488892680,1488892740,1488892800,1488892920,1488892980,1488893040,1488893100,1488893160,1488893220,1488893280,1488893340,1488893400,1488893460,1488893520,1488893580,1488893640,1488893700,1488893760,1488893820,1488893880,1488893940,1488894000,1488894060,1488894120,1488894180,1488894240,1488894300,1488894360,1488894420,1488894480,1488894540,1488894600,1488894660,1488894720,1488894780,1488894960,1488895020,1488895080,1488895140,1488895200,1488895260,1488895320,1488895380,1488895440,1488895500,1488895560,1488895620,1488895680,1488895740,1488895800,1488895860,1488895920,1488895980,1488896040,1488896100,1488896160,1488896220,1488896280,1488896340,1488896400,1488896460,1488896520,1488896580,1488896640,1488896700,1488896760,1488896820,1488896880,1488896940,1488897000,1488897060,1488897120,1488897180,1488897240,1488897300,1488897360,1488897420,1488897480,1488897540,1488897600,1488897660,1488897720,1488897780,1488897840,1488897900,1488897960,1488898020,1488898080,1488898140,1488898200,1488898260,1488898320,1488898380,1488898440,1488898500,1488898560,1488898620,1488898680,1488898740,1488898800,1488898860,1488898920,1488898980,1488899040,1488899100,1488899160,1488899220,1488899280,1488899340,1488899400,1488899460,1488899520,1488899580,1488899640,1488899700,1488899760,1488899820,1488899880,1488899940,1488900000,1488900060,1488900120,1488900180,1488900240,1488900300,1488900360,1488900420,1488900480,1488900540,1488900600,1488900660,1488900720,1488900780,1488900840,1488900900,1488900960,1488901020,1488901080,1488901140,1488901200,1488901260,1488901320,1488901380,1488901440,1488901500,1488901560,1488901620,1488901680,1488901740,1488901800,1488901860,1488901920,1488901980,1488902040,1488902100,1488902160,1488902220,1488902280,1488902340,1488902400,1488902460,1488902520,1488902580,1488902640,1488902700,1488902760,1488902820,1488902880,1488902940,1488903000,1488903060,1488903120,1488903180,1488903240,1488903300,1488903360,1488903420,1488903480,1488903540,1488903600,1488903660,1488903720,1488903780,1488903840,1488903900,1488903960,1488904020,1488904080,1488904140,1488904200,1488904260,1488904320,1488904380,1488904440,1488904500,1488904560,1488904620,1488904680,1488904740,1488904800,1488904860,1488904920,1488904980,1488905040,1488905100,1488905160,1488905220,1488905280,1488905340,1488905400,1488905460,1488905520,1488905580,1488905640,1488905700,1488905760,1488905820,1488905880,1488905940,1488906000,1488906060,1488906120,1488906180,1488906240,1488906300,1488906360,1488906420,1488906480,1488906540,1488906600,1488906660,1488906720,1488906780,1488906840,1488906900,1488906960,1488907020,1488907080,1488907140,1488907200,1488907260,1488907320,1488907380,1488907440,1488907500,1488907560,1488907620,1488907680,1488907740,1488907800,1488907860,1488907920,1488907980,1488908040,1488908100,1488908160,1488908220,1488908280,1488908340,1488908400,1488908460,1488908520,1488908580,1488908640,1488908700,1488908760,1488908820,1488908880,1488908940,1488909000,1488909060,1488909120,1488909180,1488909240,1488909300,1488909360,1488909420,1488909480,1488909540,1488909600,1488909660,1488909720,1488909780,1488909840,1488909900,1488909960,1488910020,1488910080,1488910140,1488910200,1488910260,1488910320,1488910380,1488910440,1488910500,1488910560,1488910620,1488910680,1488910740,1488910800,1488910860,1488910920,1488910980,1488911040,1488911100,1488911160,1488911220,1488911280,1488911340,1488911400,1488911460,1488911520,1488911580,1488911640,1488911700,1488911760,1488911820,1488911880,1488911940,1488912000,1488912060,1488912120,1488912180,1488912240,1488912300,1488912360,1488912420,1488912480,1488912540,1488912600,1488912660,1488912720,1488912780,1488912840,1488912900,1488912960,1488913020,1488913080,1488913140,1488913200,1488913260,1488913320,1488913380,1488913440,1488913500,1488913560,1488913620,1488913680,1488913740,1488913800,1488913860,1488913920,1488913980,1488914040,1488914100,1488914160,1488914220,1488914280,1488914340,1488914400,1488914460,1488914520,1488914580,1488914640,1488914700,1488914760,1488914820,1488914880,1488914940,1488915000,1488915060,1488915120,1488915180,1488915240,1488915300,1488915360,1488915420,1488915480,1488915540,1488915600,1488915660,1488915720,1488915780,1488915840,1488915900,1488915960,1488916020,1488916080,1488916140,1488916200,1488916260,1488916320,1488916380,1488916440,1488916500,1488916560,1488916620,1488916680,1488916740,1488916800,1488916860,1488916920,1488916980,1488917040,1488917100,1488917160,1488917220,1488917280,1488917340,1488917400,1488917460,1488917520,1488917580,1488917640,1488917700,1488917760,1488917820,1488917880,1488917940,1488918000,1488918060,1488918120,1488918180,1488918240,1488918300,1488918360,1488918420,1488918480,1488918540,1488918600,1488918660,1488918720,1488918780,1488918840,1488918900,1488918960,1488919020,1488919080,1488919140,1488919200,1488919260,1488919320,1488919380,1488919440,1488919500,1488919560,1488919620,1488919680,1488919740,1488919800,1488919860,1488919920,1488919980,1488920040,1488920100,1488920160,1488920220,1488920280,1488920340,1488920400,1488920460,1488920520,1488920580,1488920640,1488920700,1488920760,1488920820,1488920880,1488920940,1488921000,1488921060,1488921120,1488921180,1488921240,1488921300,1488921360,1488921420,1488921480,1488921540,1488921600,1488921660,1488921720,1488921780,1488921840,1488921900,1488921960,1488922020,1488922080,1488922140,1488922200,1488922260,1488922320,1488922380,1488922440,1488922500,1488922560,1488922620,1488922680,1488922740,1488922800,1488922860,1488922920,1488922980,1488923040,1488923100,1488923160,1488923220,1488923280,1488923340,1488923400,1488923460,1488923520,1488923580,1488923640,1488923700,1488923760,1488923820,1488923880,1488923940,1488924000,1488924060,1488924120,1488924180,1488924240,1488924300,1488924360,1488924420,1488924480,1488924540,1488924600,1488924660,1488924720,1488924780,1488924840,1488924900,1488924960,1488925020,1488925080,1488925140,1488925200,1488925260,1488925320,1488925380,1488925440,1488925500,1488925560,1488925620,1488925680,1488925740,1488925800,1488925860,1488925920,1488925980,1488926040,1488926100,1488926160,1488926220,1488926280,1488926340,1488926400,1488926460,1488926520,1488926580,1488926640,1488926700,1488926760,1488926820,1488926880,1488926940,1488927000,1488927060,1488927120,1488927180,1488927240,1488927300,1488927360,1488927420,1488927480,1488927540,1488927600,1488927660,1488927720,1488927780,1488927840,1488927900,1488927960,1488928020,1488928080,1488928140,1488928200,1488928260,1488928320,1488928380,1488928440,1488928500,1488928560,1488928620,1488928680,1488928740,1488928800,1488928860,1488928920,1488928980,1488929040,1488929100,1488929160,1488929220,1488929280,1488929340,1488929400,1488929460,1488929520,1488929580,1488929640,1488929700,1488929760,1488929820,1488929880,1488929940,1488930000,1488930060,1488930120,1488930180,1488930240,1488930300,1488930360,1488930420,1488930480,1488930540,1488930600,1488930660,1488930720,1488930780,1488930840,1488930900,1488930960,1488931020,1488931080,1488931140,1488931200,1488931260,1488931320,1488931380,1488931440,1488931500,1488931560,1488931620,1488931680,1488931740,1488931800,1488931860,1488931920,1488931980,1488932040,1488932100,1488932160,1488932220,1488932280,1488932340,1488932400,1488932460,1488932520,1488932580,1488932640,1488932700,1488932760,1488932820,1488932880,1488932940,1488933000,1488933060,1488933120,1488933180,1488933240,1488933300,1488933360,1488933420,1488933480,1488933540,1488933600,1488933660,1488933720,1488933780,1488933840,1488933900,1488933960,1488934020,1488934080,1488934140,1488934200,1488934260,1488934320,1488934380,1488934440,1488934500,1488934560,1488934620,1488934680,1488934740,1488934800,1488934860,1488934920,1488934980,1488935040,1488935100,1488935160,1488935220,1488935280,1488935340,1488935400,1488935460,1488935520,1488935580,1488935640,1488935700,1488935760,1488935820,1488935880,1488935940,1488936000,1488936060,1488936120,1488936180,1488936240,1488936300,1488936360,1488936420,1488936540,1488936600,1488936660,1488936720,1488936780,1488936840,1488936900,1488936960,1488937020,1488937080,1488937140,1488937200,1488937260,1488937320,1488937380,1488937440,1488937500,1488937560,1488937620,1488937680,1488937740,1488937800,1488937860,1488937920,1488937980,1488938040,1488938100,1488938160,1488938220,1488938280,1488938340,1488938400,1488938460,1488938520,1488938580,1488938640,1488938700,1488938760,1488938820,1488938880,1488938940,1488939000,1488939060,1488939120,1488939180,1488939240,1488939300,1488939360,1488939420,1488939480,1488939540,1488939600,1488939660,1488939720,1488939780,1488939840,1488939900,1488939960,1488940020,1488940080,1488940140,1488940200,1488940260,1488940320,1488940380,1488940440,1488940500,1488940560,1488940620,1488940680,1488940740,1488940800,1488940860,1488940920,1488940980,1488941040,1488941100,1488941160,1488941220,1488941280,1488941340,1488941400,1488941460,1488941520,1488941580,1488941640,1488941700,1488941760,1488941820,1488941880,1488941940,1488942000,1488942060,1488942120,1488942180,1488942240,1488942300,1488942360,1488942420,1488942480,1488942540,1488942600,1488942660,1488942720,1488942780,1488942840,1488942900,1488942960,1488943020,1488943080,1488943140,1488943200,1488943260,1488943320,1488943380,1488943440,1488943500,1488943560,1488943620,1488943680,1488943740,1488943800,1488943860,1488943920,1488943980,1488944040,1488944100,1488944160,1488944220,1488944280,1488944340,1488944400,1488944460,1488944520,1488944580,1488944640,1488944700,1488944760,1488944820,1488944880,1488944940,1488945000,1488945060,1488945120,1488945180,1488945240,1488945300,1488945360,1488945420,1488945480,1488945540,1488945600,1488945660,1488945720,1488945780,1488945840,1488945900,1488945960,1488946020,1488946080,1488946140,1488946200,1488946260,1488946320,1488946380,1488946440,1488946500,1488946560,1488946620,1488946680,1488946740,1488946800,1488946860,1488946920,1488946980,1488947040,1488947100,1488947160,1488947220,1488947280,1488947340,1488947400,1488947460,1488947520,1488947580,1488947640,1488947700,1488947760,1488947820,1488947880,1488947940,1488948000,1488948060,1488948120,1488948180,1488948240,1488948300,1488948360,1488948420,1488948480,1488948540,1488948600,1488948660,1488948720,1488948780,1488948840,1488948900,1488948960,1488949020,1488949080,1488949140,1488949200,1488949260,1488949320,1488949380,1488949440,1488949500,1488949560,1488949620,1488949680,1488949740,1488949800,1488949860,1488949920,1488949980,1488950040,1488950100,1488950160,1488950220,1488950280,1488950340,1488950400,1488950460,1488950520,1488950580,1488950640,1488950700,1488950760,1488950820,1488950880,1488950940,1488951000,1488951060,1488951120,1488951180,1488951240,1488951300,1488951360,1488951420,1488951480,1488951540,1488951600,1488951660,1488951720,1488951780,1488951840,1488951900,1488951960,1488952020,1488952080,1488952140,1488952200,1488952260,1488952320,1488952380,1488952440,1488952500,1488952560,1488952620,1488952680,1488952740,1488952800,1488952860,1488952920,1488952980,1488953040,1488953100,1488953160,1488953220,1488953280,1488953340,1488953400,1488953460,1488953520,1488953580,1488953640,1488953700,1488953760,1488953820,1488953880,1488953940,1488954000,1488954060,1488954120,1488954180,1488954240,1488954300,1488954360,1488954420,1488954480,1488954540,1488954600,1488954660,1488954720,1488954780,1488954840,1488954900,1488954960,1488955020,1488955080,1488955140,1488955200,1488955260,1488955320,1488955380,1488955440,1488955500,1488955560,1488955620,1488955680,1488955740,1488955800,1488955860,1488955920,1488955980,1488956040,1488956100,1488956160,1488956220,1488956280,1488956340,1488956400,1488956460,1488956520,1488956580,1488956640,1488956700,1488956760,1488956820,1488956880,1488956940,1488957000,1488957060,1488957120,1488957180,1488957240,1488957300,1488957360,1488957420,1488957480,1488957540,1488957600,1488957660,1488957720,1488957780,1488957840,1488957900,1488957960,1488958020,1488958080,1488958140,1488958200,1488958260,1488958320,1488958380,1488958440,1488958500,1488958560,1488958620,1488958680,1488958740,1488958800,1488958860,1488958920,1488958980,1488959040,1488959100,1488959160,1488959220,1488959280,1488959340,1488959400,1488959460,1488959520,1488959580,1488959640,1488959700,1488959760,1488959820,1488959880,1488959940,1488960000,1488960060,1488960120,1488960180,1488960240,1488960300,1488960360,1488960420,1488960480,1488960540,1488960600,1488960660,1488960720,1488960780,1488960840,1488960900,1488960960,1488961020,1488961080,1488961140,1488961200,1488961260,1488961320,1488961380,1488961440,1488961500,1488961560,1488961620,1488961680,1488961740,1488961800,1488961860,1488961920,1488961980,1488962040,1488962100,1488962160,1488962220,1488962280,1488962340,1488962400,1488962460,1488962520,1488962580,1488962640,1488962700,1488962760,1488962820,1488962880,1488962940,1488963000,1488963060,1488963120,1488963180,1488963240,1488963300,1488963360,1488963420,1488963480,1488963540,1488963600,1488963660,1488963720,1488963780,1488963840,1488963900,1488963960,1488964020,1488964080,1488964140,1488964200,1488964260,1488964320,1488964380,1488964440,1488964500,1488964560,1488964620,1488964680,1488964740,1488964800,1488964860,1488964920,1488964980,1488965040,1488965100,1488965160,1488965220,1488965280,1488965340,1488965400,1488965460,1488965520,1488965580,1488965640,1488965700,1488965760,1488965820,1488965880,1488965940,1488966000,1488966060,1488966120,1488966180,1488966240,1488966300,1488966360,1488966420,1488966480,1488966540,1488966600,1488966660,1488966720,1488966780,1488966840,1488966900,1488966960,1488967020,1488967080,1488967140,1488967200,1488967260,1488967320,1488967380,1488967440,1488967500,1488967560,1488967620,1488967680,1488967740,1488967800,1488967860,1488967920,1488967980,1488968040,1488968100,1488968160,1488968220,1488968280,1488968340,1488968400,1488968460,1488968520,1488968580,1488968640,1488968700,1488968760,1488968820,1488968880,1488968940,1488969000,1488969060,1488969120,1488969180,1488969240,1488969300,1488969360,1488969420,1488969480,1488969540,1488969600,1488969660,1488969720,1488969780,1488969840,1488969900,1488969960,1488970020,1488970080,1488970200,1488970260,1488970320,1488970380,1488970440,1488970500,1488970560,1488970620,1488970680,1488970740,1488970800,1488970860,1488970920,1488970980,1488971040,1488971100,1488971160,1488971220,1488971280,1488971340,1488971400,1488971460,1488971520,1488971580,1488971640,1488971700,1488971760,1488971820,1488971880,1488971940,1488972000,1488972060,1488972120,1488972180,1488972240,1488972300,1488972360,1488972420,1488972480,1488972540,1488972600,1488972660,1488972720,1488972780,1488972840,1488972900,1488972960,1488973020,1488973080,1488973140,1488973200,1488973260,1488973320,1488973380,1488973440,1488973500,1488973560,1488973620,1488973680,1488973740,1488973800,1488973860,1488973920,1488973980,1488974040,1488974100,1488974160,1488974220,1488974280,1488974340,1488974400,1488974460,1488974520,1488974580,1488974640,1488974700,1488974760,1488974820,1488974880,1488974940,1488975000,1488975060,1488975120,1488975180,1488975240,1488975300,1488975360,1488975420,1488975480,1488975540,1488975600,1488975660,1488975720,1488975780,1488975840,1488975900,1488975960,1488976020,1488976080,1488976140,1488976200,1488976260,1488976320,1488976380,1488976440,1488976500,1488976560,1488976620,1488976680,1488976740,1488976800,1488976860,1488976920,1488976980,1488977040,1488977100,1488977160,1488977220,1488977280,1488977340,1488977400,1488977460,1488977520,1488977580,1488977640,1488977700,1488977760,1488977820,1488977880,1488977940,1488978000,1488978060,1488978120,1488978180,1488978240,1488978300,1488978360,1488978420,1488978480,1488978540,1488978600,1488978660,1488978720,1488978780,1488978840,1488978900,1488978960,1488979020,1488979080,1488979140,1488979200,1488979260,1488979320,1488979380,1488979440,1488979500,1488979560,1488979620,1488979680,1488979740,1488979800,1488979860,1488979920,1488979980,1488980040,1488980100,1488980160,1488980220,1488980280,1488980340,1488980400,1488980460,1488980520,1488980580,1488980640,1488980700,1488980760,1488980820,1488980880,1488980940,1488981000,1488981060,1488981120,1488981180,1488981240,1488981300,1488981360,1488981420,1488981480,1488981540,1488981600,1488981660,1488981720,1488981780,1488981840,1488981900,1488981960,1488982020,1488982080,1488982140,1488982200,1488982260,1488982320,1488982380,1488982440,1488982500,1488982560,1488982620,1488982680,1488982740,1488982800,1488982860,1488982920,1488982980,1488983040,1488983100,1488983160,1488983220,1488983280,1488983340,1488983400,1488983460,1488983520,1488983580,1488983640,1488983700,1488983760,1488983820,1488983880,1488983940,1488984000,1488984060,1488984120,1488984180,1488984240,1488984300,1488984360,1488984420,1488984480,1488984540,1488984600,1488984660,1488984720,1488984780,1488984840,1488984900,1488984960,1488985020,1488985080,1488985140,1488985200,1488985260,1488985320,1488985380,1488985440,1488985500,1488985560,1488985620,1488985680,1488985740,1488985800,1488985860,1488985920,1488985980,1488986040,1488986100,1488986160,1488986220,1488986280,1488986340,1488986400,1488986460,1488986520,1488986580,1488986640,1488986700,1488986760,1488986820,1488986880,1488986940,1488987000,1488987060,1488987120,1488987180,1488987240,1488987300,1488987360,1488987420,1488987480,1488987540,1488987600,1488987660,1488987720,1488987780,1488987840,1488987900,1488987960,1488988020,1488988080,1488988140,1488988200,1488988260,1488988320,1488988380,1488988440,1488988500,1488988560,1488988620,1488988680,1488988740,1488988800],&quot;name&quot;:&quot;base&quot;},{&quot;values&quot;:[15.001,22.418,27.819,30.618,27.011,20.169,25.103,17.752,15.444,14.092,17.375,20.94,19.66,14.457,14.947,16.167,24.104,34.015,31.569,30.05,27.95,39.614,47.778,47.754,44.757,33.13,34.189,38.393,37.107,47.754,38.459,48.023,48.029,48.125,47.419,47.832,47.724,47.688,26.252,31.671,31.354,44.62,56.774,45.248,38.166,42.676,62.982,69.167,60.703,54.01,57.826,56.229,77.146,77.535,67.869,59.364,57.814,54.585,55.697,52.88,51.08,57.761,60.65,59.214,56.463,55.039,60.721,55.225,54.926,54.507,48.466,61.81,57.48,54.908,54.423,56.72,56.6,56.684,56.367,47.634,47.82,46.917,47.766,47.329,47.503,44.363,50.781,41.175,51.666,50.308,51.056,56.044,48.956,48.352,47.521,65.207,62.719,62.713,69.585,63.826,56.78,48.089,34.906,34.631,51.642,49.698,49.513,48.962,47.802,48.597,48.699,41.713,42.215,24.463,19.236,29.009,48.334,56.056,55.93,58.783,67.57,69.974,76.284,79.688,66.774,61.882,79.801,78.994,79.945,79.885,79.951,79.999,70.399,64.914,73.796,62.767,67.785,68.688,79.413,72.223,74.933,79.066,79.993,79.694,76.853,65.183,50.99,40.511,40.266,41.671,67.959,64.651,62.713,60.033,48.005,39.667,39.566,50.751,35.792,28.991,42.766,35.666,27.974,29.212,35.439,35.176,29.757,19.923,26.963,22.543,21.221,22.023,29.236,23.704,34.326,26.264,18.853,19.505,21.09,23.883,62.719,79.993,78.163,74.604,66.715,62.713,62.713,74.777,52.623,69.597,79.897,57.802,52.695,41.342,29.41,62.97,37.191,53.855,37.102,47.945,35.666,41.695,33.13,28.297,35.235,36.874,31.856,44.518,28.501,31.976,48.998,41.288,38.884,31.904,37.873,29.757,37.155,64.968,58.999,62.384,59.86,46.39,30.755,27.46,30.002,40.188,34.817,37.777,33.459,32.723,37.496,29.697,44.745,45.72,39.727,30.235,43.286,34.045,33.842,42.066,75.274,76.584,79.897,63.909,42.939,34.326,39.476,56.505,47.802,37.233,37.06,40.66,34.003,31.437,42.054,65.835,42.197,60.093,56.289,59.429,54.782,51.474,38.824,62.713,66.433,61.834,53.957,43.041,49.028,50.511,49.321,30.881,36.408,39.602,31.019,39.829,43.274,47.18,40.726,47.335,40.26,42.09,42.407,39.536,40.989,48.424,41.031,37.245,35.295,44.566,34.278,59.088,45.966,37.855,38.818,39.327,42.293,50.188,47.503,62.599,52.252,55.452,51.57,47.694,50.595,52.449,52.072,63.323,53.107,46.767,45.732,49.303,58.831,54.25,35.253,32.795,34.231,53.346,58.813,50.063,37.46,43.705,41.229,39.099,38.77,51.397,48.526,43.747,46.51,44.979,45.858,40.529,33.148,32.275,35.074,44.428,39.811,42.479,49.417,31.342,31.856,26.963,31.431,28.16,29.021,42.897,32.0,27.944,32.795,35.463,34.314,36.438,37.185,41.809,45.924,38.77,48.699,46.456,43.723,38.334,45.529,35.451,41.546,31.449,28.321,47.515,49.728,35.499,39.273,53.879,52.078,41.653,40.618,36.055,35.947,33.662,41.498,40.224,50.996,35.558,33.208,42.114,61.613,62.713,60.177,65.877,62.713,61.02,61.642,52.695,53.699,53.693,62.707,49.985,41.803,43.226,55.165,48.334,47.91,39.943,35.816,39.655,37.508,35.277,44.399,56.893,37.789,32.155,34.745,34.679,26.389,27.334,38.806,33.513,35.385,33.716,32.921,34.015,34.207,32.34,44.369,49.19,55.458,44.428,38.585,35.798,54.561,65.68,57.21,50.523,51.797,30.456,31.659,22.836,46.701,44.554,41.51,38.758,53.867,53.825,56.702,59.154,44.943,37.078,41.211,30.385,30.002,26.27,26.138,26.676,35.845,24.565,55.536,45.314,45.2,76.302,74.502,52.12,39.805,64.812,50.224,43.872,32.867,32.693,31.366,39.53,31.413,27.914,24.547,19.541,24.056,18.356,32.945,22.878,18.285,60.847,52.395,40.062,34.308,29.188,38.393,43.669,53.801,61.128,58.706,48.394,44.165,38.902,53.843,34.817,33.244,27.161,33.728,21.359,17.686,32.0,44.548,21.485,29.942,28.471,39.315,35.588,36.432,37.407,36.503,27.645,31.892,32.927,32.717,27.155,62.707,54.16,42.843,47.491,40.63,42.652,31.569,37.287,36.18,42.963,28.142,26.084,24.421,26.575,25.576,33.471,42.054,22.543,18.925,28.913,35.708,34.996,23.979,25.731,29.984,21.915,24.266,17.609,18.626,17.064,41.605,44.71,50.511,38.938,32.49,30.875,57.515,54.758,62.576,62.546,60.398,40.439,29.96,29.547,39.638,38.752,57.659,57.922,49.501,51.923,44.5,55.41,40.134,30.935,30.6,29.679,24.176,36.796,44.614,43.998,43.154,43.866,36.139,36.653,28.441,28.704,35.54,24.236,24.433,21.778,27.759,34.015,29.17,30.044,29.798,26.347,56.235,53.837,52.868,49.794,44.53,39.476,35.839,26.323,20.683,18.249,28.333,25.474,23.865,22.812,24.308,27.227,49.746,33.303,24.409,23.034,22.573,25.432,19.72,15.587,21.263,42.873,52.898,43.723,47.784,25.516,28.375,22.298,20.211,27.908,28.387,23.153,18.996,20.24,13.248,18.285,14.528,15.276,21.383,14.397,29.338,14.911,12.973,14.319,18.631,18.518,13.26,13.368,21.185,49.836,49.698,32.867,23.65,29.559,30.02,37.73,32.269,37.09,22.89,32.071,24.583,24.338,21.084,21.263,23.315,23.949,22.089,20.97,19.26,15.91,24.996,19.02,43.956,48.101,45.774,46.019,46.833,45.021,40.421,35.762,38.543,31.712,25.851,30.827,42.772,37.0,26.67,23.357,23.004,20.312,21.562,16.317,17.525,17.728,18.219,16.508,18.111,29.966,23.638,24.326,30.72,25.498,18.823,19.941,27.639,22.794,20.886,18.984,27.819,23.757,23.883,18.548,17.178,20.025,19.959,31.736,18.033,24.619,20.073,20.366,21.969,24.039,20.486,29.404,31.174,28.506,29.278,34.326,32.891,30.612,37.981,28.53,39.386,28.734,27.065,27.029,29.458,26.353,31.072,31.282,49.417,46.809,39.404,30.385,33.662,32.891,26.76,28.913,29.487,27.699,36.701,28.686,23.028,20.492,21.592,21.55,18.099,17.435,14.965,14.445,28.04,18.512,16.64,19.242,18.59,18.476,20.187,20.803,16.078,15.934,20.36,16.365,18.392,18.368,23.841,29.308,31.031,28.471,23.476,21.048,19.505,18.907,17.28,19.547,26.88,30.911,29.021,26.939,29.481,26.24,31.324,27.825,22.154,28.172,29.188,25.935,27.717,22.4,34.111,32.484,38.226,40.571,35.05,34.709,33.991,40.595,36.802,32.681,30.642,30.881,35.487,34.661,33.967,34.613,31.91,35.433,46.498,36.39,34.111,31.246,31.138,38.28,33.465,27.962,32.275,27.149,26.515,25.39,22.962,24.72,15.916,27.723,19.606,16.383,18.314,19.535,19.254,17.806,15.192,14.809,17.178,18.984,16.616,15.94,20.551,17.836,16.054,20.318,17.86,14.714,20.151,21.646,17.621,20.599,25.33,27.185,37.054,26.515,24.858,26.533,34.924,31.33,31.539,28.363,25.63,32.58,28.692,30.708,36.623,32.4,27.741,19.678,20.42,19.786,19.828,20.342,38.734,29.23,27.609,35.415,25.743,28.614,45.164,41.928,38.441,32.789,22.005,18.59,21.514,25.958,36.737,64.711,64.711,72.104,75.716,62.486,52.025,35.995,41.306,49.154,50.781,48.92,48.675,50.757,44.904,45.52,40.891,46.167,37.567,41.658,41.754,41.724,36.963,40.807,42.388,42.448,40.22,41.131,39.598,39.364,37.933,47.461,52.599,52.449,52.378,51.689,61.079,61.858,43.305,62.792,62.493,56.025,54.018,44.969,41.879,57.133,64.99,72.613,79.315,62.786,62.792,64.032,62.9,66.032,61.169,58.294,78.758,79.998,79.998,65.876,58.492,59.672,64.642,58.586,67.026,64.944,49.746,45.158,79.999,69.867,60.243,62.713,62.707,79.891,79.933,79.078,64.268,65.279,60.979,60.051,62.576,63.395,58.407,58.825,61.272,60.267,54.489,61.439,62.815,62.48,62.635,61.942,59.059,58.173,60.99,62.707,59.268,55.458,53.436,66.11,65.159,73.096,62.713,52.557,44.261,47.91,62.115,62.707,59.513,53.436,52.12,68.73,66.661,62.713,62.719,60.985,58.502,66.559,61.074,57.557,58.293,56.361,61.122,63.461,58.861,62.707,62.707,60.853,62.713,62.713,62.707,62.713,62.713,68.754,64.202,62.713,61.451,64.316,62.671,63.778,63.538,62.928,62.851,65.405,65.309,64.149,64.812,62.713,62.713,62.713,62.707,62.713,62.713,62.713,62.713,62.713,62.904,62.982,64.244,64.262,75.597,75.214,79.999,71.834,67.731,66.595,79.885,79.102,67.582,66.553,62.713,74.544,75.244,79.126,76.637,79.921,78.336,77.917,77.331,79.885,78.689,68.874,79.921,76.763,79.885,78.791,79.885,79.885,79.885,76.506,72.875,71.954,71.637,71.362,70.333,76.027,68.539,66.732,63.527,63.389,63.066,63.251,66.667,66.858,64.884,64.944,65.435,63.515,63.108,64.962,66.996,65.895,64.406,65.112,64.394,62.803,63.538,66.577,62.719,64.161,62.725,64.884,64.771,64.705,64.322,79.927,79.58,75.71,75.387,62.833,60.452,79.885,79.885,78.228,75.543,77.056,79.012,75.902,79.885,79.311,79.921,79.885,73.336,65.135,78.109,69.304,74.197,64.549,63.449,63.21,64.495,63.395,62.958,63.885,62.761,62.713,62.731,63.317,62.587,62.707,61.26,61.038,60.141,60.207,60.668,60.004,60.955,59.866,63.317,62.456,62.713,63.55,62.719,62.719,62.928,62.731,66.852,63.371,62.713,62.713,62.456,62.695,62.898,61.313,62.677,59.525,60.398,62.163,59.848,59.405,56.846,52.318,57.539,56.834,55.877,62.695,56.678,57.354,55.984,62.713,62.713,62.713,53.771,62.707,42.706,47.305,42.407,41.288,41.264,47.234,79.622,73.282,60.309,54.339,69.903,62.067,59.382,51.893,56.206,55.069,53.514,59.304,52.276,51.379,50.804,52.976,58.765,59.932,61.78,60.386,59.304,53.37,55.595,54.842,49.596,54.674,44.225,41.366,44.68,40.565,45.074,39.53,37.813,48.095,47.575,39.231,40.834,39.213,43.19,41.103,46.486,48.729,46.061,47.198,46.564,43.406,78.342,77.588,66.505,54.082,53.789,44.082,37.436,44.1,38.86,62.468,62.259,53.071,42.371,35.343,33.465,35.905,30.803,26.287,27.005,27.645,28.309,27.346,50.452,40.906,27.849,34.284,26.886,27.322,14.708,15.725,18.279,19.164,30.367,26.91,21.048,22.34,18.171,25.492,21.102,22.974,18.368,19.911,20.839,21.108,21.963,20.39,21.867,21.162,20.845,21.58,19.2,20.055,27.322,20.187,22.005,20.492,36.719,35.283,35.672,28.237,66.248,70.686,43.489,38.812,30.247,27.149,24.876,34.464,58.783,34.703,30.397,31.587,32.305,31.838,23.111,23.082,32.257,24.122,23.213,23.303,26.82,16.795,26.389,22.98,23.793,26.557,23.686,27.687,24.696,23.656,19.271,31.18,24.966,27.831,27.681,26.503,23.614,29.434,22.023,32.257,26.718,28.841,76.063,53.652,36.629,31.898,24.888,25.647,23.315,25.779,24.128,35.624,49.937,36.36,25.701,23.727,24.344,19.678,32.98,27.52,26.281,47.784,36.611,25.462,24.26,34.266,27.472,31.659,46.659,44.889,49.124,53.723,47.928,49.465,47.993,47.862,48.011,58.425,54.333,53.903,53.275,48.209,48.448,48.43,48.412,48.322,48.394,48.322,47.706,47.904,48.065,48.119,48.699,48.645,48.562,48.603,48.029,47.808,48.286,49.267,49.202,48.388,48.262,48.101,47.736,47.628,47.694,48.98,48.119,48.167,48.412,48.113,48.131,47.904,47.951,47.844,48.615,48.585,48.478,48.209,47.939,48.017,48.113,47.91,47.497,47.892,47.886,47.874,48.137,47.88,47.981,47.67,47.509,47.533,47.868,47.88,48.029,47.898,47.611,47.551,47.497,47.868,47.868,47.856,47.868,48.197,49.925,48.035,47.718,48.209,48.274,47.981,47.904,47.802,47.551,47.479,47.527,48.077,48.657,48.526,49.393,48.065,47.91,47.904,47.485,47.515,48.089,48.376,47.706,47.981,47.563,48.107,48.071,48.256,47.844,48.125,48.34,47.91,47.599,49.363,49.399,50.129,57.312,71.661,63.838,63.329,62.294,60.943,60.841,65.596,58.664,56.977,59.543,72.845,72.355,67.737,58.754,59.974,58.036,54.83,52.096,51.57,50.266,61.894,56.756,55.823,55.524,55.033,57.306,54.926,54.83,54.758,54.83,49.016,73.192,55.733,56.977,55.488,55.081,61.792,54.507,48.597,48.484,47.999,49.698,47.425,47.646,47.868,47.7,47.772,47.688,53.275,56.995,52.742,50.045,50.057,49.435,48.687,47.658,60.943,60.841,60.979,62.402,67.977,60.907,56.211,58.221,56.116,57.665,55.601,49.04,48.837,49.291,49.112,48.227,47.401,47.491,50.828,49.907,48.274,48.43,48.526,53.071,58.891,64.615,67.636,71.159,76.063,79.885,79.167,79.885,78.175,71.775,76.314,79.867,74.729,74.813,79.706,78.844,79.885,78.175,79.885,79.885,79.885,79.885,79.873,79.574,79.885,79.885,76.709,79.921,78.874,79.885,79.891,77.917,78.97,71.787,79.999,78.862,69.735,60.321,74.586,70.142,59.166,59.071,63.221,56.684,57.934,55.386,54.668,56.965,59.459,56.116,55.691,57.497,56.834,66.469,61.66,55.99,63.473,60.494,56.816,62.306,62.468,66.75,59.89,70.692,74.095,72.403,73.162,76.685,79.903,79.622,72.827,66.236,62.713,62.845,60.548,66.051,61.918,59.292,62.558,62.713,65.835,56.008,51.259,57.39,57.456,57.45,61.762,62.564,62.318,62.713,64.98,61.14,59.017,59.716,64.705,70.064,63.76,70.106,79.945,78.216,79.837,72.702,63.861,62.713,62.713,62.713,62.767,76.93,71.948,79.963,77.852,70.782,77.66,66.421,61.726,68.611,65.805,65.04,67.498,67.893,79.903,77.971,79.957,68.533,67.014,71.858,67.139,71.099,66.571,79.843,67.588,62.713,67.683,71.236,65.74,62.193,69.484,64.579,75.746,53.149,52.156,68.443,69.352,65.65,62.713,65.231,66.122,77.044,67.576,53.4,47.371,48.239,45.912,67.175,60.685,61.828,56.941,61.624,56.319,55.966,49.608,53.49,51.815,67.534,62.713,63.754,70.214,70.261,70.387,74.042,72.762,62.695,73.431,63.18,50.888,49.656,47.294,54.926,51.516,60.327,72.421,57.324,47.628,31.27,38.902,42.526,35.397,41.629,51.803,50.302,50.284,58.042,58.102,63.796,52.964,66.667,62.922,58.377,49.453,55.799,52.635,59.429,57.348,51.815,45.679,38.974,48.37,51.121,39.111,35.463,36.994,36.348,39.297,45.003,51.325,47.772,40.684,56.271,54.567,51.618,49.315,62.695,53.819,53.675,45.547,47.317,47.066,54.806,53.61,41.348,39.177,37.921,46.295,33.519,29.828,37.801,35.941,44.871,49.794,44.704,34.278,34.524,41.408,49.13,44.327,52.892,48.286,38.609,33.902,31.712,30.845,28.225,28.453,29.996,36.467,24.589,31.198,29.613,29.182,37.724,34.536,29.595,48.382,39.488,41.659,32.711,30.038,34.452,47.282,44.65,36.36,40.69,39.057,49.052,38.262,41.898,39.763,41.767,53.209,43.25,38.788,37.161,33.842,36.252,34.147,42.467,41.27,62.713,72.851,74.664,62.713,64.262,67.408,78.115,79.096,75.902,62.713,63.879,65.094,75.244,78.3,62.713,58.365,74.167,75.411,68.276,78.575,69.352,54.8,50.434,47.987,48.741,48.902,33.519,42.682,40.038,38.447,40.056,46.187,35.654,44.219,37.891,34.709,30.115,34.153,45.033,41.306,73.742,47.024,57.515,68.605,55.123,52.384,47.204,43.25,26.742,31.509,48.789,47.742,42.574,37.975,37.365,63.293,55.308,66.158,48.125,53.358,52.94,50.954,39.051,45.619,39.632,36.264,27.185,18.811,25.474,26.766,41.839,54.387,50.027,38.597,38.076,44.895,35.439,35.415,30.887,36.348,27.579,31.18,62.707,62.719,58.401,57.988,40.756,33.256,28.554,26.796,37.963,28.315,46.175,31.078,26.551,22.525,20.312,22.436,34.865,33.471,40.152,37.981,28.68,31.013,25.456,19.439,15.366,23.123,15.527,14.857,12.997,20.803,25.067,17.304,17.357,28.698,21.287,27.591,20.611,21.329,16.221,15.037,28.261,19.541,15.485,17.71,18.889,14.271,14.57,14.008,35.965,32.137,26.006,36.079,32.065,25.414,29.224,25.486,38.782,31.467,33.046,28.835,58.556,62.3,61.439,50.218,41.324,41.348,31.754,46.295,28.578,35.756,32.275,35.816,33.136,30.42,47.443,49.632,60.398,57.503,59.567,61.852,58.891,58.891,60.542,53.957,58.712,55.231,51.714,51.289,46.528,29.697,35.068,34.559,23.799,34.344,33.919,33.489,29.272,40.87,31.228,31.892,32.687,41.635,27.723,41.504,40.906,45.134,53.544,60.996,59.806,52.695,45.529,39.321,36.007,38.029,30.235,28.65,33.262,32.179,50.966,43.932,45.409,45.679,45.374,51.983,52.802,42.371,38.956,37.245,35.361,35.845,31.019,30.767,32.897,35.205,31.282,38.639,37.484,41.749,30.277,45.822,55.027,59.866,58.185,57.491,47.222,48.412,71.332,60.069,58.197,64.603,67.043,64.172,62.809,64.495,37.401,33.244,27.352,20.324,56.678,59.627,61.128,52.82,39.626,31.503,30.032,33.1,31.198,28.865,29.344,24.726,25.504,29.135,29.188,29.912,24.535,22.148,30.737,31.102,62.701,62.713,62.193,40.409,67.181,51.54,25.731,59.166,36.109,26.999,27.173,38.262,27.298,69.538,34.488,36.097,19.72,43.777,31.491,18.53,20.611,52.659,53.777,57.928,55.123,62.713,62.713,73.892,62.743,62.904,56.014,55.883,43.543,40.397,47.264,38.005,31.844,30.767,33.124,63.515,38.268,36.444,29.338,30.349,32.394,29.087,25.42,29.117,49.728,46.456,48.203,37.395,35.798,27.591,33.01,34.847,31.054,49.19,57.779,41.318,36.462,32.376,27.831,19.768,16.203,24.99,42.861,33.567,31.82,15.79,53.311,54.848,41.019,33.148,26.287,30.127,40.792,36.653,37.544,30.947,30.319,32.43,31.186,35.606,62.713,37.454,38.017,33.8,34.871,22.567,52.156,31.665,30.851,41.617,62.713,62.713,61.272,47.7,45.541,31.509,33.824,29.326,32.406,67.331,79.999,45.314,29.589,33.674,29.135,18.757,29.876,51.941,53.053,42.538,35.887,38.693,46.199,54.8,48.167,35.397,35.588,33.573,27.37,34.195,28.752,54.196,41.88,35.612,33.614,35.481,34.793,21.712,15.563,56.762,57.061,34.29,34.697,35.816,42.592,30.57,45.194,31.354,52.569,49.931,38.358,35.188,22.507,60.775,36.288,34.817,47.533,31.677,22.071,75.74,60.5,40.529,37.825,38.495,51.995,75.579,74.155,56.869,32.155,31.856,28.871,29.918,32.831,35.241,47.622,53.705,62.893,61.684,57.288,55.243,51.175,50.87,46.57,40.756,38.98,52.551,49.118,42.82,35.211,36.928,32.998,37.765,34.207,30.678,28.243,19.911,20.175,21.568,49.578,40.672,38.184,28.578,23.464,62.737,64.801,66.164,69.657,62.713,62.701,58.556,42.287,34.589,30.391,32.424,62.713,72.744,72.989,75.615,64.46,76.763,62.372,41.623,40.63,43.836,47.862,58.149,54.076,47.401,41.354,37.09,42.975,63.622,54.423,56.828,57.288,40.02,40.517,24.439,37.622,38.1,34.278,31.377,26.904,36.659,44.327,30.235,31.282,41.013,34.404,29.158,39.835,31.635,29.846,32.4,32.55,27.143,31.497,31.12,33.62,38.232,38.106,37.227,33.782,36.814,38.483,25.851,28.321,37.556,36.677,64.771,66.972,47.395,51.546,48.514,37.819,37.981,33.943,38.968,37.807,34.577,32.915,38.651,55.817,53.281,55.709,48.245,50.966,53.909,42.275,40.571,39.261,34.733,45.439,49.513,48.723,60.416,54.854,48.765,52.814,54.094,55.009,48.609,55.147,56.277,44.686,47.527,47.018,47.359,42.072,40.774,47.419,56.75,59.806,63.766,64.352,57.545,56.092,50.936,44.877,45.948,29.906,26.425,39.655,41.043,47.551,61.505,44.841,42.963,42.622,39.943,34.942,31.306,33.034,34.865,38.501,33.955,26.61,20.779,20.994,30.409,29.846,29.422,62.788,63.219,62.674,44.494,64.98,58.692,47.805,43.482,37.385,37.038,33.224,19.701,17.937,22.739,21.986,24.713,30.006,31.693,26.083,29.378,30.682,52.781,62.984,61.262,60.467,62.225,54.127,48.307,42.596,33.493,33.714,35.455,30.987,62.703,62.709,62.709,62.111,58.074,47.656,42.602,48.911,36.932,39.749,54.557,48.876,76.489,52.811,55.712,51.776,52.817,47.237,51.118,46.681,43.594,46.202,45.335,37.781,36.794,58.002,45.634,66.077,68.762,68.337,65.472,59.288,54.767,77.057,80.0,79.934,77.416,70.586,63.493,63.553,62.542,42.925,39.097,36.083,50.909,56.872,60.825,55.209,50.012,41.202,40.054,38.457,39.707,36.459,32.44,34.348,34.205,34.432,34.055,28.361,34.964,35.873,34.097,33.152,31.13,29.886,26.681,28.672,44.533,43.744,38.654,27.602,52.231,44.976,30.604,26.651,28.289,26.848,36.37,41.304,37.434,41.22,53.092,38.319,27.356,22.41,29.432,22.057,34.211,24.647,54.085,50.855,35.431,35.209,31.776,37.105,22.368,50.06,31.406,27.464,25.568,51.968,32.536,22.392,28.816,25.455,34.916,41.944,42.165,35.365,30.909,48.086,30.054,27.189,41.585,24.593,26.717,50.239,53.75,44.97,36.86,37.984,45.772,39.151,55.909,41.376,37.757,38.529,37.757,28.02,28.343,27.207,28.176,28.182,31.142,27.35,50.819,36.758,33.726,60.795,51.711,47.715,48.66,46.92,58.086,58.272,51.717,51.352,40.909,38.882,49.336,39.001,46.842,47.004,48.343,40.813,48.128,56.005,60.544,58.768,56.053,56.95,53.373,52.673,53.529,53.499,53.684,51.956,52.679,52.685,52.919,47.727,47.709,48.379,49.545,47.117,42.356,42.081,47.267,33.822,32.237,32.787,30.807,43.511,34.976,30.305,28.218,31.77,31.411,31.962,27.733,30.981,28.325,28.804,32.494,28.917,26.812,36.501,36.184,36.059,38.433,45.616,47.165,48.403,48.367,44.163,48.295,48.672,46.148,62.721,45.431,53.307,51.286,49.91,41.806,40.76,46.298,56.334,49.145,49.019,47.267,51.047,50.778,51.232,46.98,46.854,48.696,47.303,47.404,43.421,40.084,45.568,55.018,56.292,57.051,49.988,40.12,40.867,32.769,34.599,49.611,36.292,38.26,33.05,31.184,31.244,35.975,46.023,44.844,41.435,39.779,40.897,39.39,36.806,29.354,26.31,26.722,28.876,26.106,25.975,29.647,28.672,25.138,26.609,31.812,32.207,31.974,28.337,25.778,28.409,29.88,25.933,28.188,45.15,36.74,28.971,27.075,32.452,32.135,25.09,26.352,28.959,26.651,30.933,29.587,27.039,33.182,29.934,38.152,26.364,25.024,23.511,24.474,21.788,22.775,21.364,22.225,26.094,24.049,20.879,26.441,22.476,22.081,24.228,29.964,29.073,27.907,25.419,24.755,25.251,24.109,27.847,25.323,24.234,26.047,24.24,26.549,26.011,25.275,33.433,22.057,21.8,24.414,23.128,22.877,21.86,24.719,23.212,21.023,22.895,20.114,22.452,19.761,20.718,26.274,20.616,24.049,21.609,24.916,22.033,23.104,26.376,34.623,24.856,37.051,30.419,27.566,25.054,32.321,23.589,30.951,27.171,25.646,24.073,23.923,25.102,26.1,23.17,26.513,29.091,23.487,23.212,26.555,24.904,24.749,23.846,24.677,27.195,27.661,22.285,23.122,22.004,26.513,27.829,26.148,25.867,22.865,18.798,31.172,23.858,20.06,20.197,22.315,20.795,23.714,25.03,23.636,26.866,25.556,19.336,21.477,21.83,16.124,16.172,14.886,19.402,27.231,24.276,18.714,15.843,13.11,19.994,14.211,16.555,17.584,18.343,18.158,16.657,27.799,30.915,32.733,30.58,28.2,24.432,47.763,47.859,47.853,43.098,39.563,47.949,48.164,29.396,44.557,48.086,48.086,48.176,47.937,48.278,48.158,48.134,40.538,44.199,36.083,43.684,35.461,58.798,60.347,41.178,54.856,52.961,53.66,48.959,56.896,65.712,59.545,77.045,72.972,60.724,58.505,58.481,56.483,56.023,54.45,52.984,61.411,61.854,57.464,55.981,60.126,56.4,54.928,55.58,58.75,55.449,55.293,49.324,51.471,66.549,58.242,55.754,55.311,64.073,55.413,48.732,48.541,48.05,48.092,48.164,48.6,48.266,48.283,48.397,55.221,54.007,59.868,51.549,50.927,48.523,48.307,50.496,48.648,48.14,73.774,58.451,64.528,69.833,65.736,66.734,63.182,50.801,48.385,48.69,52.004,46.675,43.439,43.828,49.037,48.929,51.818,48.325,48.038,47.961,48.439,60.885,63.301,62.901,58.026,58.182,67.823,80.0,72.117,76.687,76.98,73.858,70.778,69.833,79.952,79.952,79.952,77.626,79.94,76.627,79.276,79.886,79.641,72.123,79.862,69.928,80.0,77.087,79.994,78.798,79.097,80.0,79.952,79.994,76.956,79.749,79.384,78.571,69.45,61.4,54.3,50.76,53.361,47.703,62.709,63.553,54.127,55.819,56.328,55.712,53.02,55.293,56.555,56.274,34.228,35.114,37.219,57.297,49.504,53.995,44.438,59.701,60.867,62.075,61.866,52.249,55.335,61.471,62.464,68.726,68.9,73.768,78.026,62.835,62.47,62.709,64.575,67.261,68.642,66.633,56.95,43.983,45.891,45.903,58.086,55.114,48.182,39.378,34.833,35.108,38.612,36.8,32.53,38.505,40.365,34.115,67.362,61.208,58.888,57.632,50.837,44.659,44.33,35.712,51.298,51.489,48.858,60.622,55.586,57.177,46.932,59.264,42.518,44.001,41.818,58.762,42.56,43.361,53.493,40.329,48.852,79.994,79.994,62.715,63.032,60.233,63.457,53.493,49.139,47.482,61.615,53.989,69.145,57.721,54.42,57.775,60.586,53.02,47.673,51.477,50.496,40.766,47.889,42.213,43.714,38.415,66.005,55.915,53.044,44.145,34.043,47.925,44.886,32.949,35.724,44.743,41.591,37.428,30.508,30.0,29.456,46.322,43.977,32.386,32.129,31.651,47.261,34.348,28.929,34.414,26.555,37.733,47.656,60.544,44.659,44.426,42.913,52.793,29.474,34.294,46.98,55.287,52.022,37.829,34.163,35.855,38.08,33.792,35.156,35.407,31.13,47.129,46.782,53.589,37.207,35.221,53.134,44.605,43.236,45.161,47.183,44.456,57.506,53.068,53.846,51.854,45.598,42.632,40.975,38.218,46.28,40.783,44.336,35.508,38.182,42.333,36.74,45.293,39.856,49.964,47.321,47.315,37.703,37.428,35.532,38.612,44.342,46.154,44.39,54.623,48.846,43.995,43.385,43.882,40.012,40.042,41.065,41.645,37.99,44.545,38.828,38.415,47.039,41.794,42.817,39.27,42.362,41.394,44.252,41.065,37.853,33.917,34.522,38.959,30.335,26.328,31.657,37.596,62.398,37.614,32.967,25.754,40.927,43.391,37.022,53.858,57.171,51.818,46.998,51.818,55.55,48.672,52.177,48.798,53.929,52.602,51.005,53.929,51.687,53.696,49.169,40.73,46.28,47.697,46.304,43.272,49.647,38.911,40.903,47.679,50.855,52.661,41.705,52.799,47.207,45.323,43.72,47.614,43.648,44.318,41.872,48.684,55.06,67.428,56.752,56.154,49.898,48.822,37.608,39.324,41.657,51.423,53.128,49.665,48.104,40.592,49.647,46.639,46.495,40.161,38.971,44.665,46.525,38.714,34.175,38.289,39.743,36.262,39.199,36.4,39.707,37.889,42.661,33.714,35.048,34.886,35.999,35.006,37.267,42.99,42.763,36.555,38.128,43.511,41.453,40.963,39.258,33.959,31.507,32.362,33.989,44.707,45.126,40.144,30.167,27.368,24.366,33.983,43.212,40.951,31.411,37.081,44.809,41.711,35.269,32.117,35.664,37.536,68.122,63.935,65.185,62.709,69.964,69.725,64.91,53.768,54.976,64.94,52.638,46.435,43.935,37.661,25.443,27.56,25.622,25.173,42.141,43.026,33.194,31.471,26.782,33.846,24.444,32.321,32.889,34.874,35.628,37.38,39.019,37.769,37.404,39.043,33.696,49.587,44.264,32.165,32.016,44.109,39.097,35.323,40.263,37.297,42.291,35.353,36.316,34.211,29.587,36.316,31.621,24.695,33.098,31.884,38.618,44.581,37.769,38.906,40.335,37.889,49.438,33.923,31.178,37.482,35.167,40.018,36.908,52.763,49.205,59.157,40.185,45.76,46.609,43.708,42.542,43.026,54.115,43.696,43.642,41.746,46.752,46.519,37.823,37.273,34.743,47.093,39.031,32.865,33.086,29.755,35.215,30.61,39.677,41.429,32.189,29.731,27.518,27.494,24.551,26.406,23.702,63.116,58.313,58.421,45.461,36.722,34.228,31.866,34.091,37.279,48.301,51.238,48.804,46.316,61.926,50.09,45.939,34.115,60.197,61.597,60.885,43.349,39.791,52.608,59.103,62.703,52.661,63.05,62.709,64.414,64.061,63.529,67.022,62.626,62.709,62.739,62.715,64.545,63.983,63.403,62.632,63.152,65.61,69.773,70.12,66.878,70.969,61.746,61.603,60.658,61.764,62.339,54.922,54.904,51.938,44.976,38.403,39.294,62.703,62.709,62.709,53.6,53.475,44.856,40.138,47.279,61.16,58.391,44.976,42.422,33.14,62.709,36.184,45.778,26.453,50.604,48.134,41.693,60.484,48.283,28.164,43.589,35.024,36.471,28.176,37.566,45.257,43.307,32.584,44.432,22.972,20.604,58.355,46.597,42.057,36.196,32.542,27.925,28.672,31.597,58.535,41.752,40.371,28.547,65.287,65.425,62.709,62.703,47.656,38.391,37.081,35.807,39.892,58.008,48.894,40.042,30.963,40.568,39.438,62.709,34.767,34.432,41.98,35.048,20.891,58.2,58.188,38.953,32.578,40.604,41.746,30.09,43.14,52.38,45.748,63.008,54.892,49.946,55.628,51.992,50.323,45.173,39.187,23.762,29.611,55.61,55.879,54.928,58.971,52.219,48.044,49.013,47.907,39.414,36.531,30.257,42.889,45.425,32.428,37.446,62.709,32.063,73.624,64.874,66.346,68.792,65.61,34.91,37.667,38.965,38.176,40.443,32.458,26.406,66.794,67.972,48.038,47.978,57.093,30.754,40.484,40.61,36.376,62.709,40.706,36.663,30.335,29.043,22.53,28.487,19.569,16.764,28.9,23.2,51.22,59.007,56.86,44.946,59.779,54.677,50.335,60.108,59.695,51.8,60.467,63.523,61.112,57.727,49.378,46.746,45.795,42.542,32.201,34.258,28.69,21.968,41.388,32.135,26.077,33.624,34.432,29.898,38.014,44.611,26.531,38.146,32.033,34.731,33.493,38.828,24.743,40.257,27.063,20.831,29.671,22.608,19.51,25.754,32.506,38.475,34.701,41.687,28.517,41.31,34.055,25.951,47.596,43.272,29.492,41.094,29.844,44.438,40.795,36.262,22.811,40.006,28.355,35.317,52.446,39.48,26.148,33.122,29.336,25.897,37.931,41.722,32.416,35.072,25.311,30.897,32.117,28.648,20.538,61.764,63.08,62.087,65.144,62.727,62.727,65.7,77.512,70.945,80.0,62.709,71.071,62.709,54.635,54.653,51.065,45.963,37.972,44.677,38.858,34.827,46.489,41.292,32.303,29.988,34.121,28.439,39.611,28.349,22.213,36.31,26.089,47.841,40.55,56.089,55.078,49.528,39.049,42.644,57.847,62.428,41.746,46.794,39.617,34.821,48.888,37.703,32.129,38.565,56.005,49.647,51.316,31.334,37.422,47.398,49.862,38.535,62.709,60.09,41.579,44.504,31.077,56.8,48.098,47.291,54.103,44.587,27.339,37.464,42.225,46.711,56.328,39.384,28.959,66.956,58.427,44.438,55.347,52.309,40.766,62.703,47.679,44.522,39.234,45.73,67.285,75.652,70.269,74.545,72.697,71.208,71.968,61.8,62.129,62.458,66.041,62.709,63.427,63.636,58.69,54.037,63.84,62.315,61.77,62.901,63.26,62.715,62.972,62.709,63.768,62.584,62.757,62.309,62.715,62.703,62.793,69.641,68.654,67.685,62.835,79.36,62.709,79.976,75.269,67.339,70.574,69.426,78.505,76.603,63.971,62.56,49.121,48.032,50.06,65.048,64.097,57.237,58.212,52.016,46.495,54.39,58.176,49.384,56.274,52.614,45.909,48.08,46.86,62.709,61.86,44.222,33.929,62.709,46.232,53.774,59.557,59.916,51.154,37.434,54.665,57.673,61.136,58.672,50.114,62.703,53.989,42.59,48.78,48.337,43.917,46.657,60.544,41.292,52.147,43.014,51.806,46.585,44.36,41.746,42.608,60.084,60.102,48.882,40.472,37.799,62.691,62.673,60.742,52.691,51.31,52.075,58.792,62.709,45.67,62.721,59.348,45.203,50.323,70.622,70.975,57.524,48.696,45.915,47.045,54.049,40.281,45.413,44.85,39.013,39.456,47.978,35.999,33.852,34.785,31.1,34.707,31.717,28.301,34.773,37.972,36.417,28.786,33.391,55.269,51.094,53.098,40.239,34.827,37.004,37.38,48.361,45.299,31.094,55.825,59.94,55.323,56.734,57.285,56.866,56.776,56.459,48.786,50.568,37.458,35.688,53.517,52.787,75.449,54.737,55.365,55.359,55.467,45.969,46.83,49.432,45.807,39.964,42.063,42.159,42.811,45.395,46.106,38.618,80.0,74.713,62.554,48.529,47.685,57.069,47.967,46.214,45.957,49.079,46.005,55.425,54.934,43.158,51.968,53.858,41.788,45.191,33.469,26.92,38.6,25.018,20.748,25.849,35.329,63.11,62.709,29.695,29.874,37.153,46.549,39.378,48.726,41.017,36.95,42.638,37.787,36.053,44.217,42.321,48.858,51.962,40.066,39.426,47.039,45.227,50.538,38.152,30.173,36.549,41.184,29.743,31.555,36.172,31.346,29.635,36.663,28.935,25.407,37.482,34.402,36.501,37.458,32.446,32.051,38.164,33.768,26.31,36.884,31.489,26.184,40.221,30.167,27.817,37.727,31.023,30.73,35.221,29.342,31.394,40.538,34.821,32.59,37.56,44.689,42.225,49.025,50.544,39.934,53.158,42.213,45.484,62.255,50.574,42.733,49.468,48.971,43.367,48.218,43.732,48.367,49.48,46.083,53.953,53.78,31.166,35.981,49.462,26.681,34.384,59.408,60.843,54.456,51.411,47.895,47.41,52.261,44.318,41.537,38.481,38.75,30.006,41.902,36.932,32.255,39.91,42.321,33.804,42.787,40.58,38.313,54.103,43.11,38.642,47.739,55.538,60.114,58.792,50.873,46.812,52.913,50.269,44.599,41.669,36.196,38.75,45.215,41.788,38.636,56.071,63.433,60.837,64.139,50.502,46.196,52.757,40.622,32.081,42.279,52.267,39.737,52.051,46.441,44.683,48.894,52.201,43.301,54.809,46.962,41.561,50.694,57.841,54.366,54.94,45.646,43.062,50.825,43.355,41.346,50.197,54.42,43.176,49.312,45.347,40.73,44.952,33.594,34.061,38.714,39.815,39.115,54.916,38.008,40.532,51.585,62.093,43.104,58.768,49.988,38.391,45.317,52.829,52.362,46.585,39.827,40.227,49.868,42.267,42.35,44.725,59.844,48.69,42.871,49.438,46.567,52.972,51.465,54.336,54.557,50.287,43.882,51.962,46.519,36.28,44.163,56.106,41.459,47.171,43.008,42.709,49.928,39.294,36.089,45.592,45.461,38.176,51.017,54.587,38.176,43.876,54.348,39.665,43.81,46.597,38.14,56.722,49.414,38.349,40.676,42.673,42.333,43.69,41.597,53.092,50.329,49.617,49.33,45.646,45.652,51.376,41.328,46.872,46.1,38.182,45.419,46.992,49.617,38.02,33.828,39.39,40.999,35.167,48.702,37.572,30.891,42.56,28.792,36.453,44.288,48.182,39.252,42.996,50.215,39.994,42.614,36.806,33.834,43.983,34.228,34.055,38.487,35.76,37.081,37.386,32.339,27.925,35.598,37.602,28.947,33.636,37.069,27.721,43.254,32.309,32.111,44.336,46.37,41.19,44.797,47.111,36.453,50.574,37.41,33.858,27.476],&quot;times&quot;:[1488729600,1488729660,1488729720,1488729780,1488729840,1488729900,1488729960,1488730020,1488730080,1488730140,1488730200,1488730260,1488730320,1488730380,1488730440,1488730500,1488730560,1488730620,1488730680,1488730740,1488730800,1488730860,1488730920,1488730980,1488731040,1488731100,1488731160,1488731220,1488731280,1488731340,1488731400,1488731460,1488731520,1488731580,1488731640,1488731700,1488731760,1488731820,1488731880,1488731940,1488732000,1488732060,1488732120,1488732180,1488732240,1488732300,1488732360,1488732420,1488732480,1488732540,1488732600,1488732660,1488732720,1488732780,1488732840,1488732900,1488732960,1488733020,1488733080,1488733140,1488733200,1488733260,1488733320,1488733380,1488733440,1488733500,1488733560,1488733620,1488733680,1488733740,1488733800,1488733860,1488733920,1488733980,1488734040,1488734100,1488734160,1488734220,1488734280,1488734340,1488734400,1488734460,1488734520,1488734580,1488734640,1488734700,1488734760,1488734820,1488734880,1488734940,1488735000,1488735060,1488735120,1488735180,1488735240,1488735300,1488735420,1488735480,1488735540,1488735600,1488735660,1488735720,1488735780,1488735840,1488735900,1488735960,1488736020,1488736080,1488736140,1488736200,1488736260,1488736320,1488736380,1488736440,1488736500,1488736560,1488736620,1488736680,1488736740,1488736800,1488736860,1488736920,1488736980,1488737040,1488737100,1488737160,1488737220,1488737280,1488737340,1488737400,1488737460,1488737520,1488737580,1488737640,1488737700,1488737760,1488737820,1488737880,1488737940,1488738000,1488738060,1488738120,1488738180,1488738240,1488738300,1488738360,1488738420,1488738480,1488738540,1488738600,1488738660,1488738720,1488738780,1488738840,1488738900,1488738960,1488739020,1488739080,1488739140,1488739200,1488739260,1488739320,1488739380,1488739440,1488739500,1488739560,1488739620,1488739680,1488739740,1488739800,1488739860,1488739920,1488739980,1488740040,1488740100,1488740160,1488740220,1488740280,1488740340,1488740400,1488740460,1488740520,1488740580,1488740640,1488740700,1488740760,1488740820,1488740880,1488740940,1488741000,1488741060,1488741120,1488741180,1488741240,1488741300,1488741360,1488741420,1488741480,1488741540,1488741600,1488741660,1488741720,1488741780,1488741840,1488741900,1488741960,1488742020,1488742080,1488742140,1488742200,1488742260,1488742320,1488742380,1488742440,1488742500,1488742560,1488742620,1488742680,1488742740,1488742800,1488742860,1488742920,1488742980,1488743040,1488743100,1488743160,1488743220,1488743280,1488743340,1488743400,1488743460,1488743520,1488743580,1488743640,1488743700,1488743760,1488743820,1488743880,1488743940,1488744000,1488744060,1488744120,1488744180,1488744240,1488744300,1488744360,1488744420,1488744480,1488744540,1488744600,1488744660,1488744720,1488744780,1488744840,1488744900,1488744960,1488745020,1488745080,1488745140,1488745200,1488745260,1488745320,1488745380,1488745440,1488745500,1488745560,1488745620,1488745680,1488745740,1488745800,1488745860,1488745920,1488745980,1488746040,1488746100,1488746160,1488746220,1488746280,1488746340,1488746400,1488746460,1488746520,1488746580,1488746640,1488746700,1488746760,1488746820,1488746880,1488746940,1488747000,1488747060,1488747120,1488747180,1488747240,1488747300,1488747360,1488747420,1488747480,1488747540,1488747600,1488747660,1488747720,1488747780,1488747840,1488747900,1488747960,1488748020,1488748080,1488748140,1488748200,1488748260,1488748320,1488748380,1488748440,1488748500,1488748560,1488748620,1488748680,1488748740,1488748800,1488748860,1488748920,1488748980,1488749040,1488749100,1488749160,1488749220,1488749280,1488749340,1488749400,1488749460,1488749520,1488749580,1488749640,1488749700,1488749760,1488749820,1488749880,1488749940,1488750000,1488750060,1488750120,1488750180,1488750240,1488750300,1488750360,1488750420,1488750480,1488750540,1488750600,1488750660,1488750720,1488750780,1488750840,1488750900,1488750960,1488751020,1488751080,1488751140,1488751200,1488751260,1488751320,1488751380,1488751440,1488751500,1488751560,1488751620,1488751680,1488751740,1488751800,1488751860,1488751920,1488751980,1488752040,1488752100,1488752160,1488752220,1488752280,1488752340,1488752400,1488752460,1488752520,1488752580,1488752640,1488752700,1488752760,1488752820,1488752880,1488752940,1488753000,1488753060,1488753120,1488753180,1488753240,1488753300,1488753360,1488753420,1488753480,1488753540,1488753600,1488753660,1488753720,1488753780,1488753840,1488753900,1488753960,1488754020,1488754080,1488754140,1488754200,1488754260,1488754320,1488754380,1488754440,1488754500,1488754560,1488754620,1488754680,1488754740,1488754800,1488754860,1488754920,1488754980,1488755040,1488755100,1488755160,1488755220,1488755280,1488755340,1488755400,1488755460,1488755520,1488755580,1488755640,1488755700,1488755760,1488755820,1488755880,1488755940,1488756000,1488756060,1488756120,1488756180,1488756240,1488756300,1488756360,1488756420,1488756480,1488756540,1488756600,1488756660,1488756720,1488756780,1488756840,1488756900,1488756960,1488757020,1488757080,1488757140,1488757200,1488757260,1488757320,1488757380,1488757440,1488757500,1488757560,1488757620,1488757680,1488757740,1488757800,1488757860,1488757920,1488757980,1488758040,1488758100,1488758160,1488758220,1488758280,1488758340,1488758400,1488758460,1488758520,1488758580,1488758640,1488758700,1488758760,1488758820,1488758880,1488758940,1488759000,1488759060,1488759120,1488759180,1488759240,1488759300,1488759360,1488759420,1488759480,1488759540,1488759600,1488759660,1488759720,1488759780,1488759840,1488759900,1488759960,1488760020,1488760080,1488760140,1488760200,1488760260,1488760320,1488760380,1488760440,1488760500,1488760560,1488760620,1488760680,1488760740,1488760800,1488760860,1488760920,1488760980,1488761040,1488761100,1488761160,1488761220,1488761280,1488761340,1488761400,1488761460,1488761520,1488761580,1488761640,1488761700,1488761760,1488761820,1488761880,1488761940,1488762000,1488762060,1488762120,1488762180,1488762240,1488762300,1488762360,1488762420,1488762480,1488762540,1488762600,1488762660,1488762720,1488762780,1488762840,1488762900,1488762960,1488763020,1488763080,1488763140,1488763200,1488763260,1488763320,1488763380,1488763440,1488763500,1488763560,1488763620,1488763680,1488763740,1488763800,1488763860,1488763920,1488763980,1488764040,1488764100,1488764160,1488764220,1488764280,1488764340,1488764400,1488764460,1488764520,1488764580,1488764640,1488764700,1488764760,1488764820,1488764880,1488764940,1488765000,1488765060,1488765120,1488765180,1488765240,1488765300,1488765360,1488765420,1488765480,1488765540,1488765600,1488765660,1488765720,1488765780,1488765840,1488765900,1488765960,1488766020,1488766080,1488766140,1488766200,1488766260,1488766320,1488766380,1488766440,1488766500,1488766560,1488766620,1488766680,1488766740,1488766800,1488766860,1488766920,1488766980,1488767040,1488767100,1488767160,1488767220,1488767280,1488767340,1488767400,1488767460,1488767520,1488767580,1488767640,1488767700,1488767760,1488767820,1488767880,1488767940,1488768000,1488768060,1488768120,1488768180,1488768240,1488768300,1488768360,1488768420,1488768480,1488768540,1488768600,1488768660,1488768720,1488768780,1488768840,1488768900,1488768960,1488769020,1488769080,1488769140,1488769200,1488769260,1488769320,1488769380,1488769440,1488769500,1488769560,1488769620,1488769680,1488769740,1488769800,1488769860,1488769920,1488769980,1488770040,1488770100,1488770160,1488770220,1488770280,1488770340,1488770400,1488770460,1488770520,1488770580,1488770640,1488770700,1488770760,1488770820,1488770880,1488770940,1488771000,1488771060,1488771120,1488771180,1488771240,1488771300,1488771360,1488771420,1488771480,1488771540,1488771600,1488771660,1488771720,1488771780,1488771840,1488771900,1488771960,1488772020,1488772080,1488772140,1488772200,1488772260,1488772320,1488772380,1488772440,1488772500,1488772560,1488772620,1488772680,1488772740,1488772800,1488772860,1488772920,1488772980,1488773040,1488773100,1488773160,1488773220,1488773280,1488773340,1488773400,1488773460,1488773520,1488773580,1488773640,1488773700,1488773760,1488773820,1488773880,1488773940,1488774000,1488774060,1488774120,1488774180,1488774240,1488774300,1488774360,1488774420,1488774480,1488774540,1488774600,1488774660,1488774720,1488774780,1488774840,1488774900,1488774960,1488775020,1488775080,1488775140,1488775200,1488775260,1488775320,1488775380,1488775440,1488775500,1488775560,1488775620,1488775680,1488775740,1488775800,1488775860,1488775920,1488775980,1488776040,1488776100,1488776160,1488776220,1488776280,1488776340,1488776400,1488776460,1488776520,1488776580,1488776640,1488776700,1488776760,1488776820,1488776880,1488776940,1488777000,1488777060,1488777120,1488777180,1488777240,1488777300,1488777360,1488777420,1488777480,1488777540,1488777600,1488777660,1488777720,1488777780,1488777840,1488777900,1488777960,1488778020,1488778080,1488778140,1488778200,1488778260,1488778320,1488778380,1488778440,1488778500,1488778560,1488778620,1488778680,1488778740,1488778800,1488778860,1488778920,1488778980,1488779040,1488779100,1488779160,1488779220,1488779280,1488779340,1488779400,1488779460,1488779520,1488779580,1488779640,1488779700,1488779760,1488779820,1488779880,1488779940,1488780000,1488780060,1488780120,1488780180,1488780240,1488780300,1488780360,1488780420,1488780480,1488780540,1488780600,1488780660,1488780720,1488780780,1488780840,1488780900,1488780960,1488781020,1488781080,1488781140,1488781200,1488781260,1488781320,1488781380,1488781440,1488781500,1488781560,1488781620,1488781680,1488781740,1488781800,1488781860,1488781920,1488781980,1488782040,1488782100,1488782160,1488782220,1488782280,1488782340,1488782400,1488782460,1488782520,1488782580,1488782700,1488782760,1488782820,1488782880,1488782940,1488783000,1488783060,1488783120,1488783180,1488783240,1488783300,1488783360,1488783420,1488783480,1488783540,1488783600,1488783660,1488783720,1488783780,1488783840,1488783900,1488783960,1488784020,1488784080,1488784140,1488784200,1488784260,1488784320,1488784380,1488784440,1488784500,1488784560,1488784620,1488784680,1488784740,1488784800,1488784860,1488784920,1488784980,1488785040,1488785100,1488785160,1488785220,1488785280,1488785340,1488785400,1488785520,1488785580,1488785640,1488785700,1488785760,1488785820,1488785880,1488785940,1488786000,1488786060,1488786120,1488786180,1488786240,1488786300,1488786360,1488786420,1488786480,1488786540,1488786600,1488786660,1488786720,1488786780,1488786840,1488786900,1488786960,1488787020,1488787080,1488787140,1488787200,1488787260,1488787320,1488787380,1488787440,1488787500,1488787560,1488787620,1488787680,1488787740,1488787800,1488787860,1488787920,1488787980,1488788040,1488788100,1488788160,1488788220,1488788280,1488788340,1488788400,1488788460,1488788520,1488788580,1488788640,1488788700,1488788760,1488788820,1488788880,1488788940,1488789000,1488789060,1488789120,1488789180,1488789240,1488789300,1488789360,1488789420,1488789480,1488789540,1488789600,1488789660,1488789720,1488789780,1488789840,1488789900,1488789960,1488790020,1488790080,1488790140,1488790200,1488790260,1488790320,1488790380,1488790440,1488790500,1488790560,1488790620,1488790680,1488790740,1488790800,1488790860,1488790920,1488790980,1488791040,1488791100,1488791160,1488791220,1488791280,1488791340,1488791400,1488791460,1488791520,1488791580,1488791640,1488791700,1488791760,1488791820,1488791880,1488791940,1488792000,1488792060,1488792120,1488792180,1488792240,1488792300,1488792360,1488792420,1488792480,1488792540,1488792600,1488792660,1488792720,1488792780,1488792840,1488792900,1488792960,1488793020,1488793080,1488793140,1488793200,1488793260,1488793320,1488793380,1488793440,1488793500,1488793560,1488793620,1488793680,1488793740,1488793800,1488793860,1488793920,1488793980,1488794040,1488794100,1488794160,1488794220,1488794280,1488794340,1488794400,1488794460,1488794520,1488794580,1488794640,1488794700,1488794760,1488794820,1488794880,1488794940,1488795000,1488795060,1488795120,1488795180,1488795240,1488795300,1488795360,1488795420,1488795480,1488795540,1488795600,1488795660,1488795720,1488795780,1488795840,1488795900,1488795960,1488796020,1488796080,1488796140,1488796200,1488796260,1488796320,1488796380,1488796440,1488796500,1488796560,1488796620,1488796680,1488796740,1488796800,1488796860,1488796920,1488796980,1488797040,1488797100,1488797160,1488797220,1488797280,1488797340,1488797400,1488797460,1488797520,1488797580,1488797640,1488797700,1488797760,1488797820,1488797880,1488797940,1488798000,1488798060,1488798120,1488798180,1488798240,1488798300,1488798360,1488798420,1488798480,1488798540,1488798600,1488798660,1488798720,1488798780,1488798840,1488798900,1488798960,1488799020,1488799080,1488799140,1488799200,1488799260,1488799320,1488799380,1488799440,1488799500,1488799560,1488799620,1488799680,1488799740,1488799800,1488799860,1488799920,1488799980,1488800040,1488800100,1488800160,1488800220,1488800280,1488800340,1488800400,1488800460,1488800520,1488800580,1488800640,1488800700,1488800760,1488800820,1488800880,1488800940,1488801000,1488801060,1488801120,1488801180,1488801240,1488801300,1488801360,1488801420,1488801480,1488801540,1488801600,1488801660,1488801720,1488801780,1488801840,1488801900,1488801960,1488802020,1488802080,1488802140,1488802200,1488802260,1488802320,1488802380,1488802440,1488802500,1488802560,1488802620,1488802680,1488802740,1488802800,1488802860,1488802920,1488802980,1488803040,1488803100,1488803160,1488803220,1488803280,1488803340,1488803400,1488803460,1488803520,1488803580,1488803640,1488803700,1488803760,1488803820,1488803880,1488803940,1488804000,1488804060,1488804120,1488804180,1488804240,1488804300,1488804360,1488804420,1488804480,1488804540,1488804600,1488804660,1488804720,1488804780,1488804840,1488804900,1488804960,1488805020,1488805080,1488805140,1488805200,1488805260,1488805320,1488805380,1488805440,1488805500,1488805560,1488805620,1488805680,1488805740,1488805800,1488805860,1488805920,1488805980,1488806040,1488806100,1488806160,1488806220,1488806280,1488806340,1488806400,1488806460,1488806520,1488806580,1488806640,1488806700,1488806760,1488806820,1488806880,1488806940,1488807000,1488807060,1488807120,1488807180,1488807240,1488807300,1488807360,1488807420,1488807480,1488807540,1488807600,1488807660,1488807720,1488807780,1488807840,1488807900,1488807960,1488808020,1488808080,1488808140,1488808200,1488808260,1488808320,1488808380,1488808440,1488808500,1488808560,1488808620,1488808680,1488808740,1488808800,1488808860,1488808920,1488808980,1488809040,1488809100,1488809160,1488809220,1488809280,1488809340,1488809400,1488809460,1488809520,1488809580,1488809640,1488809700,1488809760,1488809820,1488809880,1488809940,1488810000,1488810060,1488810120,1488810180,1488810240,1488810300,1488810360,1488810420,1488810480,1488810540,1488810600,1488810660,1488810720,1488810780,1488810840,1488810900,1488810960,1488811020,1488811080,1488811140,1488811200,1488811260,1488811320,1488811380,1488811440,1488811500,1488811560,1488811620,1488811680,1488811740,1488811800,1488811860,1488811920,1488811980,1488812040,1488812100,1488812160,1488812220,1488812280,1488812340,1488812400,1488812460,1488812520,1488812580,1488812640,1488812700,1488812760,1488812820,1488812880,1488812940,1488813000,1488813060,1488813120,1488813180,1488813240,1488813300,1488813360,1488813420,1488813480,1488813540,1488813600,1488813660,1488813720,1488813780,1488813840,1488813900,1488813960,1488814020,1488814080,1488814140,1488814200,1488814260,1488814320,1488814380,1488814440,1488814500,1488814560,1488814620,1488814680,1488814740,1488814800,1488814860,1488814920,1488814980,1488815040,1488815100,1488815160,1488815220,1488815280,1488815340,1488815400,1488815460,1488815520,1488815580,1488815640,1488815700,1488815760,1488815820,1488815880,1488815940,1488816000,1488816060,1488816120,1488816180,1488816240,1488816300,1488816360,1488816420,1488816480,1488816540,1488816600,1488816660,1488816720,1488816780,1488816840,1488816900,1488816960,1488817020,1488817080,1488817140,1488817200,1488817260,1488817320,1488817380,1488817440,1488817500,1488817560,1488817620,1488817680,1488817740,1488817800,1488817860,1488817920,1488817980,1488818040,1488818100,1488818160,1488818220,1488818280,1488818340,1488818400,1488818460,1488818520,1488818580,1488818640,1488818700,1488818760,1488818820,1488818880,1488818940,1488819000,1488819060,1488819120,1488819180,1488819240,1488819300,1488819360,1488819420,1488819480,1488819540,1488819600,1488819660,1488819720,1488819780,1488819840,1488819900,1488819960,1488820020,1488820080,1488820140,1488820200,1488820260,1488820320,1488820380,1488820440,1488820500,1488820560,1488820620,1488820680,1488820740,1488820800,1488820860,1488820920,1488820980,1488821040,1488821100,1488821160,1488821220,1488821280,1488821340,1488821400,1488821460,1488821520,1488821580,1488821640,1488821700,1488821760,1488821820,1488821880,1488821940,1488822000,1488822060,1488822120,1488822180,1488822240,1488822300,1488822360,1488822420,1488822480,1488822540,1488822600,1488822660,1488822720,1488822780,1488822840,1488822900,1488822960,1488823020,1488823080,1488823140,1488823200,1488823260,1488823320,1488823380,1488823440,1488823500,1488823560,1488823620,1488823680,1488823740,1488823800,1488823860,1488823920,1488823980,1488824040,1488824100,1488824160,1488824220,1488824280,1488824340,1488824400,1488824460,1488824520,1488824580,1488824640,1488824700,1488824760,1488824820,1488824880,1488824940,1488825000,1488825060,1488825120,1488825180,1488825240,1488825300,1488825360,1488825420,1488825480,1488825540,1488825600,1488825660,1488825720,1488825780,1488825840,1488825900,1488825960,1488826020,1488826080,1488826140,1488826200,1488826260,1488826320,1488826380,1488826440,1488826500,1488826560,1488826620,1488826680,1488826740,1488826800,1488826860,1488826920,1488826980,1488827040,1488827100,1488827160,1488827220,1488827280,1488827340,1488827400,1488827460,1488827520,1488827580,1488827640,1488827700,1488827760,1488827820,1488827940,1488828000,1488828060,1488828120,1488828180,1488828240,1488828300,1488828360,1488828420,1488828480,1488828540,1488828600,1488828660,1488828720,1488828780,1488828840,1488828900,1488828960,1488829020,1488829080,1488829140,1488829200,1488829260,1488829320,1488829380,1488829440,1488829500,1488829560,1488829620,1488829680,1488829740,1488829800,1488829860,1488829920,1488829980,1488830040,1488830100,1488830160,1488830220,1488830280,1488830340,1488830400,1488830460,1488830520,1488830580,1488830640,1488830700,1488830760,1488830820,1488830880,1488830940,1488831000,1488831060,1488831120,1488831180,1488831240,1488831300,1488831360,1488831420,1488831480,1488831540,1488831600,1488831660,1488831720,1488831780,1488831840,1488831900,1488832020,1488832080,1488832140,1488832200,1488832260,1488832320,1488832380,1488832440,1488832500,1488832560,1488832620,1488832680,1488832740,1488832800,1488832860,1488832920,1488832980,1488833040,1488833100,1488833160,1488833220,1488833280,1488833340,1488833400,1488833460,1488833520,1488833580,1488833640,1488833700,1488833760,1488833820,1488833880,1488833940,1488834000,1488834060,1488834120,1488834180,1488834240,1488834300,1488834360,1488834420,1488834480,1488834540,1488834600,1488834660,1488834720,1488834780,1488834840,1488834900,1488834960,1488835020,1488835080,1488835140,1488835200,1488835260,1488835320,1488835380,1488835440,1488835500,1488835560,1488835620,1488835680,1488835740,1488835800,1488835860,1488835920,1488835980,1488836040,1488836100,1488836160,1488836220,1488836280,1488836340,1488836400,1488836460,1488836520,1488836580,1488836640,1488836700,1488836760,1488836820,1488836880,1488836940,1488837000,1488837060,1488837120,1488837180,1488837240,1488837300,1488837360,1488837420,1488837480,1488837540,1488837600,1488837660,1488837720,1488837780,1488837840,1488837900,1488837960,1488838020,1488838080,1488838140,1488838200,1488838260,1488838320,1488838380,1488838440,1488838500,1488838560,1488838620,1488838680,1488838740,1488838800,1488838860,1488838920,1488838980,1488839040,1488839100,1488839160,1488839220,1488839280,1488839340,1488839400,1488839460,1488839520,1488839580,1488839640,1488839700,1488839760,1488839820,1488839880,1488839940,1488840000,1488840060,1488840120,1488840180,1488840240,1488840300,1488840360,1488840420,1488840480,1488840540,1488840600,1488840660,1488840720,1488840780,1488840840,1488840900,1488840960,1488841020,1488841080,1488841140,1488841200,1488841260,1488841320,1488841380,1488841440,1488841500,1488841560,1488841620,1488841680,1488841740,1488841800,1488841860,1488841920,1488841980,1488842040,1488842100,1488842160,1488842220,1488842280,1488842340,1488842400,1488842460,1488842520,1488842580,1488842640,1488842700,1488842760,1488842820,1488842880,1488842940,1488843000,1488843060,1488843120,1488843180,1488843240,1488843300,1488843360,1488843420,1488843480,1488843540,1488843600,1488843660,1488843720,1488843780,1488843840,1488843900,1488843960,1488844020,1488844080,1488844140,1488844200,1488844260,1488844320,1488844380,1488844440,1488844500,1488844560,1488844620,1488844680,1488844740,1488844800,1488844860,1488844920,1488844980,1488845040,1488845100,1488845160,1488845220,1488845280,1488845340,1488845400,1488845460,1488845520,1488845580,1488845640,1488845700,1488845760,1488845820,1488845880,1488845940,1488846000,1488846060,1488846120,1488846180,1488846240,1488846300,1488846360,1488846420,1488846480,1488846540,1488846600,1488846660,1488846720,1488846780,1488846840,1488846900,1488846960,1488847020,1488847080,1488847140,1488847200,1488847260,1488847320,1488847380,1488847440,1488847500,1488847560,1488847620,1488847680,1488847740,1488847800,1488847860,1488847920,1488847980,1488848040,1488848100,1488848160,1488848220,1488848280,1488848340,1488848400,1488848460,1488848520,1488848580,1488848640,1488848700,1488848760,1488848940,1488849000,1488849060,1488849120,1488849180,1488849240,1488849300,1488849360,1488849420,1488849480,1488849540,1488849600,1488849660,1488849720,1488849780,1488849840,1488849900,1488849960,1488850020,1488850080,1488850140,1488850200,1488850260,1488850320,1488850380,1488850440,1488850500,1488850560,1488850620,1488850680,1488850740,1488850800,1488850860,1488850920,1488850980,1488851040,1488851100,1488851160,1488851220,1488851280,1488851340,1488851400,1488851460,1488851520,1488851580,1488851640,1488851700,1488851760,1488851820,1488851880,1488851940,1488852000,1488852060,1488852120,1488852180,1488852240,1488852300,1488852360,1488852420,1488852480,1488852540,1488852600,1488852660,1488852720,1488852780,1488852840,1488852900,1488852960,1488853020,1488853080,1488853140,1488853200,1488853260,1488853320,1488853380,1488853440,1488853500,1488853560,1488853620,1488853680,1488853740,1488853800,1488853860,1488853920,1488853980,1488854040,1488854100,1488854160,1488854220,1488854280,1488854340,1488854400,1488854460,1488854520,1488854580,1488854640,1488854700,1488854760,1488854820,1488854880,1488854940,1488855000,1488855060,1488855120,1488855180,1488855240,1488855300,1488855360,1488855420,1488855480,1488855540,1488855600,1488855660,1488855720,1488855780,1488855840,1488855900,1488855960,1488856020,1488856080,1488856140,1488856200,1488856260,1488856320,1488856380,1488856440,1488856500,1488856560,1488856620,1488856680,1488856740,1488856800,1488856860,1488856920,1488856980,1488857040,1488857100,1488857160,1488857220,1488857280,1488857340,1488857400,1488857460,1488857520,1488857580,1488857640,1488857700,1488857760,1488857820,1488857880,1488857940,1488858000,1488858060,1488858120,1488858180,1488858240,1488858300,1488858360,1488858420,1488858480,1488858540,1488858600,1488858660,1488858720,1488858780,1488858840,1488858900,1488858960,1488859020,1488859080,1488859140,1488859200,1488859260,1488859320,1488859380,1488859440,1488859500,1488859560,1488859620,1488859680,1488859740,1488859800,1488859860,1488859920,1488859980,1488860040,1488860100,1488860160,1488860220,1488860280,1488860340,1488860400,1488860460,1488860520,1488860580,1488860640,1488860700,1488860760,1488860820,1488860880,1488860940,1488861000,1488861060,1488861120,1488861180,1488861240,1488861300,1488861360,1488861420,1488861480,1488861540,1488861600,1488861660,1488861720,1488861780,1488861840,1488861900,1488861960,1488862020,1488862080,1488862140,1488862200,1488862260,1488862320,1488862380,1488862440,1488862500,1488862560,1488862620,1488862680,1488862740,1488862800,1488862860,1488862920,1488862980,1488863040,1488863100,1488863160,1488863220,1488863280,1488863340,1488863400,1488863460,1488863520,1488863580,1488863640,1488863700,1488863760,1488863820,1488863880,1488863940,1488864000,1488864060,1488864120,1488864180,1488864240,1488864300,1488864360,1488864420,1488864480,1488864540,1488864600,1488864660,1488864720,1488864780,1488864840,1488864900,1488864960,1488865020,1488865080,1488865140,1488865200,1488865260,1488865320,1488865380,1488865440,1488865500,1488865560,1488865620,1488865680,1488865740,1488865800,1488865860,1488865920,1488865980,1488866040,1488866100,1488866160,1488866220,1488866280,1488866340,1488866400,1488866460,1488866520,1488866580,1488866640,1488866700,1488866760,1488866820,1488866880,1488866940,1488867000,1488867060,1488867120,1488867180,1488867240,1488867300,1488867360,1488867420,1488867480,1488867540,1488867600,1488867660,1488867720,1488867780,1488867840,1488867900,1488867960,1488868020,1488868080,1488868140,1488868200,1488868260,1488868320,1488868380,1488868440,1488868500,1488868560,1488868620,1488868680,1488868740,1488868800,1488868860,1488868920,1488868980,1488869040,1488869100,1488869160,1488869220,1488869280,1488869340,1488869400,1488869460,1488869520,1488869580,1488869640,1488869700,1488869760,1488869820,1488869880,1488869940,1488870000,1488870060,1488870120,1488870180,1488870240,1488870300,1488870360,1488870420,1488870480,1488870540,1488870600,1488870660,1488870720,1488870780,1488870840,1488870900,1488870960,1488871020,1488871080,1488871140,1488871200,1488871260,1488871320,1488871380,1488871440,1488871500,1488871560,1488871620,1488871680,1488871740,1488871800,1488871860,1488871920,1488871980,1488872040,1488872100,1488872160,1488872220,1488872280,1488872340,1488872400,1488872460,1488872520,1488872580,1488872640,1488872700,1488872760,1488872820,1488872880,1488872940,1488873000,1488873060,1488873120,1488873180,1488873240,1488873300,1488873360,1488873420,1488873480,1488873540,1488873600,1488873660,1488873720,1488873780,1488873840,1488873900,1488873960,1488874020,1488874080,1488874140,1488874200,1488874260,1488874320,1488874380,1488874440,1488874500,1488874560,1488874620,1488874680,1488874740,1488874800,1488874860,1488874920,1488874980,1488875040,1488875100,1488875160,1488875220,1488875280,1488875340,1488875400,1488875460,1488875520,1488875580,1488875640,1488875700,1488875760,1488875820,1488875880,1488875940,1488876000,1488876060,1488876120,1488876180,1488876240,1488876300,1488876360,1488876420,1488876480,1488876540,1488876600,1488876660,1488876720,1488876780,1488876840,1488876900,1488876960,1488877020,1488877080,1488877140,1488877200,1488877260,1488877320,1488877380,1488877440,1488877500,1488877560,1488877620,1488877680,1488877740,1488877800,1488877860,1488877920,1488877980,1488878040,1488878100,1488878160,1488878220,1488878280,1488878340,1488878400,1488878460,1488878520,1488878580,1488878640,1488878700,1488878760,1488878820,1488878880,1488878940,1488879000,1488879060,1488879120,1488879180,1488879240,1488879300,1488879360,1488879420,1488879480,1488879540,1488879600,1488879660,1488879720,1488879780,1488879840,1488879900,1488880140,1488880200,1488880260,1488880320,1488880380,1488880440,1488880500,1488880560,1488880620,1488880680,1488880740,1488880800,1488880860,1488880920,1488880980,1488881040,1488881100,1488881160,1488881220,1488881280,1488881340,1488881400,1488881460,1488881520,1488881580,1488881640,1488881700,1488881760,1488881820,1488881880,1488881940,1488882000,1488882060,1488882120,1488882180,1488882240,1488882300,1488882360,1488882420,1488882480,1488882540,1488882600,1488882660,1488882720,1488882780,1488882840,1488882900,1488882960,1488883020,1488883080,1488883140,1488883200,1488883260,1488883320,1488883380,1488883440,1488883500,1488883560,1488883620,1488883680,1488883740,1488883800,1488883860,1488883920,1488883980,1488884040,1488884100,1488884160,1488884220,1488884280,1488884340,1488884400,1488884460,1488884520,1488884580,1488884640,1488884700,1488884760,1488884820,1488884880,1488884940,1488885000,1488885060,1488885120,1488885180,1488885240,1488885300,1488885360,1488885420,1488885480,1488885540,1488885600,1488885660,1488885720,1488885780,1488885840,1488885900,1488885960,1488886020,1488886080,1488886140,1488886200,1488886260,1488886320,1488886380,1488886440,1488886500,1488886560,1488886620,1488886680,1488886740,1488886800,1488886860,1488886920,1488886980,1488887040,1488887100,1488887160,1488887220,1488887280,1488887340,1488887400,1488887460,1488887520,1488887580,1488887640,1488887700,1488887760,1488887820,1488887880,1488887940,1488888000,1488888060,1488888120,1488888180,1488888240,1488888300,1488888360,1488888420,1488888480,1488888540,1488888600,1488888660,1488888720,1488888780,1488888840,1488888900,1488888960,1488889020,1488889080,1488889140,1488889200,1488889260,1488889320,1488889380,1488889440,1488889500,1488889560,1488889620,1488889680,1488889740,1488889800,1488889860,1488889920,1488889980,1488890040,1488890100,1488890160,1488890220,1488890280,1488890340,1488890400,1488890460,1488890520,1488890580,1488890640,1488890700,1488890760,1488890820,1488890880,1488890940,1488891000,1488891060,1488891120,1488891180,1488891240,1488891300,1488891360,1488891420,1488891480,1488891540,1488891600,1488891660,1488891720,1488891780,1488891840,1488891900,1488891960,1488892020,1488892080,1488892140,1488892200,1488892260,1488892320,1488892380,1488892440,1488892500,1488892560,1488892620,1488892680,1488892740,1488892800,1488892920,1488892980,1488893040,1488893100,1488893160,1488893220,1488893280,1488893340,1488893400,1488893460,1488893520,1488893580,1488893640,1488893700,1488893760,1488893820,1488893880,1488893940,1488894000,1488894060,1488894120,1488894180,1488894240,1488894300,1488894360,1488894420,1488894480,1488894540,1488894600,1488894660,1488894720,1488894780,1488894960,1488895020,1488895080,1488895140,1488895200,1488895260,1488895320,1488895380,1488895440,1488895500,1488895560,1488895620,1488895680,1488895740,1488895800,1488895860,1488895920,1488895980,1488896040,1488896100,1488896160,1488896220,1488896280,1488896340,1488896400,1488896460,1488896520,1488896580,1488896640,1488896700,1488896760,1488896820,1488896880,1488896940,1488897000,1488897060,1488897120,1488897180,1488897240,1488897300,1488897360,1488897420,1488897480,1488897540,1488897600,1488897660,1488897720,1488897780,1488897840,1488897900,1488897960,1488898020,1488898080,1488898140,1488898200,1488898260,1488898320,1488898380,1488898440,1488898500,1488898560,1488898620,1488898680,1488898740,1488898800,1488898860,1488898920,1488898980,1488899040,1488899100,1488899160,1488899220,1488899280,1488899340,1488899400,1488899460,1488899520,1488899580,1488899640,1488899700,1488899760,1488899820,1488899880,1488899940,1488900000,1488900060,1488900120,1488900180,1488900240,1488900300,1488900360,1488900420,1488900480,1488900540,1488900600,1488900660,1488900720,1488900780,1488900840,1488900900,1488900960,1488901020,1488901080,1488901140,1488901200,1488901260,1488901320,1488901380,1488901440,1488901500,1488901560,1488901620,1488901680,1488901740,1488901800,1488901860,1488901920,1488901980,1488902040,1488902100,1488902160,1488902220,1488902280,1488902340,1488902400,1488902460,1488902520,1488902580,1488902640,1488902700,1488902760,1488902820,1488902880,1488902940,1488903000,1488903060,1488903120,1488903180,1488903240,1488903300,1488903360,1488903420,1488903480,1488903540,1488903600,1488903660,1488903720,1488903780,1488903840,1488903900,1488903960,1488904020,1488904080,1488904140,1488904200,1488904260,1488904320,1488904380,1488904440,1488904500,1488904560,1488904620,1488904680,1488904740,1488904800,1488904860,1488904920,1488904980,1488905040,1488905100,1488905160,1488905220,1488905280,1488905340,1488905400,1488905460,1488905520,1488905580,1488905640,1488905700,1488905760,1488905820,1488905880,1488905940,1488906000,1488906060,1488906120,1488906180,1488906240,1488906300,1488906360,1488906420,1488906480,1488906540,1488906600,1488906660,1488906720,1488906780,1488906840,1488906900,1488906960,1488907020,1488907080,1488907140,1488907200,1488907260,1488907320,1488907380,1488907440,1488907500,1488907560,1488907620,1488907680,1488907740,1488907800,1488907860,1488907920,1488907980,1488908040,1488908100,1488908160,1488908220,1488908280,1488908340,1488908400,1488908460,1488908520,1488908580,1488908640,1488908700,1488908760,1488908820,1488908880,1488908940,1488909000,1488909060,1488909120,1488909180,1488909240,1488909300,1488909360,1488909420,1488909480,1488909540,1488909600,1488909660,1488909720,1488909780,1488909840,1488909900,1488909960,1488910020,1488910080,1488910140,1488910200,1488910260,1488910320,1488910380,1488910440,1488910500,1488910560,1488910620,1488910680,1488910740,1488910800,1488910860,1488910920,1488910980,1488911040,1488911100,1488911160,1488911220,1488911280,1488911340,1488911400,1488911460,1488911520,1488911580,1488911640,1488911700,1488911760,1488911820,1488911880,1488911940,1488912000,1488912060,1488912120,1488912180,1488912240,1488912300,1488912360,1488912420,1488912480,1488912540,1488912600,1488912660,1488912720,1488912780,1488912840,1488912900,1488912960,1488913020,1488913080,1488913140,1488913200,1488913260,1488913320,1488913380,1488913440,1488913500,1488913560,1488913620,1488913680,1488913740,1488913800,1488913860,1488913920,1488913980,1488914040,1488914100,1488914160,1488914220,1488914280,1488914340,1488914400,1488914460,1488914520,1488914580,1488914640,1488914700,1488914760,1488914820,1488914880,1488914940,1488915000,1488915060,1488915120,1488915180,1488915240,1488915300,1488915360,1488915420,1488915480,1488915540,1488915600,1488915660,1488915720,1488915780,1488915840,1488915900,1488915960,1488916020,1488916080,1488916140,1488916200,1488916260,1488916320,1488916380,1488916440,1488916500,1488916560,1488916620,1488916680,1488916740,1488916800,1488916860,1488916920,1488916980,1488917040,1488917100,1488917160,1488917220,1488917280,1488917340,1488917400,1488917460,1488917520,1488917580,1488917640,1488917700,1488917760,1488917820,1488917880,1488917940,1488918000,1488918060,1488918120,1488918180,1488918240,1488918300,1488918360,1488918420,1488918480,1488918540,1488918600,1488918660,1488918720,1488918780,1488918840,1488918900,1488918960,1488919020,1488919080,1488919140,1488919200,1488919260,1488919320,1488919380,1488919440,1488919500,1488919560,1488919620,1488919680,1488919740,1488919800,1488919860,1488919920,1488919980,1488920040,1488920100,1488920160,1488920220,1488920280,1488920340,1488920400,1488920460,1488920520,1488920580,1488920640,1488920700,1488920760,1488920820,1488920880,1488920940,1488921000,1488921060,1488921120,1488921180,1488921240,1488921300,1488921360,1488921420,1488921480,1488921540,1488921600,1488921660,1488921720,1488921780,1488921840,1488921900,1488921960,1488922020,1488922080,1488922140,1488922200,1488922260,1488922320,1488922380,1488922440,1488922500,1488922560,1488922620,1488922680,1488922740,1488922800,1488922860,1488922920,1488922980,1488923040,1488923100,1488923160,1488923220,1488923280,1488923340,1488923400,1488923460,1488923520,1488923580,1488923640,1488923700,1488923760,1488923820,1488923880,1488923940,1488924000,1488924060,1488924120,1488924180,1488924240,1488924300,1488924360,1488924420,1488924480,1488924540,1488924600,1488924660,1488924720,1488924780,1488924840,1488924900,1488924960,1488925020,1488925080,1488925140,1488925200,1488925260,1488925320,1488925380,1488925440,1488925500,1488925560,1488925620,1488925680,1488925740,1488925800,1488925860,1488925920,1488925980,1488926040,1488926100,1488926160,1488926220,1488926280,1488926340,1488926400,1488926460,1488926520,1488926580,1488926640,1488926700,1488926760,1488926820,1488926880,1488926940,1488927000,1488927060,1488927120,1488927180,1488927240,1488927300,1488927360,1488927420,1488927480,1488927540,1488927600,1488927660,1488927720,1488927780,1488927840,1488927900,1488927960,1488928020,1488928080,1488928140,1488928200,1488928260,1488928320,1488928380,1488928440,1488928500,1488928560,1488928620,1488928680,1488928740,1488928800,1488928860,1488928920,1488928980,1488929040,1488929100,1488929160,1488929220,1488929280,1488929340,1488929400,1488929460,1488929520,1488929580,1488929640,1488929700,1488929760,1488929820,1488929880,1488929940,1488930000,1488930060,1488930120,1488930180,1488930240,1488930300,1488930360,1488930420,1488930480,1488930540,1488930600,1488930660,1488930720,1488930780,1488930840,1488930900,1488930960,1488931020,1488931080,1488931140,1488931200,1488931260,1488931320,1488931380,1488931440,1488931500,1488931560,1488931620,1488931680,1488931740,1488931800,1488931860,1488931920,1488931980,1488932040,1488932100,1488932160,1488932220,1488932280,1488932340,1488932400,1488932460,1488932520,1488932580,1488932640,1488932700,1488932760,1488932820,1488932880,1488932940,1488933000,1488933060,1488933120,1488933180,1488933240,1488933300,1488933360,1488933420,1488933480,1488933540,1488933600,1488933660,1488933720,1488933780,1488933840,1488933900,1488933960,1488934020,1488934080,1488934140,1488934200,1488934260,1488934320,1488934380,1488934440,1488934500,1488934560,1488934620,1488934680,1488934740,1488934800,1488934860,1488934920,1488934980,1488935040,1488935100,1488935160,1488935220,1488935280,1488935340,1488935400,1488935460,1488935520,1488935580,1488935640,1488935700,1488935760,1488935820,1488935880,1488935940,1488936000,1488936060,1488936120,1488936180,1488936240,1488936300,1488936360,1488936420,1488936480,1488936540,1488936600,1488936660,1488936720,1488936780,1488936840,1488936900,1488936960,1488937020,1488937080,1488937140,1488937200,1488937260,1488937320,1488937380,1488937440,1488937500,1488937560,1488937620,1488937680,1488937740,1488937800,1488937860,1488937920,1488937980,1488938040,1488938100,1488938160,1488938220,1488938280,1488938340,1488938400,1488938460,1488938520,1488938580,1488938640,1488938700,1488938760,1488938820,1488938880,1488938940,1488939000,1488939060,1488939120,1488939180,1488939240,1488939300,1488939360,1488939420,1488939480,1488939540,1488939600,1488939660,1488939720,1488939780,1488939840,1488939900,1488939960,1488940020,1488940080,1488940140,1488940200,1488940260,1488940320,1488940380,1488940440,1488940500,1488940560,1488940620,1488940680,1488940740,1488940800,1488940860,1488940920,1488940980,1488941040,1488941100,1488941160,1488941220,1488941280,1488941340,1488941400,1488941460,1488941520,1488941580,1488941640,1488941700,1488941760,1488941820,1488941880,1488941940,1488942000,1488942060,1488942120,1488942180,1488942240,1488942300,1488942360,1488942420,1488942480,1488942540,1488942600,1488942660,1488942720,1488942780,1488942840,1488942900,1488942960,1488943020,1488943080,1488943140,1488943200,1488943260,1488943320,1488943380,1488943440,1488943500,1488943560,1488943620,1488943680,1488943740,1488943800,1488943860,1488943920,1488943980,1488944040,1488944100,1488944160,1488944220,1488944280,1488944340,1488944400,1488944460,1488944520,1488944580,1488944640,1488944700,1488944760,1488944820,1488944880,1488944940,1488945000,1488945060,1488945120,1488945180,1488945240,1488945300,1488945360,1488945420,1488945480,1488945540,1488945600,1488945660,1488945720,1488945780,1488945840,1488945900,1488945960,1488946020,1488946080,1488946140,1488946200,1488946260,1488946320,1488946380,1488946440,1488946500,1488946560,1488946620,1488946680,1488946740,1488946800,1488946860,1488946920,1488946980,1488947040,1488947100,1488947160,1488947220,1488947280,1488947340,1488947400,1488947460,1488947520,1488947580,1488947640,1488947700,1488947760,1488947820,1488947880,1488947940,1488948000,1488948060,1488948120,1488948180,1488948240,1488948300,1488948360,1488948420,1488948480,1488948540,1488948600,1488948660,1488948720,1488948780,1488948840,1488948900,1488948960,1488949020,1488949080,1488949140,1488949200,1488949260,1488949320,1488949380,1488949440,1488949500,1488949560,1488949620,1488949680,1488949740,1488949800,1488949860,1488949920,1488949980,1488950040,1488950100,1488950160,1488950220,1488950280,1488950340,1488950400,1488950460,1488950520,1488950580,1488950640,1488950700,1488950760,1488950820,1488950880,1488950940,1488951000,1488951060,1488951120,1488951180,1488951240,1488951300,1488951360,1488951420,1488951480,1488951540,1488951600,1488951660,1488951720,1488951780,1488951840,1488951900,1488951960,1488952020,1488952080,1488952140,1488952200,1488952260,1488952320,1488952380,1488952440,1488952500,1488952560,1488952620,1488952680,1488952740,1488952800,1488952860,1488952920,1488952980,1488953040,1488953100,1488953160,1488953220,1488953280,1488953340,1488953400,1488953460,1488953520,1488953580,1488953640,1488953700,1488953760,1488953820,1488953880,1488953940,1488954000,1488954060,1488954120,1488954180,1488954240,1488954300,1488954360,1488954420,1488954480,1488954540,1488954600,1488954660,1488954720,1488954780,1488954840,1488954900,1488954960,1488955020,1488955080,1488955140,1488955200,1488955260,1488955320,1488955380,1488955440,1488955500,1488955560,1488955620,1488955680,1488955740,1488955800,1488955860,1488955920,1488955980,1488956040,1488956100,1488956160,1488956220,1488956280,1488956340,1488956400,1488956460,1488956520,1488956580,1488956640,1488956700,1488956760,1488956820,1488956880,1488956940,1488957000,1488957060,1488957120,1488957180,1488957240,1488957300,1488957360,1488957420,1488957480,1488957540,1488957600,1488957660,1488957720,1488957780,1488957840,1488957900,1488958020,1488958080,1488958140,1488958200,1488958260,1488958320,1488958380,1488958440,1488958500,1488958560,1488958620,1488958680,1488958740,1488958800,1488958860,1488958920,1488958980,1488959040,1488959100,1488959160,1488959220,1488959280,1488959340,1488959400,1488959460,1488959520,1488959580,1488959640,1488959700,1488959760,1488959820,1488959880,1488959940,1488960000,1488960060,1488960120,1488960180,1488960240,1488960300,1488960360,1488960420,1488960480,1488960540,1488960600,1488960660,1488960720,1488960780,1488960840,1488960900,1488960960,1488961020,1488961080,1488961140,1488961200,1488961260,1488961320,1488961380,1488961440,1488961500,1488961560,1488961620,1488961680,1488961740,1488961800,1488961860,1488961920,1488961980,1488962040,1488962100,1488962160,1488962220,1488962280,1488962340,1488962400,1488962460,1488962520,1488962580,1488962640,1488962700,1488962760,1488962820,1488962880,1488962940,1488963000,1488963060,1488963120,1488963180,1488963240,1488963300,1488963360,1488963420,1488963480,1488963540,1488963600,1488963660,1488963720,1488963780,1488963840,1488963900,1488963960,1488964020,1488964080,1488964140,1488964200,1488964260,1488964320,1488964380,1488964440,1488964500,1488964560,1488964620,1488964680,1488964740,1488964800,1488964860,1488964920,1488964980,1488965040,1488965100,1488965160,1488965220,1488965280,1488965340,1488965400,1488965460,1488965520,1488965580,1488965640,1488965700,1488965760,1488965820,1488965880,1488965940,1488966000,1488966060,1488966120,1488966180,1488966240,1488966300,1488966360,1488966420,1488966480,1488966540,1488966600,1488966660,1488966720,1488966780,1488966840,1488966900,1488966960,1488967020,1488967080,1488967140,1488967200,1488967260,1488967320,1488967380,1488967440,1488967500,1488967560,1488967620,1488967680,1488967740,1488967800,1488967860,1488967920,1488967980,1488968040,1488968100,1488968160,1488968220,1488968280,1488968340,1488968400,1488968460,1488968520,1488968580,1488968640,1488968700,1488968760,1488968820,1488968880,1488968940,1488969000,1488969060,1488969120,1488969180,1488969240,1488969300,1488969360,1488969420,1488969480,1488969540,1488969600,1488969660,1488969720,1488969780,1488969840,1488969900,1488969960,1488970020,1488970080,1488970200,1488970260,1488970320,1488970380,1488970440,1488970500,1488970560,1488970620,1488970680,1488970740,1488970800,1488970860,1488970920,1488970980,1488971040,1488971100,1488971160,1488971220,1488971280,1488971340,1488971400,1488971460,1488971520,1488971580,1488971640,1488971700,1488971760,1488971820,1488971880,1488971940,1488972000,1488972060,1488972120,1488972180,1488972240,1488972300,1488972360,1488972420,1488972480,1488972540,1488972600,1488972660,1488972720,1488972780,1488972840,1488972900,1488972960,1488973020,1488973080,1488973140,1488973200,1488973260,1488973320,1488973380,1488973440,1488973500,1488973560,1488973620,1488973680,1488973740,1488973800,1488973860,1488973920,1488973980,1488974040,1488974100,1488974160,1488974220,1488974280,1488974340,1488974400,1488974460,1488974520,1488974580,1488974640,1488974700,1488974760,1488974820,1488974880,1488974940,1488975000,1488975060,1488975120,1488975180,1488975240,1488975300,1488975360,1488975420,1488975480,1488975540,1488975600,1488975660,1488975720,1488975780,1488975840,1488975900,1488975960,1488976020,1488976080,1488976140,1488976200,1488976260,1488976320,1488976380,1488976440,1488976500,1488976560,1488976620,1488976680,1488976740,1488976800,1488976860,1488976920,1488976980,1488977040,1488977100,1488977160,1488977220,1488977280,1488977340,1488977400,1488977460,1488977520,1488977580,1488977640,1488977700,1488977760,1488977820,1488977880,1488977940,1488978000,1488978060,1488978120,1488978180,1488978240,1488978300,1488978360,1488978420,1488978480,1488978540,1488978600,1488978660,1488978720,1488978780,1488978840,1488978900,1488978960,1488979020,1488979080,1488979140,1488979200,1488979260,1488979320,1488979380,1488979440,1488979500,1488979560,1488979620,1488979680,1488979740,1488979800,1488979860,1488979920,1488979980,1488980040,1488980100,1488980160,1488980220,1488980280,1488980340,1488980400,1488980460,1488980520,1488980580,1488980640,1488980700,1488980760,1488980820,1488980880,1488980940,1488981000,1488981060,1488981120,1488981180,1488981240,1488981300,1488981360,1488981420,1488981480,1488981540,1488981600,1488981660,1488981720,1488981780,1488981840,1488981900,1488981960,1488982020,1488982080,1488982140,1488982200,1488982260,1488982320,1488982380,1488982440,1488982500,1488982560,1488982620,1488982680,1488982740,1488982800,1488982860,1488982920,1488982980,1488983040,1488983100,1488983160,1488983220,1488983280,1488983340,1488983400,1488983460,1488983520,1488983580,1488983640,1488983700,1488983760,1488983820,1488983880,1488983940,1488984000,1488984060,1488984120,1488984180,1488984240,1488984300,1488984360,1488984420,1488984480,1488984540,1488984600,1488984660,1488984720,1488984780,1488984840,1488984900,1488984960,1488985020,1488985080,1488985140,1488985200,1488985260,1488985320,1488985380,1488985440,1488985500,1488985560,1488985620,1488985680,1488985740,1488985800,1488985860,1488985920,1488985980,1488986040,1488986100,1488986160,1488986220,1488986280,1488986340,1488986400,1488986460,1488986520,1488986580,1488986640,1488986700,1488986760,1488986820,1488986880,1488986940,1488987000,1488987060,1488987120,1488987180,1488987240,1488987300,1488987360,1488987420,1488987480,1488987540,1488987600,1488987660,1488987720,1488987780,1488987840,1488987900,1488987960,1488988020,1488988080,1488988140,1488988200,1488988260,1488988320,1488988380,1488988440,1488988500,1488988560,1488988620,1488988680,1488988740,1488988800],&quot;name&quot;:&quot;datacenter&quot;},{&quot;values&quot;:[39.518,39.47,41.085,37.741,37.502,30.947,39.44,35.81,38.082,28.166,21.215,30.714,10.06,26.335,12.405,13.099,12.303,10.15,8.87,5.921,8.858,8.589,6.262,5.933,11.58,5.736,5.969,5.832,15.312,7.56,10.473,11.412,14.492,15.318,13.075,13.039,13.248,13.051,11.616,9.408,6.986,6.49,6.765,6.645,5.856,6.603,6.484,12.997,10.216,15.132,10.204,9.755,9.462,11.992,11.089,8.063,15.132,7.656,12.064,31.007,31.802,32.55,36.306,37.263,35.612,32.879,36.324,37.275,34.685,33.202,37.287,36.288,20.055,34.159,25.594,17.262,13.667,14.552,13.547,13.571,13.362,12.872,11.909,21.233,11.4,22.723,11.645,17.25,17.555,16.598,17.675,10.144,9.941,15.551,12.854,15.772,10.318,7.734,7.8,7.859,6.412,5.796,6.633,12.794,6.448,6.466,5.551,6.669,7.704,6.531,8.768,8.553,7.369,15.109,11.807,8.41,12.016,7.859,6.43,22.579,26.874,16.598,8.828,8.469,7.985,10.09,8.673,6.454,10.527,8.595,10.982,8.942,9.253,11.418,13.745,19.666,24.32,28.477,28.471,10.772,9.684,10.647,11.257,10.76,9.163,7.752,8.003,8.122,32.46,22.513,25.51,20.456,21.12,24.69,11.293,11.98,28.178,22.346,9.839,17.136,16.012,16.67,16.861,13.757,17.698,20.665,19.176,17.962,26.006,11.801,10.976,14.768,25.486,28.973,11.663,11.299,10.204,8.846,8.362,31.132,22.029,18.171,11.837,16.915,15.467,12.124,12.86,13.482,13.23,14.128,12.567,14.546,27.508,16.466,35.839,23.201,16.072,16.299,22.322,20.779,18.799,15.222,20.157,16.03,9.654,9.396,7.04,17.98,12.746,8.517,7.973,8.727,10.025,9.337,10.437,9.875,9.355,10.551,7.034,7.68,7.058,7.052,7.8,8.326,9.773,7.231,6.065,7.243,12.387,13.488,11.257,10.013,9.516,12.979,7.554,9.947,8.344,5.981,7.572,33.315,21.873,21.682,15.449,8.93,13.117,20.54,7.004,20.611,12.471,8.182,9.827,11.083,13.23,14.804,11.418,11.568,11.017,19.463,21.748,11.053,9.217,13.757,12.046,14.57,10.132,8.703,12.363,10.982,9.361,8.326,8.882,8.326,21.347,19.804,18.817,19.888,16.371,13.506,19.122,15.653,14.911,10.766,9.068,9.175,8.607,8.804,9.69,9.594,9.887,13.805,11.933,15.653,12.62,22.101,17.597,11.077,17.609,13.583,11.729,10.473,32.765,28.477,26.91,17.776,25.606,24.296,27.4,13.362,15.378,18.374,20.773,15.408,28.453,20.246,15.216,11.992,8.475,16.341,26.228,21.066,14.08,10.952,10.198,9.163,22.298,17.196,14.05,11.382,10.264,14.038,10.222,15.037,14.235,10.162,16.556,12.232,13.362,12.692,13.057,8.93,7.626,9.755,9.947,33.477,20.049,12.004,12.734,19.044,25.324,24.738,13.033,11.197,11.956,36.294,30.403,17.369,12.656,10.892,25.342,29.224,48.442,40.654,21.425,12.465,20.695,34.559,35.875,26.598,24.643,18.129,21.144,25.97,35.528,31.078,20.151,39.201,35.959,32.305,20.51,14.044,30.57,10.066,34.069,22.878,7.955,15.396,18.057,14.528,17.573,7.853,20.24,31.575,20.922,21.407,24.9,21.054,25.253,30.749,18.769,23.901,11.269,19.583,15.868,12.86,16.257,11.221,13.35,14.475,8.966,16.185,10.688,20.223,25.265,12.124,11.155,8.78,8.272,8.266,9.57,10.724,37.556,40.912,39.273,30.935,14.684,12.913,16.251,21.102,24.702,28.178,16.454,17.19,12.507,12.65,14.929,30.474,11.915,8.248,20.988,18.35,17.507,21.975,19.774,11.299,12.477,13.404,9.911,16.574,24.027,13.392,43.328,17.136,20.689,11.693,7.512,13.918,10.844,10.401,7.895,5.646,9.295,8.757,12.148,7.171,6.723,7.471,7.859,9.373,8.242,9.373,8.966,17.585,11.161,9.749,12.004,21.473,14.78,11.622,11.598,31.252,34.613,37.102,39.261,36.677,36.808,37.113,17.776,11.789,12.279,28.764,25.659,15.061,11.622,9.367,11.31,15.617,21.897,34.542,16.341,10.987,12.106,10.76,13.972,10.934,10.91,7.895,7.363,12.046,25.001,11.681,26.066,17.956,22.89,24.888,23.554,23.757,19.941,13.147,13.912,12.854,13.338,13.003,11.275,9.211,8.751,16.514,10.342,8.039,18.859,20.211,21.562,13.655,11.909,24.607,10.844,14.702,13.93,12.925,9.977,33.477,35.451,42.532,34.882,34.003,34.936,35.385,37.52,34.248,34.512,35.54,35.534,37.221,40.822,39.895,42.024,39.255,43.101,39.961,34.494,38.118,32.651,34.841,36.354,38.154,31.766,34.446,38.83,37.06,32.741,32.789,35.78,36.121,30.367,40.343,33.058,33.429,40.834,38.794,35.546,25.492,21.957,23.285,17.513,16.365,20.211,20.169,18.386,15.192,15.198,14.768,15.444,14.457,15.312,14.331,15.222,18.548,19.702,14.421,15.055,36.21,36.258,32.406,34.356,36.007,33.579,32.508,32.968,32.909,36.097,34.966,34.386,33.285,31.533,33.447,35.983,30.163,29.158,35.54,21.383,21.168,34.613,19.636,33.728,20.246,15.665,17.692,16.06,32.843,15.868,13.888,25.025,20.043,25.582,25.683,23.727,24.158,18.117,15.814,20.545,17.352,15.055,15.707,15.94,15.569,15.689,16.083,15.15,18.566,16.538,15.862,16.395,17.489,18.685,20.037,21.221,20.157,21.233,17.011,18.895,35.816,37.58,38.986,39.584,40.433,33.764,33.142,34.32,33.483,35.176,35.57,37.64,36.982,35.17,35.439,38.172,37.137,37.072,34.811,27.831,21.999,17.369,17.411,16.335,35.385,31.013,15.563,26.0,17.22,16.951,16.765,11.693,11.167,16.095,16.508,12.86,17.896,11.639,9.468,9.307,9.277,9.654,10.264,11.299,10.862,10.234,10.15,8.762,9.618,10.521,9.127,10.647,10.958,18.165,13.996,10.982,9.923,11.035,9.684,12.602,35.134,35.319,38.106,36.246,33.543,31.958,31.982,31.988,33.256,34.093,35.923,35.355,35.534,34.195,34.027,37.317,33.549,23.219,21.748,21.114,14.205,33.441,18.847,17.704,27.669,9.684,13.47,22.675,16.185,13.129,8.876,10.395,10.204,13.284,12.674,13.141,21.239,28.363,17.357,26.76,21.197,33.543,12.273,14.421,16.281,11.927,16.741,21.419,27.681,29.242,17.92,15.826,14.983,23.171,20.671,14.217,14.229,16.873,15.085,12.148,37.807,41.725,42.197,39.189,38.465,37.753,34.195,32.819,32.741,38.256,37.562,39.01,36.539,21.754,19.224,16.951,17.058,41.276,38.986,31.772,18.829,36.928,14.851,12.148,14.05,11.998,20.175,18.554,40.846,36.276,26.455,16.508,32.962,48.603,38.818,49.997,37.915,27.807,24.918,12.106,11.346,11.005,34.5,34.225,34.41,34.452,34.691,35.463,33.555,35.397,33.525,36.485,35.499,34.165,36.928,37.765,35.839,30.893,25.528,20.701,38.208,40.14,43.232,41.629,40.08,37.514,37.275,35.307,34.619,36.82,36.156,37.538,34.075,23.548,28.566,21.538,16.125,14.17,31.054,36.599,10.054,28.967,28.584,29.499,29.763,30.056,28.967,18.949,29.428,16.311,8.451,9.271,17.298,14.69,13.141,32.532,17.842,12.369,12.1,22.651,17.782,14.164,14.008,15.719,19.953,14.152,10.216,17.393,24.254,18.847,17.304,12.543,14.265,16.095,16.251,19.594,17.148,15.391,14.595,36.501,36.178,49.976,50.0,49.94,49.964,50.0,50.0,49.982,50.0,49.898,50.0,49.994,50.0,49.994,47.616,45.67,46.497,44.275,44.544,29.177,26.213,29.554,26.848,35.465,26.488,23.901,42.748,35.226,39.322,23.32,21.727,15.954,34.351,18.439,35.639,33.303,30.429,15.158,13.235,22.47,15.583,13.972,12.69,17.475,18.254,11.594,10.564,14.857,18.482,21.024,18.949,18.069,18.027,16.227,19.289,19.152,14.809,13.823,14.78,15.784,16.759,33.68,35.708,38.405,36.832,36.001,40.337,40.343,38.011,38.824,38.136,37.419,35.69,35.69,35.588,35.164,36.575,37.765,37.413,36.025,38.244,35.995,36.892,32.855,32.939,22.065,15.461,20.635,19.977,19.505,37.155,33.854,27.31,35.51,32.323,13.745,13.392,13.26,18.009,22.507,16.598,11.496,24.003,10.802,16.921,15.994,15.928,16.508,10.778,12.716,13.069,16.149,18.679,17.627,17.07,16.825,16.64,13.26,15.539,16.718,32.968,30.863,34.984,35.008,35.319,35.881,35.726,32.592,32.681,34.069,33.842,32.514,33.638,33.884,36.288,32.957,29.571,27.992,20.223,18.949,14.403,12.716,12.513,12.321,16.574,21.927,10.042,27.364,29.786,28.943,10.993,9.444,9.313,9.48,10.94,11.34,11.974,16.383,15.234,10.485,10.096,10.515,10.515,11.729,11.508,11.753,11.759,11.568,12.208,20.551,16.969,14.744,13.948,15.168,17.226,16.7,14.582,12.74,13.087,15.186,30.839,30.821,35.881,36.013,36.007,36.019,32.574,32.089,33.919,34.374,33.961,35.056,34.96,33.973,32.006,32.089,33.22,32.58,34.709,34.643,34.679,29.326,32.364,33.112,31.802,24.206,11.412,26.431,26.054,7.985,9.229,13.93,15.444,24.074,10.886,12.662,14.104,17.118,22.465,20.199,17.728,15.408,14.128,11.053,13.87,8.906,8.547,9.109,10.527,13.015,9.887,16.203,13.015,10.025,14.869,13.123,10.162,9.259,10.377,8.972,29.344,31.611,35.618,35.493,37.526,34.32,32.149,33.28,34.075,34.069,34.057,35.989,34.536,35.469,29.93,26.772,23.243,21.371,14.833,11.687,10.001,9.121,22.214,11.101,31.958,25.594,13.667,13.793,9.564,8.475,7.943,7.608,7.327,9.265,12.919,13.009,10.886,9.319,9.205,8.942,7.273,7.405,7.267,8.117,8.021,8.027,7.788,8.78,8.493,8.96,8.99,10.198,9.361,12.973,12.674,10.79,8.356,9.355,11.968,16.819,32.909,37.395,37.436,36.623,40.583,34.105,34.033,35.02,33.597,34.721,37.628,38.298,36.982,33.788,31.246,24.039,18.649,15.575,26.945,12.351,11.693,9.935,18.267,13.111,9.869,32.855,9.097,8.344,9.851,8.984,12.136,8.41,8.2,13.625,17.447,17.746,17.776,18.123,17.076,13.242,10.431,10.431,10.348,9.139,9.941,9.217,14.044,16.197,13.29,12.094,11.741,10.76,10.635,13.524,14.146,13.44,11.035,14.175,11.849,12.692,35.636,35.702,39.297,36.916,40.313,35.516,35.014,35.403,33.166,29.619,24.876,23.704,12.154,28.303,14.786,18.781,35.804,14.481,35.54,26.437,23.022,15.461,14.008,20.378,13.888,10.682,15.617,14.373,8.505,12.626,8.457,8.619,8.475,10.557,9.827,10.389,10.443,10.473,10.419,8.392,8.523,8.697,9.462,10.796,9.69,9.385,9.432,7.207,10.898,11.484,10.599,11.741,11.759,11.275,14.271,9.438,10.832,10.33,8.487,11.179,33.118,33.866,35.546,41.025,38.836,39.327,34.446,33.004,25.522,18.811,11.125,11.986,9.564,12.543,12.04,24.523,23.56,11.346,12.692,7.776,6.783,7.213,13.739,8.703,9.45,7.776,7.195,6.627,8.027,23.602,6.837,18.279,12.59,18.919,16.46,16.807,16.574,11.263,8.571,13.362,11.514,8.266,7.835,8.344,7.656,7.668,9.845,9.319,7.692,8.051,6.765,10.371,8.338,11.586,12.519,12.351,11.454,11.466,10.228,9.642,33.285,35.068,36.276,35.977,34.35,34.865,32.903,31.593,34.165,16.072,11.819,17.8,12.345,35.188,23.811,12.016,11.801,16.191,16.089,13.912,8.069,8.17,12.854,11.251,10.132,8.559,8.32,7.77,7.829,8.822,7.955,7.919,7.656,9.905,8.882,9.528,9.588,9.66,9.564,7.506,7.183,7.333,7.668,8.368,8.242,8.236,8.111,7.303,7.632,7.943,10.916,11.645,10.282,11.777,14.475,10.503,11.723,15.79,12.429,11.161,34.679,34.153,34.745,37.383,36.252,37.113,29.96,29.834,26.61,20.007,9.881,12.752,12.1,12.483,19.989,27.418,25.641,13.29,14.959,15.473,11.622,11.693,12.884,19.642,15.312,14.606,10.718,10.108,9.008,9.504,14.965,15.33,11.903,17.704,14.678,15.42,13.847,15.103,15.18,14.51,11.783,9.66,10.545,10.186,10.048,11.245,10.102,18.96,11.95,10.641,22.765,11.956,11.956,21.191,18.578,13.607,13.847,11.867,16.0,13.093,33.309,37.395,36.432,35.164,39.626,37.203,38.1,37.072,38.884,30.552,25.671,10.21,22.047,22.848,23.494,21.078,18.494,16.753,17.453,24.128,26.114,26.449,21.939,19.977,19.774,16.257,14.062,15.569,14.235,14.564,13.739,20.557,19.445,18.805,19.618,16.592,19.541,17.381,13.727,12.59,9.911,8.374,7.865,9.331,8.93,8.972,8.966,7.859,9.367,10.204,10.814,10.838,9.582,10.886,12.435,12.83,10.892,9.576,9.773,8.954,31.569,32.765,35.875,35.301,29.906,31.76,26.437,20.139,11.436,20.097,13.488,20.707,27.227,22.848,11.843,24.015,23.985,15.384,19.816,15.258,21.006,16.161,14.319,12.429,12.77,12.363,19.553,10.521,10.108,21.754,9.02,12.321,9.373,18.47,13.207,10.437,12.435,10.682,17.292,19.188,17.597,22.483,19.816,14.247,21.257,22.22,9.731,17.561,11.885,19.242,11.305,16.006,29.798,14.857,14.217,27.035,26.293,11.095,10.993,13.171,28.692,35.367,35.403,35.505,31.114,29.511,17.262,18.153,11.376,13.565,14.953,14.792,11.717,24.021,18.027,14.158,27.866,32.071,12.082,11.388,14.684,32.131,17.98,18.135,28.919,11.777,17.399,15.826,15.982,13.799,11.346,15.156,15.653,13.218,11.514,10.73,17.352,10.389,11.209,12.279,12.046,12.297,10.114,10.772,10.156,10.282,8.792,10.91,9.163,10.653,12.453,8.858,9.719,10.844,10.928,14.08,15.617,11.424,13.278,10.688,27.651,32.131,30.863,27.185,14.475,20.707,28.985,22.412,16.131,17.023,14.875,14.528,11.705,10.013,10.461,10.467,13.512,19.236,22.005,11.005,12.148,16.078,12.309,12.674,14.086,8.882,12.83,12.513,11.053,10.449,9.558,13.26,12.83,31.186,14.768,12.931,20.462,22.806,19.277,18.111,14.295,10.467,13.876,10.33,12.872,11.257,14.373,18.727,21.796,15.234,15.527,11.43,13.284,13.619,14.134,15.862,13.763,17.136,14.038,37.568,40.403,36.121,32.657,14.355,17.357,19.451,28.13,32.053,15.408,13.631,14.983,21.323,31.198,22.615,14.498,24.176,11.167,18.159,17.363,21.09,15.27,14.893,14.678,18.554,15.15,15.916,11.747,10.898,12.094,9.989,9.833,13.189,9.779,11.771,8.978,9.833,9.893,9.69,12.483,12.674,11.095,14.977,10.808,28.231,14.17,13.093,28.303,30.468,20.575,21.742,14.857,9.588,10.365,39.051,24.744,16.789,15.605,26.144,34.404,49.716,39.47,28.818,38.812,40.912,31.593,17.758,19.164,13.266,12.339,30.056,37.161,30.606,27.143,27.364,16.072,32.675,14.995,36.372,39.464,27.555,25.336,17.8,19.541,22.304,24.607,19.786,10.551,16.323,16.783,7.955,15.455,34.093,15.007,34.356,24.9,22.729,26.604,19.618,23.59,21.73,21.544,19.23,21.592,13.428,12.722,10.623,18.685,13.966,10.647,14.074,12.273,15.958,14.893,16.61,16.921,13.057,13.948,16.867,15.3,23.446,35.337,35.516,34.296,15.527,16.508,9.181,24.924,10.826,8.978,12.764,11.454,22.107,17.657,27.442,19.84,20.593,16.783,19.385,23.919,13.936,26.27,6.531,16.478,12.154,16.101,13.386,19.337,14.355,9.223,14.774,14.349,29.565,18.153,16.616,22.95,13.398,23.823,13.32,13.739,12.728,11.484,15.27,12.907,14.923,15.994,12.561,9.468,14.546,13.404,13.296,11.508,12.782,12.854,11.58,12.226,13.027,16.257,13.553,34.482,39.967,39.763,32.448,35.881,30.379,30.115,12.052,37.365,32.412,13.464,15.766,14.792,9.666,13.858,15.473,16.664,13.625,26.425,22.047,15.444,8.463,13.147,9.462,11.687,8.673,8.326,8.35,8.164,11.215,10.987,11.616,32.861,13.679,17.405,13.147,25.073,22.172,13.039,19.008,18.362,20.701,16.723,14.128,15.192,10.258,24.505,14.696,14.026,15.677,19.935,13.745,12.1,13.165,23.111,11.944,16.143,23.153,13.811,10.67,37.113,40.343,38.776,39.129,40.14,38.567,33.399,34.081,31.557,40.301,38.842,38.226,40.918,39.739,38.053,45.158,38.053,35.403,35.355,39.141,37.131,38.053,39.626,38.1,34.643,35.02,36.479,36.707,33.226,37.616,35.983,32.927,35.164,34.177,36.24,34.536,38.752,37.855,34.356,36.288,35.708,26.24,33.854,33.483,22.729,34.039,27.143,31.497,22.759,21.126,18.972,32.819,28.542,23.464,26.389,33.77,23.159,37.969,25.217,25.964,37.879,34.9,37.167,37.161,37.275,36.007,35.833,33.088,33.333,35.684,34.422,36.641,35.744,33.19,35.995,36.868,35.349,32.939,32.992,31.671,27.472,29.607,21.772,31.258,32.173,21.359,31.946,15.222,19.708,18.907,31.497,18.847,22.047,15.635,21.299,19.917,25.085,23.751,27.681,27.932,17.328,15.569,20.629,23.375,17.316,15.449,17.064,16.849,19.78,18.279,21.957,17.812,19.451,21.736,20.384,27.837,22.938,20.27,22.202,36.641,34.9,38.423,40.906,43.4,38.352,32.651,31.348,34.29,41.276,31.186,19.571,24.338,20.528,31.366,32.125,28.722,19.194,21.461,17.651,20.557,20.51,22.029,21.688,17.082,20.791,21.754,16.981,15.246,14.804,14.714,14.283,12.824,12.393,14.875,14.241,14.08,11.771,11.693,11.466,9.199,9.815,9.773,9.929,32.628,10.623,9.947,15.156,9.582,11.843,10.228,11.113,10.467,13.787,15.695,20.103,15.994,16.676,17.98,11.705,37.843,38.98,39.213,38.07,40.319,35.128,33.148,33.268,33.614,36.109,38.968,34.954,36.707,37.813,34.129,25.097,22.681,33.022,29.446,32.974,23.488,25.025,34.565,11.831,11.598,11.592,21.957,31.348,15.138,32.747,23.781,25.958,25.432,26.102,27.956,18.943,15.515,14.51,24.14,17.196,12.782,32.52,21.479,8.792,8.481,8.416,8.368,12.082,12.65,12.19,9.355,10.611,10.216,12.208,12.202,12.417,10.904,7.782,10.025,10.772,31.001,32.962,37.436,36.15,37.514,35.331,34.039,34.685,34.811,37.55,37.305,37.454,34.075,34.254,32.968,33.184,33.501,32.855,24.84,18.673,15.635,14.175,17.531,30.307,22.836,10.144,8.804,8.14,10.545,17.836,7.668,31.306,24.619,14.977,10.443,8.266,8.583,8.338,8.158,14.325,10.007,7.219,6.406,6.884,6.86,7.088,7.417,8.033,8.481,8.32,9.163,7.919,8.619,11.155,13.123,11.143,9.05,10.048,11.484,9.636,33.65,35.355,33.937,36.934,35.738,36.928,34.183,31.85,32.729,34.009,32.897,36.695,35.887,34.972,31.455,31.389,31.766,31.288,31.318,31.234,20.348,25.713,31.976,16.305,17.956,9.145,13.811,22.256,31.856,31.371,27.849,28.243,24.637,19.427,15.438,16.67,26.844,25.007,10.533,8.768,11.723,29.966,23.261,18.464,20.653,23.542,22.968,20.749,26.216,33.112,19.965,20.659,14.66,15.946,20.019,18.386,21.61,17.31,18.536,21.329,34.416,37.012,35.481,34.625,34.865,38.704,43.86,35.654,34.464,36.216,33.902,37.107,39.709,32.861,37.424,37.317,36.737,32.819,35.259,33.698,25.988,28.435,22.148,24.308,23.321,20.205,16.49,26.975,25.701,28.166,18.841,24.9,25.396,14.265,20.438,23.769,17.692,27.591,23.943,17.202,22.908,17.854,16.263,24.236,25.241,13.547,12.746,34.906,24.218,18.111,16.46,14.75,34.871,31.766,23.297,19.517,29.314,27.238,25.211,23.662,36.641,33.638,36.761,35.995,40.289,43.507,42.532,38.148,38.746,40.72,35.499,36.318,41.175,38.86,35.666,41.468,40.325,39.452,42.808,42.245,39.356,27.149,17.974,25.731,26.628,38.794,35.104,30.983,38.543,40.164,17.005,32.053,29.517,39.243,23.913,27.137,20.402,21.568,21.604,35.744,18.691,19.427,25.468,14.63,11.741,23.931,19.876,22.938,39.883,23.846,35.954,36.529,34.188,32.619,19.145,18.827,32.78,35.152,35.361,40.284,38.678,40.437,41.214,43.846,43.158,37.111,36.226,33.816,36.567,38.463,37.937,35.783,36.501,34.36,35.353,35.694,37.033,34.33,36.298,36.734,36.513,37.56,26.447,22.847,24.504,36.98,35.987,28.846,29.85,27.416,39.545,32.996,30.969,34.773,19.791,17.799,15.831,20.437,33.301,17.62,18.122,13.732,17.291,21.328,20.347,15.622,19.797,13.714,14.767,13.068,14.713,10.921,11.483,11.621,11.136,14.988,11.854,17.225,20.957,28.732,35.789,35.622,36.806,38.212,41.011,41.621,40.939,39.964,36.711,35.754,36.794,33.343,33.995,36.92,34.205,40.915,39.354,35.526,34.545,17.033,36.549,41.794,49.312,48.224,40.891,36.555,32.41,36.944,38.505,33.989,38.816,39.306,38.917,39.019,37.703,39.187,39.133,37.123,32.793,33.134,33.272,33.212,32.41,31.28,36.651,24.354,22.709,18.445,17.602,22.691,20.048,12.249,14.234,12.925,12.004,18.146,37.691,33.583,37.135,34.958,38.367,37.051,34.528,34.522,33.295,40.831,34.426,35.628,39.683,36.92,35.09,36.513,37.392,36.477,35.712,36.758,36.926,31.316,40.897,36.968,37.524,46.962,49.994,49.994,49.994,49.994,40.688,50.0,50.0,50.0,46.764,41.794,49.988,48.02,43.206,21.728,15.311,24.605,15.167,21.22,19.928,16.591,18.882,14.222,14.175,18.583,16.459,39.205,35.215,37.518,38.319,36.854,38.301,30.586,13.415,14.743,39.45,38.559,39.833,37.243,40.67,36.758,33.684,34.438,37.536,37.291,37.327,34.36,35.0,35.819,35.73,32.518,33.457,40.472,40.036,31.226,25.484,39.958,30.072,31.86,28.146,18.349,14.761,34.139,23.236,33.487,14.737,8.917,13.589,16.92,16.926,18.134,16.92,36.86,35.766,37.069,37.183,33.774,32.56,33.116,33.714,32.422,35.263,34.139,35.221,33.481,34.043,36.047,33.75,28.553,18.846,20.449,16.13,14.324,11.699,39.528,38.146,39.366,41.226,49.492,49.641,46.28,38.72,38.032,31.549,27.596,31.776,45.766,47.297,37.524,26.627,15.885,34.073,26.848,16.489,41.292,23.403,24.049,25.562,25.287,20.311,21.094,23.505,23.283,30.67,39.827,33.66,18.062,32.548,48.481,38.714,24.294,16.352,16.346,13.475,11.435,12.392,11.555,11.788,16.453,35.7,35.807,23.708,16.244,19.294,13.301,12.53,38.224,35.921,15.586,17.422,16.585,43.624,40.132,40.197,50.0,50.0,49.91,50.0,41.071,46.776,35.807,38.391,33.642,50.0,40.867,22.063,21.621,19.468,16.926,23.911,36.74,15.233,16.005,31.023,32.022,31.824,32.638,23.511,35.987,29.007,42.368,29.839,21.1,16.776,37.972,31.543,32.159,31.89,36.011,23.654,18.589,35.084,22.578,22.608,15.275,13.164,10.251,10.55,12.434,8.965,12.996,13.798,17.081,18.762,12.889,17.231,14.199,14.569,13.218,14.276,13.654,38.571,40.096,40.371,38.092,39.51,36.417,37.62,35.443,28.852,28.092,18.66,14.372,17.004,14.312,11.507,16.543,20.09,14.934,36.423,34.187,31.788,34.426,13.678,13.487,13.367,16.794,16.711,18.152,12.213,14.719,12.793,14.067,12.207,16.854,14.258,16.98,14.653,11.944,11.089,12.59,14.809,9.988,15.371,10.873,10.873,10.754,10.849,11.806,14.097,14.45,16.525,13.307,12.554,15.353,17.925,16.453,13.648,16.005,9.892,11.8,38.565,38.08,36.268,37.01,36.083,35.622,29.175,33.971,28.391,9.868,19.354,13.427,12.452,26.681,34.055,19.414,13.086,19.45,19.994,19.623,13.032,21.848,30.634,20.365,13.236,17.841,23.87,20.921,11.621,12.273,14.743,12.315,14.599,14.408,16.86,18.618,15.449,15.664,15.299,14.922,10.496,9.922,10.807,16.453,10.861,16.95,10.467,15.825,13.672,21.938,9.575,12.392,20.939,12.255,14.725,14.037,14.127,15.61,13.774,13.87,33.63,35.622,43.224,34.898,35.144,36.453,35.311,36.914,37.793,37.512,38.469,20.754,19.713,22.823,17.093,17.584,16.884,17.572,16.998,15.616,15.12,15.12,19.713,36.651,38.589,30.987,18.87,19.348,22.267,22.135,24.934,27.865,15.036,18.355,17.261,19.51,16.609,19.414,17.5,14.629,19.3,16.926,15.508,10.957,14.085,12.177,9.623,17.859,17.362,12.769,10.365,13.828,12.656,12.147,12.685,12.177,10.221,11.525,10.478,10.173,30.813,32.422,36.28,33.894,27.44,24.025,15.742,22.339,10.939,27.033,22.656,19.815,23.852,27.404,29.163,14.665,12.781,16.334,21.304,15.203,18.218,19.665,14.175,18.481,25.568,16.752,16.944,12.632,13.427,10.969,7.841,11.22,14.737,15.431,16.878,21.651,16.627,19.258,18.786,21.089,27.53,16.992,22.578,15.365,36.047,21.429,28.343,24.994,16.603,25.102,13.804,32.255,24.528,25.197,28.026,14.193,16.543,16.866,13.768,9.3,10.173,40.598,38.433,37.291,35.275,35.156,30.921,31.543,31.274,22.225,20.951,19.815,16.579,21.136,29.42,18.176,25.514,14.916,24.318,12.398,16.4,15.383,13.726,18.134,19.48,26.597,15.449,26.1,27.309,19.91,19.306,15.903,13.852,17.548,21.226,13.738,17.667,16.986,13.6,9.946,13.044,13.864,10.586,16.573,23.714,16.346,17.153,15.024,12.225,13.158,17.267,11.083,10.275,14.886,17.141,10.078,15.084,13.278,10.156,35.7,18.75,14.731,18.702,35.508,34.605,16.788,15.0,11.974,17.051,35.15,29.426,26.226,10.951,13.894,11.094,12.673,15.807,27.841,16.214,11.489,24.45,10.245,12.667,18.242,16.304,21.722,21.788,17.727,17.757,14.342,19.575,14.605,14.007,21.411,27.273,20.927,20.203,21.531,15.975,12.339,9.294,10.622,10.401,12.333,13.379,21.477,12.416,15.999,16.639,9.868,11.31,19.635,14.492,19.085,16.286,13.888,16.986,13.331,12.279,37.488,32.608,27.841,32.362,23.361,37.805,18.439,20.138,26.286,19.737,19.892,19.061,17.195,26.148,24.91,12.781,12.889,14.533,20.179,20.592,21.525,20.472,16.489,22.356,20.736,16.746,21.19,15.245,15.161,14.145,16.627,19.51,13.421,12.907,16.13,17.823,17.171,20.957,14.516,11.627,16.166,15.628,10.813,10.167,19.689,10.831,11.549,34.151,20.329,16.154,27.386,32.356,25.532,10.144,12.249,12.315,10.425,23.858,22.745,17.309,34.001,37.159,49.946,32.171,41.124,30.126,28.798,42.823,31.992,33.612,46.597,36.304,47.243,26.394,28.9,15.455,34.001,14.51,23.762,16.112,23.152,11.938,15.652,13.947,16.154,12.344,20.945,18.068,22.051,17.984,23.044,21.824,22.231,38.403,35.927,25.706,40.221,29.061,25.167,29.462,34.294,24.288,27.65,15.789,17.033,13.068,11.962,12.805,13.511,13.451,22.931,21.053,13.475,16.334,17.536,16.417,10.772,12.488,26.764,13.624,35.132,41.16,46.669,33.947,22.685,12.159,11.609,16.268,32.853,33.738,30.365,21.699,16.531,24.42,28.391,17.344,25.072,12.016,20.843,17.398,21.328,12.972,31.585,15.15,13.032,23.122,13.122,14.737,15.879,15.664,37.614,19.264,28.11,15.024,13.176,17.978,21.22,16.77,15.191,12.787,17.823,13.26,17.165,16.274,16.675,8.876,14.671,16.549,21.842,23.535,21.256,18.786,21.364,19.617,16.083,11.89,9.844,13.242,11.806,35.592,37.213,35.622,38.463,40.556,36.669,33.23,26.788,14.462,19.27,17.937,29.904,13.2,14.234,17.518,15.132,13.457,15.389,24.39,15.096,16.8,15.233,21.585,15.927,23.367,15.377,15.855,13.84,13.804,18.571,18.947,16.98,9.677,21.166,14.994,23.529,24.3,18.953,23.612,25.006,19.605,20.849,18.977,13.337,14.994,12.913,15.748,13.152,12.488,17.584,12.368,11.406,13.923,11.495,9.737,24.031,23.523,10.766,14.934,14.378,36.256,38.337,43.804,40.64,41.178,40.957,36.83,34.103,35.329,43.242,42.889,39.886,36.932,37.793,37.889,32.548,27.159,35.317,23.726,34.127,39.635,40.066,41.591,39.468,42.99,40.461,39.689,35.293,41.621,26.579,36.489,34.868,36.944,23.212,21.758,25.245,27.554,32.685,19.785,27.297,12.638,21.441,16.609,15.664,15.688,11.932,8.068,16.962,11.208,17.129,16.525,18.589,23.744,19.785,19.175,13.254,25.52,15.903,11.986,31.95,35.508,38.906,36.232,37.213,34.827,32.189,34.378,33.583,33.14,35.281,38.236,40.329,36.902,36.453,36.471,35.819,33.618,34.468,35.054,30.73,29.384,35.592,35.628,35.706,34.019,34.844,35.562,33.056,33.917,29.839,29.151,28.906,32.189,28.176,35.7,36.142,38.278,37.548,36.788,35.867,37.895,38.116,32.961,35.915,35.215,32.207,34.187,30.981,35.616,22.787,20.939,29.569,35.054,27.063,23.523,28.098,17.291,15.233,15.419,33.672,37.279,37.051,35.227,33.906,33.941,35.431,35.323,34.593,33.439,37.38,37.691,32.65,36.274,36.782,38.923,35.807,38.828,38.044,39.922,29.163,34.761,31.746,25.909,21.435,19.306,20.371,27.751,32.291,26.663,9.085,15.419,17.183,20.76,19.683,14.522,14.073,21.549,20.006,12.745,15.867,17.626,12.195,12.051,9.815,14.522,10.431,7.356,7.004,7.584,14.414,10.078,12.955,7.673,9.593,8.762,13.236,10.724,6.86,34.222,33.104,34.073,35.885,35.132,35.909,37.237,34.575,32.691,32.273,32.045,32.004,32.039,32.255,33.606,34.426,35.072,35.58,35.042,33.72,33.397,33.283,33.744,34.103,33.463,30.562,18.224,19.934,23.989,14.336,13.87,23.523,20.413,9.396,28.134,10.544,8.678,15.263,15.676,9.031,15.197,15.52,14.456,20.144,11.106,12.321,12.105,17.996,16.926,17.069,16.974,13.66,8.541,9.605,9.581,8.349,14.258,12.996,9.916,9.468,32.219,33.218,33.26,33.206,33.218,33.224,33.224,33.272,32.829,33.331,33.331,33.343,33.373,31.998,29.767,23.331,19.055,15.634,14.169,14.145,13.738,12.542,11.34,10.389,10.873,9.528,21.447,32.578,20.413,8.182,8.086,32.123,32.051,15.329,7.303,12.051,11.406,8.248,7.65,7.219,7.249,7.201,7.536,7.572,7.051,7.482,7.446,8.307,6.854,9.264,7.829,8.977,9.222,8.026,33.367,35.06,31.854,34.013,32.464,30.49,8.122,30.807,37.039,35.251,33.278,31.776,29.563,30.688,30.807,29.731,29.743,29.749,30.018,30.64,30.478,26.364,33.828,27.865,32.62,21.98,32.793,27.859,31.968,32.667,31.98,31.98,32.141,27.35,23.589,15.114,12.715,9.205,8.636,17.602,21.788,11.298,9.27,10.58,10.879,14.821,14.282,7.883,11.447,12.016,27.548,19.211,12.476,19.33,12.984,13.864,15.855,19.24,15.138,21.166,28.355,28.648,23.612,22.901,14.743,14.258,36.764,36.011,36.011,37.763,38.828,39.522,35.778,34.39,34.886,32.452,33.373,31.89,32.715,30.879,30.963,35.108,23.702,14.151,13.63,14.51,15.305,15.365,16.148,35.108,24.898,21.16,20.323,26.358,16.728,17.667,17.344,14.737,18.87,19.444,12.566,20.042,12.984,12.751,14.408,12.608,12.428,12.446,12.691,13.571,14.85,13.439,13.403,13.636,21.974,16.382,12.751,15.652,19.868,14.438,18.325,17.177,17.458,16.663,17.195,17.075,34.33,35.562,40.502,38.941,35.538,36.902,33.128,36.208,35.915,35.58,36.292,35.197,34.707,35.55,35.64,35.472,35.353,28.11,31.226,23.391,27.793,16.83,15.993,19.42,27.949,14.39,23.307,25.078,11.304,11.094,16.328,7.787,8.206,10.736,10.945,26.98,10.849,18.421,16.166,16.035,16.4,15.945,14.611,14.426,16.453,15.329,21.681,22.709,17.141,17.213,16.328,14.952,15.897,15.138,14.414,16.579,16.848,17.111,27.225,28.248,15.658,34.48,36.746,40.12,37.081,37.853,33.379,34.946,36.136,32.428,30.813,32.321,33.379,32.775,31.071,30.73,33.457,30.891,31.089,24.886,16.501,11.023,17.374,13.714,23.325,11.382,30.562,28.941,15.173,14.946,14.228,12.512,12.751,9.354,18.547,16.238,11.651,14.617,12.309,9.522,13.224,12.853,13.319,12.524,12.889,9.85,10.221,18.535,15.012,14.049,15.173,15.281,14.348,14.904,13.774,14.761,14.42,13.66,10.783,9.97,34.599,33.236,33.858,39.85,36.555,29.827,29.844,24.551,26.86,26.047,10.395,7.117,11.286,34.187,29.504,19.761,27.703,12.004,29.665,35.173,29.958,25.508,16.19,12.285,15.819,13.696,17.183,16.501,10.526,11.394,11.423,8.301,10.389,13.176,15.873,19.797,18.307,10.257,8.888,19.964,23.23,18.086,18.535,20.012,23.989,17.602,8.343,14.785,17.661,13.6,12.44,11.178,12.775,12.219,14.193,14.791,10.221,9.396,12.213,32.123,33.421,40.114,40.335,40.969,40.323,33.768,23.122,9.761,12.673,11.25,30.688,19.468,19.946,25.078,9.426,10.395,13.02,10.706,10.562,9.205,13.397,11.31,15.036,12.727,23.427,9.001,18.134,12.356,15.55,18.923,17.051,12.512,9.587,13.762,10.969,10.969,12.972,17.889,14.354,12.422,11.238,10.813,9.193,10.443,9.079,9.641,10.353,12.895,11.728,10.795,15.532,13.977,11.328,17.883,13.23,14.551,16.83,16.848,13.547,15.712,36.603,37.255,39.097,35.724,32.685,33.343,39.025,35.138,33.786,32.362,32.47,32.135,32.261,31.83,34.061,35.006,29.982,26.226,24.862,21.495,27.44,17.745,17.745,15.957,16.752,13.212,23.774,21.298,21.74,9.115,10.921,35.024,10.748,9.282,7.931,9.013,13.349,17.428,15.538,16.094,15.688,9.791,10.682,8.278,15.443,12.004,9.492,8.493,14.252,11.902,11.304,9.982,13.122,13.81,16.292,10.49,11.047,9.474,12.889,12.949,42.464,39.151,38.445,37.446,38.158,36.92,36.142,35.807,26.597,21.992,24.079,20.078,32.805,23.553,22.889,23.349,27.339,16.639,13.307,11.417,22.847,17.35,14.946,13.11,12.022,16.232,21.77,20.837,22.554,15.789,10.197,14.061,13.301,17.033,18.732,18.738,33.594,31.346,22.207,15.664,10.73,13.266,14.217,10.383,10.981,10.287,12.452,10.67,13.056,14.217,19.396,19.719,21.388,22.093,18.391,22.273,34.779,20.76,27.799,24.234,37.434,37.249,42.051,40.562,41.926,41.017,33.17,27.925,22.901,14.258,9.516,9.922,32.62,32.524,31.938,35.173,35.401,37.697,31.669,36.459,36.238,34.24,29.731,30.963,30.927,28.014,34.055,37.285,36.543,36.346,36.13,33.618,33.666,35.861,36.711,35.795,29.85,31.298,35.778,32.44,30.49,27.895,29.629,39.886,23.6,21.705,30.209,26.017,31.16,29.097,26.226,20.526,26.196,25.783,27.297,25.706,20.467,23.254,25.042,18.176,36.334,37.919,39.647,38.158,35.909,36.471,34.282,34.33,36.19,35.772,32.177,21.669,18.618,22.805,20.813,17.321,19.803,20.245,25.209,18.14,23.499,32.243,30.837,20.299,23.278,24.522,24.827,22.321,15.538,20.138,18.81,15.251,17.572,20.736,22.129,19.228,14.121,20.754,17.5,13.786,13.732,14.234,14.48,15.455,19.067,17.087,17.536,17.661,18.379,18.565,15.658,16.752,18.469,18.224,22.416,19.545,16.603,19.833,18.493,37.057,40.532],&quot;times&quot;:[1488729600,1488729660,1488729720,1488729780,1488729840,1488729900,1488729960,1488730020,1488730080,1488730140,1488730200,1488730260,1488730320,1488730380,1488730440,1488730500,1488730560,1488730620,1488730680,1488730740,1488730800,1488730860,1488730920,1488730980,1488731040,1488731100,1488731160,1488731220,1488731280,1488731340,1488731400,1488731460,1488731520,1488731580,1488731640,1488731700,1488731760,1488731820,1488731880,1488731940,1488732000,1488732060,1488732120,1488732180,1488732240,1488732300,1488732360,1488732420,1488732480,1488732540,1488732600,1488732660,1488732720,1488732780,1488732840,1488732900,1488732960,1488733020,1488733080,1488733140,1488733200,1488733260,1488733320,1488733380,1488733440,1488733500,1488733560,1488733620,1488733680,1488733740,1488733800,1488733860,1488733920,1488733980,1488734040,1488734100,1488734160,1488734220,1488734280,1488734340,1488734400,1488734460,1488734520,1488734580,1488734640,1488734700,1488734760,1488734820,1488734880,1488734940,1488735000,1488735060,1488735120,1488735180,1488735240,1488735300,1488735360,1488735420,1488735480,1488735540,1488735600,1488735660,1488735720,1488735780,1488735840,1488735900,1488735960,1488736020,1488736080,1488736140,1488736200,1488736260,1488736320,1488736380,1488736440,1488736500,1488736560,1488736620,1488736680,1488736740,1488736800,1488736860,1488736920,1488736980,1488737040,1488737100,1488737160,1488737220,1488737280,1488737340,1488737400,1488737460,1488737520,1488737580,1488737640,1488737700,1488737760,1488737820,1488737880,1488737940,1488738000,1488738060,1488738120,1488738180,1488738240,1488738300,1488738360,1488738420,1488738480,1488738540,1488738600,1488738660,1488738720,1488738780,1488738840,1488738900,1488738960,1488739020,1488739080,1488739140,1488739200,1488739260,1488739320,1488739380,1488739440,1488739500,1488739560,1488739620,1488739680,1488739740,1488739800,1488739860,1488739920,1488739980,1488740040,1488740100,1488740160,1488740220,1488740280,1488740340,1488740400,1488740460,1488740520,1488740580,1488740640,1488740700,1488740760,1488740820,1488740880,1488740940,1488741000,1488741060,1488741120,1488741180,1488741240,1488741300,1488741360,1488741420,1488741480,1488741540,1488741600,1488741660,1488741720,1488741780,1488741840,1488741900,1488741960,1488742020,1488742080,1488742140,1488742200,1488742260,1488742320,1488742380,1488742440,1488742500,1488742560,1488742620,1488742680,1488742740,1488742800,1488742860,1488742920,1488742980,1488743040,1488743100,1488743160,1488743220,1488743280,1488743340,1488743400,1488743460,1488743520,1488743580,1488743640,1488743700,1488743760,1488743820,1488743880,1488743940,1488744000,1488744060,1488744120,1488744180,1488744240,1488744300,1488744360,1488744420,1488744480,1488744540,1488744600,1488744660,1488744720,1488744780,1488744840,1488744900,1488744960,1488745020,1488745080,1488745140,1488745200,1488745260,1488745320,1488745380,1488745440,1488745500,1488745560,1488745620,1488745680,1488745740,1488745800,1488745860,1488745920,1488745980,1488746040,1488746100,1488746160,1488746220,1488746280,1488746340,1488746400,1488746460,1488746520,1488746580,1488746640,1488746700,1488746760,1488746820,1488746880,1488746940,1488747000,1488747060,1488747120,1488747180,1488747240,1488747300,1488747360,1488747420,1488747480,1488747540,1488747600,1488747660,1488747720,1488747780,1488747840,1488747900,1488747960,1488748020,1488748080,1488748140,1488748200,1488748260,1488748320,1488748380,1488748440,1488748500,1488748560,1488748620,1488748680,1488748740,1488748800,1488748860,1488748920,1488748980,1488749040,1488749100,1488749160,1488749220,1488749280,1488749340,1488749400,1488749460,1488749520,1488749580,1488749640,1488749700,1488749760,1488749820,1488749880,1488749940,1488750000,1488750060,1488750120,1488750180,1488750240,1488750300,1488750360,1488750420,1488750480,1488750540,1488750600,1488750660,1488750720,1488750780,1488750840,1488750900,1488750960,1488751020,1488751080,1488751140,1488751200,1488751260,1488751320,1488751380,1488751440,1488751500,1488751560,1488751620,1488751680,1488751740,1488751800,1488751860,1488751920,1488751980,1488752040,1488752100,1488752160,1488752220,1488752280,1488752340,1488752400,1488752460,1488752520,1488752580,1488752640,1488752700,1488752760,1488752820,1488752880,1488752940,1488753000,1488753060,1488753120,1488753180,1488753240,1488753300,1488753360,1488753420,1488753480,1488753540,1488753600,1488753660,1488753720,1488753780,1488753840,1488753900,1488753960,1488754020,1488754080,1488754140,1488754200,1488754260,1488754320,1488754380,1488754440,1488754500,1488754560,1488754620,1488754680,1488754740,1488754800,1488754860,1488754920,1488754980,1488755040,1488755100,1488755160,1488755220,1488755280,1488755340,1488755400,1488755460,1488755520,1488755580,1488755640,1488755700,1488755760,1488755820,1488755880,1488755940,1488756000,1488756060,1488756120,1488756180,1488756240,1488756300,1488756360,1488756420,1488756480,1488756540,1488756600,1488756660,1488756720,1488756780,1488756840,1488756900,1488756960,1488757020,1488757080,1488757140,1488757200,1488757260,1488757320,1488757380,1488757440,1488757500,1488757560,1488757620,1488757680,1488757740,1488757800,1488757860,1488757920,1488757980,1488758040,1488758100,1488758160,1488758220,1488758280,1488758340,1488758400,1488758460,1488758520,1488758580,1488758640,1488758700,1488758760,1488758820,1488758880,1488758940,1488759000,1488759060,1488759120,1488759180,1488759240,1488759300,1488759360,1488759420,1488759480,1488759540,1488759600,1488759660,1488759720,1488759780,1488759840,1488759900,1488759960,1488760020,1488760080,1488760140,1488760200,1488760260,1488760320,1488760380,1488760440,1488760500,1488760560,1488760620,1488760680,1488760740,1488760800,1488760860,1488760920,1488760980,1488761040,1488761100,1488761160,1488761220,1488761280,1488761340,1488761400,1488761460,1488761520,1488761580,1488761640,1488761700,1488761760,1488761820,1488761880,1488761940,1488762000,1488762060,1488762120,1488762180,1488762240,1488762300,1488762360,1488762420,1488762480,1488762540,1488762600,1488762660,1488762720,1488762780,1488762840,1488762900,1488762960,1488763020,1488763080,1488763140,1488763200,1488763260,1488763320,1488763380,1488763440,1488763500,1488763560,1488763620,1488763680,1488763740,1488763800,1488763860,1488763920,1488763980,1488764040,1488764100,1488764160,1488764220,1488764280,1488764340,1488764400,1488764460,1488764520,1488764580,1488764640,1488764700,1488764760,1488764820,1488764880,1488764940,1488765000,1488765060,1488765120,1488765180,1488765240,1488765300,1488765360,1488765420,1488765480,1488765540,1488765600,1488765660,1488765720,1488765780,1488765840,1488765900,1488765960,1488766020,1488766080,1488766140,1488766200,1488766260,1488766320,1488766380,1488766440,1488766500,1488766560,1488766620,1488766680,1488766740,1488766800,1488766860,1488766920,1488766980,1488767040,1488767100,1488767160,1488767220,1488767280,1488767340,1488767400,1488767460,1488767520,1488767580,1488767640,1488767700,1488767760,1488767820,1488767880,1488767940,1488768000,1488768060,1488768120,1488768180,1488768240,1488768300,1488768360,1488768420,1488768480,1488768540,1488768600,1488768660,1488768720,1488768780,1488768840,1488768900,1488768960,1488769020,1488769080,1488769140,1488769200,1488769260,1488769320,1488769380,1488769440,1488769500,1488769560,1488769620,1488769680,1488769740,1488769800,1488769860,1488769920,1488769980,1488770040,1488770100,1488770160,1488770220,1488770280,1488770340,1488770400,1488770460,1488770520,1488770580,1488770640,1488770700,1488770760,1488770820,1488770880,1488770940,1488771000,1488771060,1488771120,1488771180,1488771240,1488771300,1488771360,1488771420,1488771480,1488771540,1488771600,1488771660,1488771720,1488771780,1488771840,1488771900,1488771960,1488772020,1488772080,1488772140,1488772200,1488772260,1488772320,1488772380,1488772440,1488772500,1488772560,1488772620,1488772680,1488772740,1488772800,1488772860,1488772920,1488772980,1488773040,1488773100,1488773160,1488773220,1488773280,1488773340,1488773400,1488773460,1488773520,1488773580,1488773640,1488773700,1488773760,1488773820,1488773880,1488773940,1488774000,1488774060,1488774120,1488774180,1488774240,1488774300,1488774360,1488774420,1488774480,1488774540,1488774600,1488774660,1488774720,1488774780,1488774840,1488774900,1488774960,1488775020,1488775080,1488775140,1488775200,1488775260,1488775320,1488775380,1488775440,1488775500,1488775560,1488775620,1488775680,1488775740,1488775800,1488775860,1488775920,1488775980,1488776040,1488776100,1488776160,1488776220,1488776280,1488776340,1488776400,1488776460,1488776520,1488776580,1488776640,1488776700,1488776760,1488776820,1488776880,1488776940,1488777000,1488777060,1488777120,1488777180,1488777240,1488777300,1488777360,1488777420,1488777480,1488777540,1488777600,1488777660,1488777720,1488777780,1488777840,1488777900,1488777960,1488778020,1488778080,1488778140,1488778200,1488778260,1488778320,1488778380,1488778440,1488778500,1488778560,1488778620,1488778680,1488778740,1488778800,1488778860,1488778920,1488778980,1488779040,1488779100,1488779160,1488779220,1488779280,1488779340,1488779400,1488779460,1488779520,1488779580,1488779640,1488779700,1488779760,1488779820,1488779880,1488779940,1488780000,1488780060,1488780120,1488780180,1488780240,1488780300,1488780360,1488780420,1488780480,1488780540,1488780600,1488780660,1488780720,1488780780,1488780840,1488780900,1488780960,1488781020,1488781080,1488781140,1488781200,1488781260,1488781320,1488781380,1488781440,1488781500,1488781560,1488781620,1488781680,1488781740,1488781800,1488781860,1488781920,1488781980,1488782040,1488782100,1488782160,1488782220,1488782280,1488782340,1488782400,1488782460,1488782520,1488782580,1488782640,1488782700,1488782760,1488782820,1488782880,1488782940,1488783000,1488783060,1488783120,1488783180,1488783240,1488783300,1488783360,1488783420,1488783480,1488783540,1488783600,1488783660,1488783720,1488783780,1488783840,1488783900,1488783960,1488784020,1488784080,1488784140,1488784200,1488784260,1488784320,1488784380,1488784440,1488784500,1488784560,1488784620,1488784680,1488784740,1488784800,1488784860,1488784920,1488784980,1488785040,1488785100,1488785160,1488785220,1488785280,1488785340,1488785400,1488785460,1488785520,1488785580,1488785640,1488785700,1488785760,1488785820,1488785880,1488785940,1488786000,1488786060,1488786120,1488786180,1488786240,1488786300,1488786360,1488786420,1488786480,1488786540,1488786600,1488786660,1488786720,1488786780,1488786840,1488786900,1488786960,1488787020,1488787080,1488787140,1488787200,1488787260,1488787320,1488787380,1488787440,1488787500,1488787560,1488787620,1488787680,1488787740,1488787800,1488787860,1488787920,1488787980,1488788040,1488788100,1488788160,1488788220,1488788280,1488788340,1488788400,1488788460,1488788520,1488788580,1488788640,1488788700,1488788760,1488788820,1488788880,1488788940,1488789000,1488789060,1488789120,1488789180,1488789240,1488789300,1488789360,1488789420,1488789480,1488789540,1488789600,1488789660,1488789720,1488789780,1488789840,1488789900,1488789960,1488790020,1488790080,1488790140,1488790200,1488790260,1488790320,1488790380,1488790440,1488790500,1488790560,1488790620,1488790680,1488790740,1488790800,1488790860,1488790920,1488790980,1488791040,1488791100,1488791160,1488791220,1488791280,1488791340,1488791400,1488791460,1488791520,1488791580,1488791640,1488791700,1488791760,1488791820,1488791880,1488791940,1488792000,1488792060,1488792120,1488792180,1488792240,1488792300,1488792360,1488792420,1488792480,1488792540,1488792600,1488792660,1488792720,1488792780,1488792840,1488792900,1488792960,1488793020,1488793080,1488793140,1488793200,1488793260,1488793320,1488793380,1488793440,1488793500,1488793560,1488793620,1488793680,1488793740,1488793800,1488793860,1488793920,1488793980,1488794040,1488794100,1488794160,1488794220,1488794280,1488794340,1488794400,1488794460,1488794520,1488794580,1488794640,1488794700,1488794760,1488794820,1488794880,1488794940,1488795000,1488795060,1488795120,1488795180,1488795240,1488795300,1488795360,1488795420,1488795480,1488795540,1488795600,1488795660,1488795720,1488795780,1488795840,1488795900,1488795960,1488796020,1488796080,1488796140,1488796200,1488796260,1488796320,1488796380,1488796440,1488796500,1488796560,1488796620,1488796680,1488796740,1488796800,1488796860,1488796920,1488796980,1488797040,1488797100,1488797160,1488797220,1488797280,1488797340,1488797400,1488797460,1488797520,1488797580,1488797640,1488797700,1488797760,1488797820,1488797880,1488797940,1488798000,1488798060,1488798120,1488798180,1488798240,1488798300,1488798360,1488798420,1488798480,1488798540,1488798600,1488798660,1488798720,1488798780,1488798840,1488798900,1488798960,1488799020,1488799080,1488799140,1488799200,1488799260,1488799320,1488799380,1488799440,1488799500,1488799560,1488799620,1488799680,1488799740,1488799800,1488799860,1488799920,1488799980,1488800040,1488800100,1488800160,1488800220,1488800280,1488800340,1488800400,1488800460,1488800520,1488800580,1488800640,1488800700,1488800760,1488800820,1488800880,1488800940,1488801000,1488801060,1488801120,1488801180,1488801240,1488801300,1488801360,1488801420,1488801480,1488801540,1488801600,1488801660,1488801720,1488801780,1488801840,1488801900,1488801960,1488802020,1488802080,1488802140,1488802200,1488802260,1488802320,1488802380,1488802440,1488802500,1488802560,1488802620,1488802680,1488802740,1488802800,1488802860,1488802920,1488802980,1488803040,1488803100,1488803160,1488803220,1488803280,1488803340,1488803400,1488803460,1488803520,1488803580,1488803640,1488803700,1488803760,1488803820,1488803880,1488803940,1488804000,1488804060,1488804120,1488804180,1488804240,1488804300,1488804360,1488804420,1488804480,1488804540,1488804600,1488804660,1488804720,1488804780,1488804840,1488804900,1488804960,1488805020,1488805080,1488805140,1488805200,1488805260,1488805320,1488805380,1488805440,1488805500,1488805560,1488805620,1488805680,1488805740,1488805800,1488805860,1488805920,1488805980,1488806040,1488806100,1488806160,1488806220,1488806280,1488806340,1488806400,1488806460,1488806520,1488806580,1488806640,1488806700,1488806760,1488806820,1488806880,1488806940,1488807000,1488807060,1488807120,1488807180,1488807240,1488807300,1488807360,1488807420,1488807480,1488807540,1488807600,1488807660,1488807720,1488807780,1488807840,1488807900,1488807960,1488808020,1488808080,1488808140,1488808200,1488808260,1488808320,1488808380,1488808440,1488808500,1488808560,1488808620,1488808680,1488808740,1488808800,1488808860,1488808920,1488808980,1488809040,1488809100,1488809160,1488809220,1488809280,1488809340,1488809400,1488809460,1488809520,1488809580,1488809640,1488809700,1488809760,1488809820,1488809880,1488809940,1488810000,1488810060,1488810120,1488810180,1488810240,1488810300,1488810360,1488810420,1488810480,1488810540,1488810600,1488810660,1488810720,1488810780,1488810840,1488810900,1488810960,1488811020,1488811080,1488811140,1488811200,1488811260,1488811320,1488811380,1488811440,1488811500,1488811560,1488811620,1488811680,1488811740,1488811800,1488811860,1488811920,1488811980,1488812040,1488812100,1488812160,1488812220,1488812280,1488812340,1488812400,1488812460,1488812520,1488812580,1488812640,1488812700,1488812760,1488812820,1488812880,1488812940,1488813000,1488813060,1488813120,1488813180,1488813240,1488813300,1488813360,1488813420,1488813480,1488813540,1488813600,1488813660,1488813720,1488813780,1488813840,1488813900,1488813960,1488814020,1488814080,1488814140,1488814200,1488814260,1488814320,1488814380,1488814440,1488814500,1488814560,1488814620,1488814680,1488814740,1488814800,1488814860,1488814920,1488814980,1488815040,1488815100,1488815160,1488815220,1488815280,1488815340,1488815400,1488815460,1488815520,1488815580,1488815640,1488815700,1488815760,1488815820,1488815880,1488815940,1488816000,1488816060,1488816120,1488816180,1488816240,1488816300,1488816360,1488816420,1488816480,1488816540,1488816600,1488816660,1488816720,1488816780,1488816840,1488816900,1488816960,1488817020,1488817080,1488817140,1488817200,1488817260,1488817320,1488817380,1488817440,1488817500,1488817560,1488817620,1488817680,1488817740,1488817800,1488817860,1488817920,1488817980,1488818040,1488818100,1488818160,1488818220,1488818280,1488818340,1488818400,1488818460,1488818520,1488818580,1488818640,1488818700,1488818760,1488818820,1488818880,1488818940,1488819000,1488819060,1488819120,1488819180,1488819240,1488819300,1488819360,1488819420,1488819480,1488819540,1488819600,1488819660,1488819720,1488819780,1488819840,1488819900,1488819960,1488820020,1488820080,1488820140,1488820200,1488820260,1488820320,1488820380,1488820440,1488820500,1488820560,1488820620,1488820680,1488820740,1488820800,1488820860,1488820920,1488820980,1488821040,1488821100,1488821160,1488821220,1488821280,1488821340,1488821400,1488821460,1488821520,1488821580,1488821640,1488821700,1488821760,1488821820,1488821880,1488821940,1488822000,1488822060,1488822120,1488822180,1488822240,1488822300,1488822360,1488822420,1488822480,1488822540,1488822600,1488822660,1488822720,1488822780,1488822840,1488822900,1488822960,1488823020,1488823080,1488823140,1488823200,1488823260,1488823320,1488823380,1488823440,1488823500,1488823560,1488823620,1488823680,1488823740,1488823800,1488823860,1488823920,1488823980,1488824040,1488824100,1488824160,1488824220,1488824280,1488824340,1488824400,1488824460,1488824520,1488824580,1488824640,1488824700,1488824760,1488824820,1488824880,1488824940,1488825000,1488825060,1488825120,1488825180,1488825240,1488825300,1488825360,1488825420,1488825480,1488825540,1488825600,1488825660,1488825720,1488825780,1488825840,1488825900,1488825960,1488826020,1488826080,1488826140,1488826200,1488826260,1488826320,1488826380,1488826440,1488826500,1488826560,1488826620,1488826680,1488826740,1488826800,1488826860,1488826920,1488826980,1488827040,1488827100,1488827160,1488827220,1488827280,1488827340,1488827400,1488827460,1488827520,1488827580,1488827640,1488827700,1488827760,1488827820,1488827880,1488827940,1488828000,1488828060,1488828120,1488828180,1488828240,1488828300,1488828360,1488828420,1488828480,1488828540,1488828600,1488828660,1488828720,1488828780,1488828840,1488828900,1488828960,1488829020,1488829080,1488829140,1488829200,1488829260,1488829320,1488829380,1488829440,1488829500,1488829560,1488829620,1488829680,1488829740,1488829800,1488829860,1488829920,1488829980,1488830040,1488830100,1488830160,1488830220,1488830280,1488830340,1488830400,1488830460,1488830520,1488830580,1488830640,1488830760,1488830820,1488830880,1488830940,1488831000,1488831060,1488831120,1488831180,1488831240,1488831300,1488831360,1488831420,1488831480,1488831540,1488831600,1488831660,1488831720,1488831780,1488831840,1488831900,1488831960,1488832020,1488832080,1488832140,1488832200,1488832260,1488832320,1488832380,1488832440,1488832500,1488832560,1488832620,1488832680,1488832740,1488832800,1488832860,1488832920,1488832980,1488833040,1488833100,1488833160,1488833220,1488833280,1488833340,1488833400,1488833460,1488833520,1488833580,1488833640,1488833700,1488833760,1488833820,1488833880,1488833940,1488834000,1488834060,1488834120,1488834180,1488834240,1488834300,1488834360,1488834420,1488834480,1488834540,1488834600,1488834660,1488834720,1488834780,1488834840,1488834900,1488834960,1488835020,1488835080,1488835140,1488835200,1488835260,1488835320,1488835380,1488835440,1488835500,1488835560,1488835620,1488835680,1488835740,1488835800,1488835860,1488835920,1488835980,1488836040,1488836100,1488836160,1488836220,1488836280,1488836340,1488836400,1488836460,1488836520,1488836580,1488836640,1488836700,1488836760,1488836820,1488836880,1488836940,1488837000,1488837060,1488837120,1488837180,1488837240,1488837300,1488837360,1488837420,1488837480,1488837540,1488837600,1488837660,1488837720,1488837780,1488837840,1488837900,1488837960,1488838020,1488838080,1488838140,1488838200,1488838260,1488838320,1488838380,1488838440,1488838500,1488838560,1488838620,1488838680,1488838740,1488838800,1488838860,1488838920,1488838980,1488839040,1488839100,1488839160,1488839220,1488839280,1488839340,1488839400,1488839460,1488839520,1488839580,1488839640,1488839700,1488839760,1488839820,1488839880,1488839940,1488840000,1488840060,1488840120,1488840180,1488840240,1488840300,1488840360,1488840420,1488840480,1488840540,1488840600,1488840660,1488840720,1488840780,1488840840,1488840900,1488840960,1488841020,1488841080,1488841140,1488841200,1488841260,1488841320,1488841380,1488841440,1488841500,1488841560,1488841680,1488841740,1488841800,1488841860,1488841920,1488841980,1488842040,1488842100,1488842160,1488842220,1488842280,1488842340,1488842400,1488842460,1488842520,1488842580,1488842640,1488842700,1488842760,1488842820,1488842880,1488842940,1488843000,1488843060,1488843120,1488843180,1488843240,1488843300,1488843360,1488843420,1488843480,1488843540,1488843600,1488843660,1488843720,1488843780,1488843840,1488843900,1488843960,1488844020,1488844080,1488844140,1488844200,1488844260,1488844320,1488844380,1488844440,1488844500,1488844560,1488844620,1488844680,1488844740,1488844800,1488844860,1488844920,1488844980,1488845040,1488845100,1488845160,1488845220,1488845280,1488845340,1488845400,1488845460,1488845520,1488845580,1488845640,1488845700,1488845760,1488845820,1488845880,1488845940,1488846000,1488846060,1488846120,1488846180,1488846240,1488846300,1488846360,1488846420,1488846480,1488846540,1488846600,1488846660,1488846720,1488846780,1488846840,1488846900,1488846960,1488847020,1488847080,1488847140,1488847200,1488847260,1488847320,1488847380,1488847440,1488847500,1488847560,1488847620,1488847680,1488847740,1488847800,1488847860,1488847920,1488847980,1488848040,1488848100,1488848160,1488848220,1488848280,1488848340,1488848400,1488848460,1488848520,1488848580,1488848640,1488848700,1488848760,1488848820,1488848880,1488848940,1488849000,1488849060,1488849120,1488849180,1488849240,1488849300,1488849360,1488849420,1488849480,1488849540,1488849600,1488849660,1488849720,1488849780,1488849840,1488849900,1488849960,1488850020,1488850080,1488850140,1488850200,1488850260,1488850320,1488850380,1488850440,1488850500,1488850560,1488850620,1488850680,1488850740,1488850800,1488850860,1488850920,1488850980,1488851040,1488851100,1488851160,1488851220,1488851280,1488851340,1488851400,1488851460,1488851520,1488851580,1488851640,1488851700,1488851760,1488851820,1488851880,1488851940,1488852000,1488852060,1488852120,1488852180,1488852240,1488852300,1488852360,1488852420,1488852480,1488852540,1488852600,1488852660,1488852720,1488852780,1488852840,1488852900,1488852960,1488853020,1488853080,1488853140,1488853200,1488853320,1488853380,1488853440,1488853500,1488853560,1488853620,1488853680,1488853740,1488853800,1488853860,1488853920,1488853980,1488854040,1488854100,1488854160,1488854220,1488854280,1488854340,1488854400,1488854460,1488854520,1488854580,1488854640,1488854700,1488854760,1488854820,1488854880,1488854940,1488855000,1488855060,1488855120,1488855180,1488855240,1488855300,1488855360,1488855420,1488855480,1488855540,1488855600,1488855660,1488855720,1488855780,1488855840,1488855900,1488855960,1488856020,1488856080,1488856140,1488856200,1488856260,1488856320,1488856380,1488856440,1488856500,1488856560,1488856620,1488856680,1488856740,1488856800,1488856860,1488856920,1488856980,1488857040,1488857100,1488857160,1488857220,1488857280,1488857340,1488857400,1488857460,1488857520,1488857580,1488857640,1488857700,1488857760,1488857820,1488857880,1488857940,1488858000,1488858060,1488858120,1488858180,1488858240,1488858300,1488858360,1488858420,1488858480,1488858540,1488858600,1488858660,1488858720,1488858780,1488858840,1488858900,1488858960,1488859020,1488859080,1488859140,1488859200,1488859260,1488859320,1488859380,1488859440,1488859500,1488859560,1488859620,1488859680,1488859740,1488859800,1488859860,1488859920,1488859980,1488860040,1488860100,1488860160,1488860220,1488860280,1488860340,1488860400,1488860460,1488860520,1488860580,1488860640,1488860700,1488860760,1488860820,1488860880,1488860940,1488861000,1488861060,1488861120,1488861180,1488861240,1488861300,1488861360,1488861420,1488861480,1488861540,1488861600,1488861660,1488861720,1488861780,1488861840,1488861900,1488861960,1488862020,1488862080,1488862140,1488862200,1488862260,1488862320,1488862380,1488862440,1488862500,1488862560,1488862620,1488862680,1488862740,1488862800,1488862860,1488862920,1488862980,1488863040,1488863100,1488863160,1488863220,1488863280,1488863340,1488863400,1488863460,1488863520,1488863580,1488863640,1488863700,1488863760,1488863820,1488863880,1488863940,1488864000,1488864060,1488864120,1488864180,1488864240,1488864300,1488864360,1488864420,1488864480,1488864540,1488864600,1488864660,1488864720,1488864780,1488864840,1488864900,1488864960,1488865020,1488865080,1488865140,1488865200,1488865260,1488865320,1488865380,1488865440,1488865500,1488865560,1488865620,1488865680,1488865740,1488865800,1488865860,1488865920,1488865980,1488866040,1488866100,1488866160,1488866220,1488866280,1488866340,1488866400,1488866460,1488866520,1488866580,1488866640,1488866700,1488866760,1488866820,1488866880,1488866940,1488867000,1488867060,1488867120,1488867180,1488867240,1488867300,1488867360,1488867420,1488867480,1488867540,1488867600,1488867660,1488867720,1488867780,1488867840,1488867900,1488867960,1488868020,1488868080,1488868140,1488868200,1488868260,1488868320,1488868380,1488868440,1488868500,1488868560,1488868620,1488868680,1488868740,1488868800,1488868860,1488868920,1488868980,1488869040,1488869100,1488869160,1488869220,1488869280,1488869340,1488869400,1488869460,1488869520,1488869580,1488869640,1488869700,1488869760,1488869820,1488869880,1488869940,1488870000,1488870060,1488870120,1488870180,1488870240,1488870300,1488870360,1488870420,1488870480,1488870540,1488870600,1488870660,1488870720,1488870780,1488870840,1488870900,1488870960,1488871020,1488871080,1488871140,1488871200,1488871260,1488871320,1488871380,1488871440,1488871500,1488871560,1488871620,1488871680,1488871740,1488871800,1488871860,1488871920,1488871980,1488872040,1488872100,1488872160,1488872220,1488872280,1488872340,1488872400,1488872460,1488872520,1488872580,1488872640,1488872700,1488872760,1488872820,1488872880,1488872940,1488873000,1488873060,1488873120,1488873180,1488873240,1488873300,1488873360,1488873420,1488873480,1488873540,1488873600,1488873660,1488873720,1488873780,1488873840,1488873900,1488873960,1488874020,1488874080,1488874140,1488874200,1488874260,1488874320,1488874380,1488874440,1488874500,1488874560,1488874620,1488874680,1488874740,1488874800,1488874860,1488874920,1488874980,1488875040,1488875100,1488875160,1488875220,1488875280,1488875340,1488875460,1488875520,1488875580,1488875640,1488875700,1488875760,1488875820,1488875880,1488875940,1488876000,1488876060,1488876120,1488876180,1488876240,1488876300,1488876360,1488876420,1488876480,1488876540,1488876600,1488876660,1488876720,1488876780,1488876840,1488876900,1488876960,1488877020,1488877080,1488877140,1488877200,1488877260,1488877320,1488877380,1488877440,1488877500,1488877560,1488877620,1488877680,1488877740,1488877800,1488877860,1488877920,1488877980,1488878040,1488878100,1488878160,1488878220,1488878280,1488878340,1488878400,1488878460,1488878520,1488878580,1488878640,1488878700,1488878760,1488878820,1488878880,1488878940,1488879000,1488879060,1488879120,1488879180,1488879240,1488879300,1488879360,1488879420,1488879480,1488879540,1488879600,1488879660,1488879720,1488879780,1488879840,1488879900,1488880140,1488880200,1488880260,1488880320,1488880380,1488880440,1488880500,1488880560,1488880620,1488880680,1488880740,1488880800,1488880860,1488880920,1488880980,1488881040,1488881100,1488881160,1488881220,1488881280,1488881340,1488881400,1488881460,1488881520,1488881580,1488881640,1488881700,1488881760,1488881820,1488881880,1488881940,1488882000,1488882060,1488882120,1488882180,1488882240,1488882300,1488882360,1488882420,1488882480,1488882540,1488882600,1488882660,1488882720,1488882780,1488882840,1488882900,1488882960,1488883020,1488883080,1488883140,1488883200,1488883260,1488883320,1488883380,1488883440,1488883500,1488883560,1488883620,1488883680,1488883740,1488883800,1488883860,1488883920,1488883980,1488884040,1488884100,1488884160,1488884220,1488884280,1488884340,1488884400,1488884460,1488884520,1488884580,1488884640,1488884700,1488884760,1488884820,1488884880,1488884940,1488885000,1488885060,1488885120,1488885180,1488885240,1488885300,1488885360,1488885420,1488885480,1488885540,1488885600,1488885660,1488885720,1488885780,1488885840,1488885900,1488885960,1488886020,1488886080,1488886140,1488886200,1488886260,1488886380,1488886440,1488886500,1488886560,1488886620,1488886680,1488886740,1488886800,1488886860,1488886920,1488886980,1488887040,1488887100,1488887160,1488887220,1488887280,1488887340,1488887400,1488887460,1488887520,1488887580,1488887640,1488887700,1488887760,1488887820,1488887880,1488887940,1488888000,1488888060,1488888120,1488888180,1488888240,1488888300,1488888360,1488888420,1488888480,1488888540,1488888600,1488888660,1488888720,1488888780,1488888840,1488888900,1488888960,1488889020,1488889080,1488889140,1488889200,1488889260,1488889320,1488889380,1488889440,1488889500,1488889560,1488889620,1488889680,1488889740,1488889800,1488889860,1488889920,1488889980,1488890040,1488890100,1488890160,1488890220,1488890280,1488890340,1488890400,1488890460,1488890520,1488890580,1488890640,1488890700,1488890760,1488890820,1488890880,1488890940,1488891000,1488891060,1488891120,1488891180,1488891240,1488891300,1488891360,1488891420,1488891480,1488891540,1488891600,1488891660,1488891720,1488891780,1488891840,1488891900,1488891960,1488892020,1488892080,1488892140,1488892200,1488892260,1488892320,1488892380,1488892440,1488892500,1488892560,1488892620,1488892680,1488892740,1488892800,1488892920,1488892980,1488893040,1488893100,1488893160,1488893220,1488893280,1488893340,1488893400,1488893460,1488893520,1488893580,1488893640,1488893700,1488893760,1488893820,1488893880,1488893940,1488894000,1488894060,1488894120,1488894180,1488894240,1488894300,1488894360,1488894420,1488894480,1488894540,1488894600,1488894660,1488894720,1488894780,1488894960,1488895020,1488895080,1488895140,1488895200,1488895260,1488895320,1488895380,1488895440,1488895500,1488895560,1488895620,1488895680,1488895740,1488895800,1488895860,1488895920,1488895980,1488896040,1488896100,1488896160,1488896220,1488896280,1488896340,1488896400,1488896460,1488896520,1488896580,1488896640,1488896700,1488896760,1488896820,1488896880,1488896940,1488897000,1488897060,1488897120,1488897180,1488897240,1488897300,1488897360,1488897420,1488897480,1488897540,1488897600,1488897660,1488897720,1488897780,1488897840,1488897900,1488897960,1488898020,1488898080,1488898140,1488898200,1488898260,1488898320,1488898380,1488898440,1488898500,1488898560,1488898620,1488898680,1488898740,1488898800,1488898860,1488898920,1488898980,1488899040,1488899100,1488899160,1488899220,1488899280,1488899340,1488899400,1488899460,1488899520,1488899580,1488899640,1488899700,1488899760,1488899820,1488899880,1488899940,1488900000,1488900060,1488900120,1488900180,1488900240,1488900300,1488900360,1488900420,1488900480,1488900540,1488900600,1488900660,1488900720,1488900780,1488900840,1488900900,1488900960,1488901020,1488901080,1488901140,1488901200,1488901260,1488901320,1488901380,1488901440,1488901500,1488901560,1488901620,1488901680,1488901740,1488901800,1488901860,1488901920,1488901980,1488902040,1488902100,1488902160,1488902220,1488902280,1488902340,1488902400,1488902460,1488902520,1488902580,1488902640,1488902700,1488902760,1488902820,1488902880,1488902940,1488903000,1488903060,1488903120,1488903180,1488903240,1488903300,1488903360,1488903420,1488903480,1488903540,1488903600,1488903660,1488903720,1488903780,1488903840,1488903900,1488903960,1488904020,1488904080,1488904140,1488904200,1488904260,1488904320,1488904380,1488904440,1488904500,1488904560,1488904620,1488904680,1488904740,1488904800,1488904860,1488904920,1488904980,1488905040,1488905100,1488905160,1488905220,1488905280,1488905340,1488905400,1488905460,1488905520,1488905580,1488905640,1488905700,1488905760,1488905820,1488905880,1488905940,1488906000,1488906060,1488906120,1488906180,1488906240,1488906300,1488906360,1488906420,1488906480,1488906540,1488906600,1488906660,1488906720,1488906780,1488906840,1488906900,1488906960,1488907020,1488907080,1488907140,1488907200,1488907260,1488907320,1488907380,1488907440,1488907500,1488907560,1488907620,1488907680,1488907740,1488907800,1488907860,1488907920,1488907980,1488908040,1488908100,1488908160,1488908220,1488908280,1488908340,1488908400,1488908460,1488908520,1488908580,1488908640,1488908700,1488908760,1488908820,1488908880,1488908940,1488909000,1488909060,1488909120,1488909180,1488909240,1488909300,1488909360,1488909420,1488909480,1488909540,1488909600,1488909660,1488909720,1488909780,1488909840,1488909900,1488909960,1488910020,1488910080,1488910140,1488910200,1488910260,1488910320,1488910380,1488910440,1488910500,1488910560,1488910620,1488910680,1488910740,1488910800,1488910860,1488910920,1488910980,1488911040,1488911100,1488911160,1488911220,1488911280,1488911340,1488911400,1488911460,1488911520,1488911580,1488911640,1488911700,1488911760,1488911820,1488911880,1488911940,1488912000,1488912060,1488912120,1488912180,1488912240,1488912300,1488912360,1488912420,1488912480,1488912540,1488912600,1488912660,1488912720,1488912780,1488912840,1488912900,1488912960,1488913020,1488913080,1488913140,1488913200,1488913260,1488913320,1488913380,1488913440,1488913500,1488913620,1488913680,1488913740,1488913800,1488913860,1488913920,1488913980,1488914040,1488914100,1488914160,1488914220,1488914280,1488914340,1488914400,1488914460,1488914520,1488914580,1488914640,1488914700,1488914760,1488914820,1488914880,1488914940,1488915000,1488915060,1488915120,1488915180,1488915240,1488915300,1488915360,1488915420,1488915480,1488915540,1488915600,1488915660,1488915720,1488915780,1488915840,1488915900,1488915960,1488916020,1488916080,1488916140,1488916200,1488916260,1488916320,1488916380,1488916440,1488916500,1488916560,1488916620,1488916680,1488916740,1488916800,1488916860,1488916920,1488916980,1488917040,1488917100,1488917160,1488917220,1488917280,1488917340,1488917400,1488917460,1488917520,1488917580,1488917640,1488917700,1488917760,1488917820,1488917880,1488917940,1488918000,1488918060,1488918120,1488918180,1488918240,1488918300,1488918360,1488918420,1488918480,1488918540,1488918600,1488918660,1488918720,1488918780,1488918840,1488918900,1488918960,1488919020,1488919080,1488919140,1488919200,1488919260,1488919320,1488919380,1488919440,1488919500,1488919560,1488919620,1488919680,1488919740,1488919800,1488919860,1488919920,1488919980,1488920040,1488920100,1488920160,1488920220,1488920280,1488920340,1488920400,1488920460,1488920520,1488920580,1488920640,1488920700,1488920760,1488920820,1488920880,1488920940,1488921000,1488921060,1488921120,1488921180,1488921240,1488921300,1488921360,1488921420,1488921480,1488921540,1488921600,1488921660,1488921720,1488921780,1488921840,1488921900,1488921960,1488922020,1488922080,1488922140,1488922200,1488922260,1488922320,1488922380,1488922440,1488922500,1488922560,1488922620,1488922680,1488922740,1488922800,1488922860,1488922920,1488922980,1488923040,1488923100,1488923160,1488923220,1488923280,1488923340,1488923400,1488923460,1488923520,1488923580,1488923640,1488923700,1488923760,1488923820,1488923880,1488923940,1488924000,1488924060,1488924120,1488924180,1488924240,1488924300,1488924360,1488924420,1488924480,1488924540,1488924600,1488924660,1488924720,1488924780,1488924840,1488924900,1488924960,1488925020,1488925080,1488925140,1488925200,1488925260,1488925320,1488925380,1488925440,1488925500,1488925560,1488925620,1488925680,1488925740,1488925800,1488925860,1488925920,1488925980,1488926040,1488926100,1488926160,1488926220,1488926280,1488926340,1488926400,1488926460,1488926520,1488926580,1488926640,1488926700,1488926760,1488926820,1488926880,1488926940,1488927000,1488927060,1488927120,1488927180,1488927240,1488927300,1488927360,1488927420,1488927480,1488927540,1488927600,1488927660,1488927720,1488927780,1488927840,1488927900,1488927960,1488928020,1488928080,1488928140,1488928200,1488928260,1488928320,1488928380,1488928440,1488928500,1488928560,1488928620,1488928680,1488928740,1488928800,1488928860,1488928920,1488928980,1488929040,1488929100,1488929160,1488929220,1488929280,1488929340,1488929400,1488929460,1488929520,1488929580,1488929640,1488929700,1488929760,1488929880,1488929940,1488930000,1488930060,1488930120,1488930180,1488930240,1488930300,1488930360,1488930420,1488930480,1488930540,1488930600,1488930660,1488930720,1488930780,1488930840,1488930900,1488930960,1488931020,1488931080,1488931140,1488931200,1488931260,1488931320,1488931380,1488931440,1488931500,1488931560,1488931620,1488931680,1488931740,1488931800,1488931860,1488931920,1488931980,1488932040,1488932100,1488932160,1488932220,1488932280,1488932340,1488932400,1488932460,1488932520,1488932580,1488932640,1488932700,1488932760,1488932820,1488932880,1488932940,1488933000,1488933060,1488933120,1488933180,1488933240,1488933300,1488933360,1488933420,1488933480,1488933540,1488933600,1488933660,1488933720,1488933780,1488933840,1488933900,1488933960,1488934020,1488934080,1488934140,1488934200,1488934260,1488934320,1488934380,1488934440,1488934500,1488934560,1488934620,1488934680,1488934740,1488934800,1488934860,1488934920,1488934980,1488935040,1488935100,1488935160,1488935220,1488935280,1488935340,1488935400,1488935460,1488935520,1488935580,1488935640,1488935700,1488935760,1488935820,1488935880,1488935940,1488936000,1488936060,1488936120,1488936180,1488936240,1488936300,1488936360,1488936420,1488936480,1488936540,1488936600,1488936660,1488936720,1488936780,1488936840,1488936900,1488936960,1488937020,1488937080,1488937140,1488937200,1488937260,1488937320,1488937380,1488937440,1488937500,1488937560,1488937620,1488937680,1488937740,1488937860,1488937920,1488937980,1488938040,1488938100,1488938160,1488938220,1488938280,1488938340,1488938400,1488938460,1488938520,1488938580,1488938640,1488938700,1488938760,1488938820,1488938880,1488938940,1488939000,1488939060,1488939120,1488939180,1488939240,1488939300,1488939360,1488939420,1488939480,1488939540,1488939600,1488939660,1488939780,1488939840,1488939900,1488939960,1488940020,1488940080,1488940140,1488940200,1488940260,1488940320,1488940380,1488940440,1488940500,1488940560,1488940620,1488940680,1488940740,1488940800,1488940860,1488940920,1488940980,1488941040,1488941100,1488941160,1488941220,1488941280,1488941340,1488941400,1488941460,1488941520,1488941580,1488941640,1488941700,1488941760,1488941820,1488941880,1488941940,1488942000,1488942060,1488942120,1488942180,1488942240,1488942300,1488942360,1488942420,1488942480,1488942540,1488942600,1488942660,1488942720,1488942780,1488942840,1488942900,1488942960,1488943020,1488943080,1488943140,1488943200,1488943260,1488943320,1488943380,1488943440,1488943500,1488943560,1488943620,1488943680,1488943740,1488943800,1488943860,1488943920,1488943980,1488944040,1488944100,1488944160,1488944220,1488944280,1488944340,1488944400,1488944460,1488944520,1488944580,1488944640,1488944700,1488944760,1488944820,1488944880,1488944940,1488945000,1488945060,1488945120,1488945180,1488945240,1488945300,1488945360,1488945420,1488945480,1488945540,1488945600,1488945660,1488945720,1488945780,1488945840,1488945900,1488945960,1488946020,1488946080,1488946140,1488946200,1488946260,1488946320,1488946380,1488946440,1488946500,1488946560,1488946620,1488946680,1488946740,1488946800,1488946860,1488946920,1488946980,1488947040,1488947100,1488947160,1488947220,1488947280,1488947340,1488947400,1488947460,1488947520,1488947580,1488947640,1488947700,1488947760,1488947820,1488947880,1488947940,1488948000,1488948060,1488948120,1488948180,1488948240,1488948300,1488948360,1488948420,1488948480,1488948540,1488948600,1488948660,1488948720,1488948780,1488948840,1488948900,1488948960,1488949020,1488949080,1488949140,1488949200,1488949260,1488949320,1488949380,1488949440,1488949500,1488949560,1488949620,1488949680,1488949740,1488949800,1488949860,1488949920,1488949980,1488950040,1488950100,1488950160,1488950220,1488950280,1488950340,1488950400,1488950460,1488950520,1488950580,1488950640,1488950700,1488950760,1488950820,1488950880,1488950940,1488951000,1488951060,1488951120,1488951180,1488951240,1488951300,1488951360,1488951420,1488951480,1488951540,1488951600,1488951660,1488951720,1488951780,1488951840,1488951900,1488951960,1488952020,1488952080,1488952140,1488952200,1488952260,1488952320,1488952380,1488952440,1488952500,1488952560,1488952620,1488952680,1488952740,1488952800,1488952860,1488952920,1488952980,1488953040,1488953100,1488953160,1488953220,1488953280,1488953340,1488953400,1488953460,1488953520,1488953580,1488953640,1488953700,1488953760,1488953820,1488953880,1488953940,1488954000,1488954060,1488954120,1488954180,1488954240,1488954300,1488954360,1488954420,1488954480,1488954540,1488954600,1488954660,1488954720,1488954780,1488954840,1488954900,1488954960,1488955020,1488955080,1488955140,1488955200,1488955260,1488955320,1488955380,1488955440,1488955500,1488955560,1488955620,1488955680,1488955740,1488955800,1488955860,1488955920,1488955980,1488956040,1488956100,1488956160,1488956220,1488956280,1488956340,1488956400,1488956460,1488956520,1488956580,1488956640,1488956700,1488956760,1488956820,1488956880,1488956940,1488957000,1488957060,1488957120,1488957180,1488957240,1488957300,1488957360,1488957420,1488957480,1488957540,1488957600,1488957660,1488957720,1488957780,1488957840,1488957900,1488957960,1488958020,1488958080,1488958140,1488958200,1488958260,1488958320,1488958380,1488958440,1488958500,1488958560,1488958620,1488958680,1488958740,1488958800,1488958860,1488958920,1488958980,1488959040,1488959100,1488959160,1488959220,1488959280,1488959340,1488959400,1488959460,1488959520,1488959580,1488959640,1488959700,1488959760,1488959820,1488959880,1488959940,1488960000,1488960060,1488960120,1488960180,1488960240,1488960300,1488960360,1488960420,1488960480,1488960540,1488960600,1488960660,1488960720,1488960780,1488960840,1488960900,1488960960,1488961020,1488961080,1488961140,1488961200,1488961260,1488961320,1488961380,1488961440,1488961500,1488961560,1488961620,1488961680,1488961740,1488961800,1488961860,1488961920,1488961980,1488962040,1488962100,1488962160,1488962220,1488962280,1488962340,1488962400,1488962460,1488962520,1488962580,1488962640,1488962700,1488962760,1488962820,1488962880,1488962940,1488963000,1488963060,1488963120,1488963180,1488963240,1488963300,1488963360,1488963420,1488963480,1488963540,1488963600,1488963660,1488963720,1488963780,1488963840,1488963900,1488963960,1488964020,1488964080,1488964140,1488964200,1488964260,1488964320,1488964380,1488964440,1488964500,1488964560,1488964620,1488964680,1488964740,1488964800,1488964860,1488964920,1488964980,1488965040,1488965100,1488965160,1488965220,1488965280,1488965340,1488965400,1488965460,1488965520,1488965580,1488965640,1488965700,1488965760,1488965820,1488965880,1488965940,1488966000,1488966060,1488966120,1488966180,1488966240,1488966300,1488966360,1488966420,1488966480,1488966540,1488966600,1488966660,1488966720,1488966780,1488966840,1488966900,1488966960,1488967020,1488967080,1488967140,1488967200,1488967260,1488967320,1488967380,1488967440,1488967500,1488967560,1488967620,1488967680,1488967740,1488967800,1488967860,1488967920,1488967980,1488968040,1488968100,1488968160,1488968220,1488968280,1488968340,1488968400,1488968460,1488968520,1488968580,1488968640,1488968700,1488968760,1488968820,1488968880,1488968940,1488969000,1488969060,1488969120,1488969180,1488969240,1488969300,1488969360,1488969420,1488969480,1488969540,1488969600,1488969660,1488969720,1488969780,1488969840,1488969900,1488969960,1488970020,1488970080,1488970200,1488970260,1488970320,1488970380,1488970440,1488970500,1488970560,1488970620,1488970680,1488970740,1488970800,1488970860,1488970920,1488970980,1488971040,1488971100,1488971160,1488971220,1488971280,1488971340,1488971400,1488971460,1488971520,1488971580,1488971640,1488971700,1488971760,1488971820,1488971880,1488971940,1488972000,1488972060,1488972120,1488972180,1488972240,1488972300,1488972360,1488972420,1488972480,1488972540,1488972600,1488972660,1488972720,1488972780,1488972840,1488972900,1488972960,1488973020,1488973080,1488973140,1488973200,1488973260,1488973320,1488973380,1488973440,1488973500,1488973560,1488973620,1488973680,1488973740,1488973800,1488973860,1488973920,1488973980,1488974040,1488974100,1488974160,1488974220,1488974280,1488974340,1488974400,1488974460,1488974520,1488974580,1488974640,1488974700,1488974760,1488974820,1488974880,1488974940,1488975000,1488975060,1488975120,1488975180,1488975240,1488975300,1488975360,1488975420,1488975480,1488975540,1488975600,1488975660,1488975720,1488975780,1488975840,1488975900,1488975960,1488976020,1488976080,1488976140,1488976200,1488976260,1488976320,1488976380,1488976440,1488976500,1488976560,1488976620,1488976680,1488976740,1488976800,1488976860,1488976920,1488976980,1488977040,1488977100,1488977160,1488977220,1488977280,1488977340,1488977400,1488977460,1488977520,1488977580,1488977640,1488977700,1488977760,1488977820,1488977880,1488977940,1488978000,1488978060,1488978120,1488978180,1488978240,1488978300,1488978360,1488978420,1488978480,1488978540,1488978600,1488978660,1488978720,1488978780,1488978840,1488978900,1488978960,1488979020,1488979080,1488979140,1488979200,1488979260,1488979320,1488979380,1488979440,1488979500,1488979560,1488979620,1488979680,1488979740,1488979800,1488979860,1488979920,1488979980,1488980040,1488980100,1488980160,1488980220,1488980280,1488980340,1488980400,1488980460,1488980520,1488980580,1488980640,1488980700,1488980760,1488980820,1488980880,1488980940,1488981000,1488981060,1488981120,1488981180,1488981240,1488981300,1488981360,1488981420,1488981480,1488981540,1488981600,1488981660,1488981720,1488981780,1488981840,1488981900,1488981960,1488982020,1488982080,1488982140,1488982200,1488982260,1488982320,1488982380,1488982440,1488982500,1488982560,1488982620,1488982680,1488982740,1488982800,1488982860,1488982920,1488982980,1488983040,1488983100,1488983160,1488983220,1488983280,1488983340,1488983400,1488983460,1488983520,1488983580,1488983640,1488983700,1488983760,1488983820,1488983880,1488983940,1488984000,1488984060,1488984120,1488984180,1488984240,1488984300,1488984360,1488984420,1488984480,1488984540,1488984600,1488984660,1488984720,1488984780,1488984840,1488984900,1488984960,1488985020,1488985080,1488985140,1488985200,1488985260,1488985320,1488985380,1488985440,1488985500,1488985560,1488985620,1488985680,1488985740,1488985800,1488985860,1488985920,1488985980,1488986040,1488986100,1488986160,1488986220,1488986280,1488986340,1488986400,1488986460,1488986520,1488986580,1488986640,1488986700,1488986760,1488986820,1488986880,1488986940,1488987000,1488987060,1488987120,1488987180,1488987240,1488987300,1488987360,1488987420,1488987480,1488987540,1488987600,1488987660,1488987720,1488987780,1488987840,1488987900,1488987960,1488988020,1488988080,1488988140,1488988200,1488988260,1488988320,1488988380,1488988440,1488988500,1488988560,1488988620,1488988680,1488988740,1488988800],&quot;name&quot;:&quot;media&quot;},{&quot;values&quot;:[62.612,69.544,68.963,65.105,51.768,76.476,54.806,54.698,42.97,39.458,52.396,30.39,42.257,28.177,29.978,37.179,44.865,41.097,36.635,37.598,48.831,54.62,54.285,56.947,39.482,40.756,44.817,52.987,55.894,49.602,60.075,63.305,64.035,61.206,61.684,61.552,61.319,38.46,41.665,39.01,51.804,64.831,52.509,44.686,50.278,70.118,82.756,82.702,70.59,69.179,66.69,87.457,90.275,79.658,68.061,73.64,62.935,68.461,84.545,83.648,94.427,99.462,98.403,92.829,89.593,99.641,94.719,91.035,88.361,88.755,100.0,78.666,90.449,80.813,74.766,71.111,71.996,72.498,63.777,63.73,60.668,60.405,69.441,59.842,67.834,63.15,59.095,70.022,67.696,69.544,66.84,59.795,64.555,61.045,82.433,11.263,71.482,71.53,78.299,70.926,63.36,55.464,48.31,41.869,58.736,55.865,56.792,57.3,55.057,58.136,58.024,49.872,58.066,36.874,28.226,41.641,56.809,63.12,79.089,88.379,84.916,79.484,85.345,88.474,77.546,73.163,88.941,91.866,90.633,92.804,90.377,90.155,83.109,79.897,94.353,88.355,97.171,97.978,91.148,82.679,86.406,91.089,91.489,89.575,85.377,74.065,59.8,73.749,63.79,68.198,89.342,88.236,89.754,73.707,62.36,68.778,62.648,61.403,53.736,45.894,60.262,53.221,43.837,48.914,57.791,55.429,48.575,48.549,39.56,34.733,36.605,57.085,61.702,37.114,47.168,37.575,28.776,28.968,53.203,50.177,81.865,92.817,97.058,92.529,94.863,87.667,87.254,94.987,69.126,84.754,97.835,88.678,73.527,80.674,56.206,81.722,55.984,78.42,61.517,70.249,53.938,63.904,50.931,39.584,46.318,45.397,52.366,60.219,42.185,45.039,60.848,53.597,50.243,44.362,49.757,43.915,52.221,74.186,68.293,70.482,67.869,55.123,39.936,38.118,38.501,47.437,42.909,50.935,47.701,44.811,49.328,40.75,58.598,54.033,51.366,50.153,50.457,43.041,68.915,65.476,98.666,93.462,89.999,79.532,64.95,42.496,61.421,70.465,57.635,48.363,50.679,55.343,49.925,44.087,54.926,78.234,62.856,84.676,69.746,69.86,69.568,64.585,54.375,73.844,76.153,75.118,65.872,53.365,58.263,60.35,58.52,53.131,57.031,59.268,51.72,56.93,57.456,67.002,57.097,63.149,53.622,53.18,54.71,49.985,52.939,61.111,51.217,49.476,73.791,61.583,53.328,75.028,71.357,58.742,53.029,60.04,58.627,62.701,58.598,96.004,83.654,82.96,92.128,98.954,99.312,94.581,77.337,86.806,77.223,73.85,84.664,94.276,89.012,75.07,51.157,44.691,53.963,85.053,83.952,68.234,51.821,57.121,53.61,64.621,59.166,68.605,62.982,57.103,64.011,58.503,63.993,57.874,46.42,51.457,48.927,59.154,53.52,56.32,59.131,39.722,42.371,37.801,65.542,51.547,41.958,58.789,54.136,56.318,79.873,54.22,48.801,51.935,76.745,75.532,66.619,54.327,61.242,72.749,73.814,88.911,86.961,57.57,54.699,52.784,67.444,84.431,92.864,78.863,62.923,78.983,96.632,86.207,80.034,62.421,79.682,72.899,76.955,63.844,68.132,69.316,46.42,79.269,87.691,73.802,78.791,87.044,80.351,81.661,72.545,76.081,88.229,77.091,85.92,76.063,63.712,69.191,86.596,67.749,72.451,51.888,56.165,56.277,50.996,52.76,56.32,71.015,53.012,41.725,51.791,46.258,47.342,53.245,51.558,45.739,45.224,42.915,42.108,44.333,45.595,70.506,85.873,89.073,86.997,59.782,52.306,52.821,76.578,91.219,86.213,67.868,69.998,43.806,45.942,38.555,77.959,57.205,50.488,60.631,73.031,72.08,79.592,79.736,60.614,55.704,56.703,42.078,48.592,53.222,40.804,70.614,53.615,45.912,68.682,53.526,59.728,89.006,86.757,61.851,47.329,75.985,60.859,57.892,41.952,41.264,40.823,49.261,42.67,37.992,35.774,30.373,43.495,32.621,45.768,36.76,42.946,78.54,65.907,54.07,67.42,65.661,77.355,92.823,95.586,100.0,97.787,68.335,58.161,53.107,84.605,62.42,50.458,41.044,45.691,34.685,35.355,55.883,81.201,39.83,43.028,42.587,52.121,51.492,49.28,50.279,46.545,36.94,45.912,61.738,46.898,55.601,83.313,79.562,70.142,73.473,67.336,65.428,47.33,53.406,51.175,58.55,43.298,39.513,35.732,38.012,44.68,45.811,51.977,43.52,41.068,52.557,51.313,48.783,50.434,38.459,46.534,37.699,39.039,29.446,53.963,54.375,85.973,81.452,86.38,75.71,69.897,70.381,93.665,91.19,100.006,100.0,100.048,83.391,71.835,73.653,80.915,83.887,100.013,94.569,89.766,86.68,82.458,93.762,81.016,65.219,67.05,70.459,63.174,71.469,79.329,81.782,81.465,76.153,78.504,71.661,63.862,71.614,76.308,61.654,53.179,45.996,52.928,54.638,47.413,53.341,52.407,46.647,73.323,70.907,69.622,67.104,60.847,56.642,52.0,43.417,41.085,39.823,44.542,42.329,61.816,60.823,65.973,63.312,87.482,69.364,59.95,60.787,58.168,64.149,56.899,52.258,56.785,76.529,88.995,81.722,80.106,56.672,65.811,45.577,42.952,64.178,49.632,58.442,40.827,37.448,32.519,35.882,48.908,32.687,36.946,40.965,51.463,42.186,41.455,40.845,44.362,38.172,30.521,35.36,40.014,66.404,67.014,50.338,40.75,46.827,47.694,54.471,52.367,55.112,40.912,50.512,44.136,44.62,42.58,44.53,44.932,46.695,40.553,41.324,56.518,54.973,75.921,61.475,86.722,83.767,80.83,82.211,82.092,82.296,77.75,75.125,77.9,68.473,63.084,70.781,81.59,75.723,63.114,52.815,46.815,39.356,40.672,34.147,54.722,50.29,36.683,45.343,38.154,48.652,41.988,37.568,43.424,43.148,36.88,34.35,47.162,35.898,31.807,29.912,38.627,34.96,35.678,31.348,29.487,31.742,31.586,42.012,29.093,36.57,30.684,32.449,34.386,43.657,35.912,41.828,42.533,40.988,40.421,48.375,69.443,67.385,77.517,66.247,74.359,62.122,61.452,61.499,65.31,62.336,68.712,68.318,86.638,82.643,75.058,70.34,69.077,57.893,50.195,51.684,45.349,62.929,57.139,48.184,52.438,31.881,36.809,45.906,35.989,32.257,25.516,26.652,39.973,33.531,30.983,34.016,41.283,48.161,38.854,48.813,38.639,50.668,33.788,31.827,35.846,31.39,41.628,51.655,59.556,58.67,42.156,38.346,35.78,43.388,39.213,34.727,41.779,49.046,45.356,39.721,67.904,68.569,74.125,67.636,61.223,66.625,64.089,59.406,61.583,61.781,72.702,72.816,76.721,64.191,56.834,53.981,52.628,83.33,77.164,65.775,50.625,68.922,51.331,47.748,48.908,47.49,53.114,54.789,88.122,73.426,66.978,53.149,68.718,91.369,73.808,79.407,71.596,56.152,52.623,39.727,35.72,37.143,51.666,63.043,55.362,51.924,54.477,56.386,54.149,54.908,50.332,52.998,54.232,54.734,54.986,55.152,57.778,50.344,42.874,45.888,57.581,56.463,64.878,64.627,60.195,59.531,64.19,64.017,72.756,64.376,61.702,65.142,69.944,55.722,61.433,51.642,43.316,48.323,60.727,68.091,48.633,62.426,57.342,50.194,51.26,50.751,51.277,41.396,70.303,46.313,36.969,45.488,43.819,44.07,59.041,75.214,57.049,45.912,34.817,41.989,39.888,40.786,51.499,81.142,85.412,15.36,83.259,93.91,87.493,71.787,53.981,54.638,64.388,67.564,67.067,71.631,75.465,63.29,63.666,78.859,83.794,88.969,93.095,92.796,92.617,87.808,91.718,93.185,93.257,90.903,91.844,90.652,90.652,89.406,96.64,100.024,100.0,97.707,97.179,91.154,88.909,73.829,92.437,99.91,84.423,79.746,88.753,80.465,100.001,89.855,95.25,96.125,35.201,82.087,99.186,98.06,94.156,81.945,74.973,81.363,94.976,94.856,93.724,83.968,77.327,76.416,76.236,74.317,86.244,86.686,69.437,64.005,98.786,86.824,80.214,82.487,78.168,94.402,95.323,95.472,81.637,99.599,97.279,99.072,100.03,100.0,99.88,100.0,100.001,100.0,93.259,100.001,100.0,100.018,100.0,100.001,97.046,97.619,100.0,99.988,98.26,92.261,91.148,100.012,98.882,95.909,78.976,73.994,65.004,68.175,100.0,97.428,87.966,90.998,85.4,83.946,82.057,76.643,82.606,84.102,76.924,78.719,85.753,69.095,77.152,74.323,79.359,82.17,70.656,76.315,76.65,77.893,82.26,81.208,80.513,80.19,80.017,82.666,80.979,80.651,95.597,96.387,98.989,100.0,100.059,99.999,100.006,100.001,99.851,100.031,99.964,96.292,99.395,98.17,99.785,97.554,94.186,91.782,83.971,82.464,78.037,76.5,77.517,77.229,92.949,97.943,90.849,100.006,98.307,96.25,91.674,89.348,78.564,77.72,75.466,86.841,88.157,96.388,92.684,91.19,89.162,89.09,88.486,92.206,91.31,81.59,92.547,89.091,92.763,100.0,97.572,95.353,94.473,92.326,90.681,89.222,86.823,84.838,84.0,91.793,100.0,98.145,100.0,100.006,99.641,99.85,100.001,99.869,99.599,100.0,100.0,100.0,100.0,100.0,100.001,100.0,100.001,98.87,99.988,98.242,98.941,96.842,97.087,98.493,95.49,89.933,77.014,91.872,92.326,90.029,91.243,90.645,94.139,87.726,73.33,93.366,96.029,96.07,98.588,97.835,98.277,92.901,95.658,91.913,96.5,89.796,82.757,75.082,89.456,83.198,84.885,81.757,77.188,74.425,80.519,77.391,73.928,74.036,73.958,72.493,92.781,95.568,98.821,99.007,100.0,96.644,93.582,94.803,96.238,95.383,96.268,97.303,100.0,100.001,95.28,93.294,87.457,84.993,79.316,75.184,77.595,73.234,85.585,74.705,95.234,89.097,77.355,75.842,73.671,69.077,69.167,70.555,67.875,69.454,70.519,66.105,69.227,66.853,65.65,72.247,64.537,65.399,63.897,71.458,71.362,71.326,62.175,72.181,51.959,56.887,51.983,52.072,52.252,61.816,93.863,85.639,69.556,64.49,82.637,79.628,92.979,89.976,94.551,92.35,94.964,93.977,91.638,87.643,85.335,88.511,97.135,98.966,100.042,95.592,92.219,78.593,75.47,71.242,77.325,67.797,56.642,52.013,63.611,54.424,55.703,73.139,47.682,57.163,58.162,48.927,53.801,48.419,53.615,56.104,64.782,67.235,65.859,66.96,65.482,57.766,89.437,89.281,78.103,63.981,64.412,54.023,52.204,61.062,52.832,75.244,74.664,64.483,53.7,49.573,48.275,49.985,42.496,41.138,39.53,41.055,64.573,64.31,91.214,79.078,69.352,71.002,63.216,64.208,52.856,47.067,44.77,44.836,43.705,56.153,37.342,42.473,56.314,42.073,58.634,50.757,44.099,36.82,36.241,42.413,36.623,31.826,38.388,36.289,30.062,34.906,28.447,29.458,36.545,31.557,32.58,31.641,47.808,46.396,46.659,37.221,75.369,80.035,53.597,50.224,40.529,37.204,34.972,42.341,70.303,46.785,41.696,43.938,44.71,43.753,37.974,33.1,43.693,35.074,32.292,35.098,60.518,51.241,62.527,64.633,63.221,66.518,58.85,61.415,54.818,43.592,31.311,44.219,35.29,41.026,41.204,51.822,47.892,41.522,35.397,40.703,34.159,36.706,90.406,63.151,46.833,40.386,32.861,33.052,32.066,51.403,33.082,56.002,63.616,56.23,42.98,41.377,41.785,31.539,42.131,41.492,38.399,58.311,45.14,34.512,32.574,42.574,38.172,41.726,55.003,53.58,56.672,67.181,58.192,61.835,61.194,60.853,60.123,70.621,65.231,64.239,87.23,83.941,85.388,85.107,83.378,84.461,82.595,81.422,83.312,65.232,61.11,67.51,62.312,85.31,74.401,62.407,61.469,73.335,66.002,64.262,60.237,58.179,61.912,60.171,58.658,57.012,56.81,57.45,56.708,57.689,57.157,56.834,56.487,58.617,57.557,58.156,59.034,58.867,58.61,56.283,55.714,56.026,56.433,56.912,56.319,56.738,56.912,55.829,56.379,56.391,59.615,59.901,58.419,60.022,62.935,58.951,60.356,64.316,60.62,59.34,82.774,82.739,83.205,85.819,84.7,85.878,80.543,78.695,75.112,68.946,59.106,63.066,63.324,63.138,69.909,76.261,74.424,62.402,64.884,64.998,61.87,60.577,61.542,68.389,63.718,63.048,59.686,59.28,57.533,58.322,63.365,64.328,60.698,66.803,63.365,64.329,63.03,63.797,63.377,64.441,61.78,60.495,68.647,82.499,74.49,75.848,73.156,80.675,73.461,76.955,82.087,69.579,72.312,94.694,91.723,81.948,73.51,72.445,74.658,68.599,86.296,92.883,90.891,100.001,98.93,94.785,95.036,94.706,99.324,88.02,82.523,67.098,78.63,74.305,97.924,78.019,76.662,73.174,73.378,86.716,81.393,75.854,71.135,68.808,70.346,64.562,62.498,64.173,62.731,63.114,62.247,74.76,77.218,72.557,70.423,69.287,72.446,68.975,62.474,74.508,72.152,70.31,71.146,78.265,70.747,66.02,68.036,64.687,67.756,66.445,60.464,60.327,59.537,60.824,61.272,60.811,59.13,61.17,60.32,57.886,80.657,83.797,89.544,94.898,95.137,99.988,98.368,96.914,92.105,100.0,93.965,100.001,100.001,100.0,92.864,100.0,100.0,96.011,99.701,96.028,100.001,96.979,95.143,93.313,93.57,93.331,99.994,91.267,90.783,99.994,94.809,92.511,90.413,99.474,92.297,90.514,85.472,91.578,96.967,89.629,78.684,97.996,90.885,74.209,81.058,87.631,68.311,80.412,71.637,77.696,69.502,85.502,90.837,72.289,73.455,85.61,94.497,74.436,69.651,79.252,91.8,95.694,99.988,100.007,100.005,100.0,100.006,100.0,89.485,92.499,99.91,98.009,94.706,100.006,87.241,80.394,94.557,96.219,82.709,16.107,79.598,94.641,83.978,84.634,98.061,70.824,71.325,77.033,80.341,77.279,78.647,80.723,82.098,79.484,79.826,80.884,82.769,75.859,78.779,84.7,77.571,83.527,91.039,89.928,90.909,83.9,73.64,74.73,72.803,74.616,76.41,88.276,83.683,92.511,90.156,93.948,98.6,79.496,76.314,80.208,94.431,98.445,99.917,96.61,95.712,99.999,83.013,99.486,91.4,89.956,85.741,87.559,82.475,92.661,80.245,74.61,79.46,85.902,88.493,85.592,81.703,78.066,93.026,67.115,66.325,83.953,79.694,14.194,79.545,75.106,76.787,76.811,91.429,81.507,85.495,63.036,62.097,67.074,90.657,80.674,80.669,71.96,76.936,73.072,68.605,66.643,69.771,67.672,89.892,86.782,81.046,88.062,100.006,92.033,96.806,90.838,81.877,90.448,83.432,67.923,90.221,90.167,92.142,84.849,75.286,90.37,77.6,76.428,64.041,80.089,81.924,69.311,76.661,90.053,78.187,73.287,89.569,86.214,90.939,75.232,94.396,82.989,77.936,67.445,77.828,71.553,79.041,72.283,65.859,60.961,52.486,61.463,67.474,52.066,50.739,49.124,49.961,52.336,57.929,66.476,62.767,53.658,72.366,66.422,80.68,64.209,76.572,82.918,84.855,67.277,70.046,65.033,65.136,67.008,87.947,73.001,60.5,65.686,63.359,67.426,91.028,80.035,75.956,89.88,86.364,66.655,53.993,62.42,63.449,82.75,100.006,91.243,73.683,80.317,70.165,53.981,66.427,48.0,69.939,79.304,55.637,59.818,50.625,52.39,63.354,62.487,52.737,62.235,58.999,61.624,43.926,48.735,71.661,65.196,81.494,63.413,65.297,67.132,69.956,62.821,64.328,62.043,61.763,75.537,57.384,52.156,48.532,53.765,51.001,45.859,57.414,54.488,79.562,88.39,92.087,80.501,78.037,82.277,95.879,95.006,100.0,98.756,99.999,100.0,91.399,95.412,72.761,84.043,75.411,87.451,78.331,92.386,81.763,77.846,69.616,76.691,69.61,70.356,51.474,62.982,64.836,53.328,67.163,53.968,53.137,60.871,57.718,50.153,51.24,50.243,55.04,58.174,88.904,79.412,76.482,87.524,80.107,67.69,72.875,58.424,42.365,46.115,62.163,64.902,57.317,54.764,55.345,77.738,66.636,82.564,63.389,68.508,66.428,65.632,54.973,60.273,54.371,52.359,45.296,34.212,61.804,68.605,93.056,93.337,88.157,70.824,70.195,58.891,74.826,69.729,46.211,54.076,44.231,42.934,79.215,80.62,78.073,73.766,69.322,58.007,46.642,37.371,53.209,40.534,60.566,43.842,37.688,33.387,31.054,35.888,48.472,47.468,75.256,53.819,48.125,46.224,53.502,44.428,31.97,45.409,35.869,37.598,31.76,36.947,42.215,29.56,43.866,45.362,37.837,45.942,42.502,37.072,30.223,30.69,53.232,33.339,33.482,42.717,34.548,26.807,53.519,56.229,76.577,73.144,67.994,76.512,67.468,61.517,33.483,42.269,69.998,65.763,81.907,73.186,73.689,76.392,98.9,100.0,98.869,91.459,80.752,81.542,73.67,86.554,65.662,72.971,70.871,74.647,68.384,70.064,85.597,84.605,97.62,93.953,97.978,98.47,99.731,98.828,97.021,92.344,96.412,84.934,88.702,87.912,71.153,65.62,64.179,67.994,48.466,57.348,54.727,68.156,59.674,66.158,59.447,68.198,58.358,82.11,55.458,69.412,80.675,81.93,98.17,99.993,98.81,90.395,84.347,75.047,71.23,75.675,66.29,67.403,70.818,67.6,89.371,82.941,82.774,80.712,80.298,85.52,81.973,73.731,40.631,60.871,68.395,69.794,54.077,64.364,49.746,56.498,51.828,71.781,57.982,65.423,47.521,68.73,76.583,86.584,83.569,87.433,76.781,67.57,88.636,82.337,83.193,84.97,84.089,84.0,81.172,86.506,57.852,57.139,46.677,41.276,79.886,81.537,91.005,77.259,61.349,55.17,68.109,69.46,80.674,71.272,74.269,64.723,59.74,62.014,65.314,72.737,57.198,43.394,56.642,53.257,96.848,97.757,93.655,62.599,90.753,71.619,48.244,81.59,59.771,51.098,46.019,60.734,52.132,88.379,51.385,52.701,37.508,60.967,45.93,33.776,37.113,68.527,69.49,71.278,68.27,75.609,73.569,85.214,74.353,74.322,90.389,67.995,55.045,57.186,58.377,51.505,43.591,43.494,45.062,78.779,55.422,57.965,46.768,48.466,51.822,42.251,64.693,69.527,90.383,85.985,89.993,73.977,70.483,62.492,68.185,72.451,71.47,86.435,96.693,81.201,72.475,59.991,52.701,54.74,47.91,59.603,67.952,60.243,68.0,29.326,66.608,68.151,64.687,66.153,43.046,64.405,66.074,64.118,65.201,59.232,60.374,52.737,47.987,51.3,87.888,55.577,51.618,67.146,57.403,32.197,61.403,41.152,40.194,54.579,76.207,75.8,71.417,59.154,56.469,44.381,47.3,42.981,44.554,76.351,91.136,56.846,61.242,67.288,67.211,56.277,68.604,88.301,88.276,78.294,72.068,77.326,84.533,93.349,83.863,70.853,70.422,68.581,62.576,68.569,54.609,73.754,58.334,50.66,52.024,66.769,58.502,34.883,29.684,69.597,72.546,54.465,44.578,69.401,68.635,48.113,57.222,41.175,62.708,59.483,48.562,50.817,33.776,69.304,43.777,42.73,56.193,40.278,30.948,85.131,70.291,50.135,48.513,47.891,61.942,88.002,88.528,69.358,43.077,43.848,41.617,41.462,68.341,72.182,82.941,92.164,100.001,99.88,93.361,87.967,84.765,85.68,80.149,78.193,76.5,88.39,81.213,76.47,68.191,69.293,65.381,70.231,55.59,57.354,61.194,37.448,39.435,31.772,65.883,64.017,70.973,62.222,52.414,92.499,91.609,87.732,86.04,80.274,90.466,84.46,53.622,44.027,42.79,63.024,86.698,91.908,94.581,100.001,88.2,98.552,89.354,75.59,61.289,65.189,64.526,75.016,75.034,67.899,65.1,57.588,63.927,88.623,91.106,95.282,94.169,75.979,76.453,63.926,82.332,74.448,70.482,68.891,61.835,74.495,85.645,64.005,69.358,80.005,72.846,63.299,75.985,66.446,56.659,61.678,67.474,53.311,56.14,52.174,53.454,66.314,64.674,66.374,53.67,62.749,64.794,40.929,49.519,62.079,55.123,93.05,91.483,65.177,75.07,67.008,54.848,62.875,59.776,53.167,51.211,70.153,57.743,57.581,72.977,68.635,92.224,81.046,75.148,74.168,72.385,68.563,65.13,59.119,82.738,83.755,86.076,97.015,95.837,92.858,96.722,93.008,94.67,90.035,91.274,93.283,86.597,87.045,83.468,90.932,83.581,81.333,91.399,100.012,99.987,91.806,83.163,84.155,83.575,90.496,80.866,77.697,69.203,67.319,57.491,41.958,80.418,91.859,84.862,67.707,70.531,61.081,57.401,53.622,70.142,55.452,58.688,61.325,43.178,33.262,45.673,51.068,53.508,70.094,87.317,100.0,100.0,79.389,98.294,78.442,67.267,76.975,73.747,73.657,74.7,59.617,64.565,65.52,67.094,69.115,68.193,70.084,61.975,68.033,71.137,92.255,99.999,100.0,96.286,99.205,91.125,86.68,77.895,70.808,71.339,72.847,69.325,89.969,86.381,88.044,99.958,94.922,77.315,73.379,77.236,77.41,73.648,86.411,84.522,97.087,71.471,72.404,72.901,86.74,65.533,69.916,61.143,61.591,68.194,66.37,54.103,57.249,72.499,62.153,80.856,85.114,80.927,77.727,71.92,66.722,92.841,92.65,98.397,99.049,99.982,100.0,99.953,99.994,82.238,81.813,78.984,92.685,97.919,98.864,91.812,88.23,76.596,75.395,76.609,75.634,78.433,72.607,70.741,70.0,52.362,73.074,72.183,85.143,86.28,75.951,70.503,65.49,67.775,66.867,65.705,84.994,85.927,78.767,67.512,91.836,84.857,70.443,64.594,61.806,60.82,70.486,75.341,70.556,73.379,90.425,63.325,50.866,41.513,47.728,45.962,54.983,37.602,69.133,64.48,48.099,53.947,73.133,72.183,60.932,86.429,71.053,65.789,61.478,87.806,67.41,64.605,64.456,62.345,75.759,79.773,78.271,73.259,69.521,85.688,66.693,64.743,79.42,56.741,68.272,89.85,92.656,93.337,88.295,88.822,96.508,90.503,97.416,92.279,88.654,40.371,89.48,76.542,71.889,78.774,77.338,72.172,53.552,43.427,76.292,52.679,55.562,81.357,68.936,67.273,63.492,61.753,77.249,75.461,91.526,87.219,79.037,77.787,86.794,77.93,77.996,61.023,63.678,80.843,87.279,96.454,98.397,100.06,93.565,91.334,88.63,94.539,91.932,91.61,89.755,88.015,89.24,89.791,87.058,82.267,89.03,89.228,81.537,73.45,83.068,72.942,80.12,62.883,51.477,48.397,65.771,67.584,70.335,46.944,38.893,47.512,49.294,49.821,47.996,49.917,65.951,66.46,71.399,68.122,61.477,69.964,70.173,70.718,71.759,81.765,82.148,84.587,82.686,79.007,85.138,83.2,75.431,82.285,66.598,70.209,66.34,62.937,82.064,79.6,86.34,99.318,100.001,100.0,94.827,91.125,90.329,84.45,75.79,79.874,96.011,96.065,85.909,71.4,57.225,80.867,82.805,73.714,99.234,74.384,70.724,67.948,59.456,56.082,71.871,60.91,62.482,64.695,72.058,65.963,54.976,79.462,94.15,81.016,64.899,57.895,57.16,51.537,41.585,39.516,38.941,41.34,43.307,62.465,66.268,53.104,42.028,46.543,45.89,45.443,70.904,64.916,42.124,46.519,47.177,70.173,68.918,85.927,87.32,79.569,77.601,83.146,73.912,72.661,62.877,67.99,62.153,83.63,72.595,50.956,56.944,50.622,56.292,51.256,62.733,39.629,41.412,53.744,55.604,54.241,55.772,50.556,60.933,50.747,69.814,53.146,44.12,45.944,69.485,61.687,61.017,58.224,61.753,49.779,43.482,63.625,48.769,47.852,42.207,38.206,37.596,37.363,38.57,43.229,35.902,36.304,42.362,42.68,36.61,39.863,39.63,38.505,35.013,37.901,34.498,61.723,60.527,61.765,65.048,60.724,61.662,60.551,61.651,52.362,52.47,46.304,50.257,43.385,52.661,43.2,45.951,46.855,48.786,61.095,66.005,59.791,60.969,38.559,38.439,39.444,43.779,40.742,45.484,42.195,39.019,36.86,42.835,39.264,43.84,40.221,42.65,42.805,40.448,34.164,36.532,38.171,37.829,44.169,37.846,37.488,34.51,30.401,43.75,38.643,35.126,37.482,36.256,34.007,39.773,43.595,40.741,41.148,42.237,29.826,33.923,60.987,54.796,53.032,52.488,56.077,63.445,54.115,53.522,44.88,23.648,40.293,28.248,29.725,44.965,53.026,38.547,30.993,48.84,51.776,53.169,44.39,51.711,55.891,69.258,62.154,66.705,67.859,61.363,60.461,61.185,44.976,57.727,63.468,63.379,65.796,67.404,64.564,64.605,64.049,56.076,55.401,46.717,55.251,52.668,70.933,78.308,52.405,71.489,67.303,76.298,59.162,69.94,87.381,72.56,92.53,87.637,75.491,75.078,72.937,71.071,93.564,92.459,100.0,99.999,100.001,96.71,92.818,99.588,97.477,95.018,95.419,81.215,77.429,80.132,68.983,71.537,85.873,78.033,74.259,73.547,81.771,73.057,70.891,86.233,87.728,80.096,68.153,69.036,71.472,71.375,74.384,84.265,70.102,79.431,69.869,71.496,66.789,69.229,69.138,64.037,68.397,91.598,74.737,76.311,84.684,78.721,77.027,81.855,68.863,61.848,59.743,66.52,59.995,56.34,57.201,61.884,59.832,64.067,59.635,58.935,79.528,85.412,98.475,98.05,90.939,82.637,74.666,90.832,91.926,99.999,100.001,97.608,99.367,99.468,99.827,96.675,94.79,97.835,100.001,96.196,95.784,100.0,95.096,99.193,98.756,97.673,87.967,93.637,91.597,96.794,89.923,93.487,97.757,99.037,98.481,100.001,97.824,100.0,98.38,91.64,89.821,72.285,74.421,69.599,84.6,85.017,93.23,80.593,75.843,83.78,70.461,86.112,81.783,82.553,95.765,50.568,53.421,55.293,72.243,59.934,65.28,88.398,99.994,100.0,99.999,100.012,100.0,68.559,100.0,100.006,98.038,99.403,99.995,99.054,87.619,96.692,86.154,94.772,86.543,97.057,82.972,77.195,62.213,62.523,66.764,80.999,84.869,67.177,69.7,71.023,67.38,69.629,64.76,56.196,65.478,70.389,54.067,90.393,83.451,77.643,72.476,73.648,66.041,61.884,57.985,76.471,69.851,67.722,81.351,72.876,71.967,65.652,71.722,54.192,60.22,60.28,70.179,58.983,57.614,64.629,76.986,68.553,95.91,99.874,99.263,99.646,78.594,80.096,66.603,68.953,85.079,92.979,82.338,82.178,74.725,68.187,71.794,83.187,95.305,66.842,64.228,76.178,52.925,62.368,62.237,61.322,61.77,89.21,74.88,72.189,59.618,54.784,63.636,60.011,55.484,64.115,66.824,62.942,59.91,47.434,43.326,39.833,58.451,55.479,46.011,46.806,54.115,60.843,51.286,46.477,45.185,38.732,58.205,62.902,80.61,64.426,61.783,61.837,66.979,42.56,77.853,81.789,85.281,85.209,79.569,91.884,59.701,63.344,64.976,58.637,60.706,58.887,71.716,78.325,82.399,54.294,52.297,72.679,67.099,65.802,68.11,68.774,61.938,81.321,74.97,73.559,74.773,62.799,59.486,56.926,56.55,66.741,55.538,58.595,52.846,57.004,60.395,58.624,60.569,52.207,66.806,63.631,58.941,51.793,58.271,47.828,51.68,80.078,67.954,61.991,83.456,82.655,70.813,57.19,57.22,53.691,76.585,89.469,87.117,68.529,87.852,82.716,93.218,100.011,93.719,77.441,72.123,88.66,76.819,81.333,91.394,77.667,84.533,64.152,71.226,49.564,63.858,49.66,64.851,81.764,64.008,48.673,44.797,58.427,62.984,52.823,78.278,78.379,76.423,67.111,76.764,79.007,72.213,91.812,85.939,80.813,93.894,81.131,80.161,82.046,88.809,74.366,69.379,62.996,65.627,60.227,56.741,63.427,53.929,55.67,71.675,72.775,67.398,58.99,71.214,64.497,57.01,57.309,75.544,58.103,80.85,84.192,96.537,90.203,91.136,69.838,68.917,67.243,83.033,72.303,70.64,64.414,68.779,78.744,78.929,66.818,66.944,62.925,69.037,64.826,62.518,53.014,77.213,62.877,52.858,58.559,52.595,55.497,54.372,55.987,75.061,61.154,66.89,59.802,47.841,55.113,56.961,53.433,35.67,53.11,56.465,61.43,50.503,56.005,60.503,58.852,50.629,54.671,51.304,54.001,56.573,55.933,64.342,67.208,60.479,46.95,39.994,36.244,47.991,56.932,78.433,69.294,84.168,88.936,83.32,72.614,66.184,63.224,52.889,88.487,83.81,95.95,76.555,84.91,88.009,81.148,68.427,71.448,90.215,69.325,64.186,60.059,60.089,42.453,51.908,41.938,42.003,56.98,57.901,53.183,51.53,45.562,45.191,47.237,48.434,57.459,60.137,56.387,62.703,64.94,58.217,59.251,59.126,47.936,65.49,58.026,49.331,49.241,59.791,60.042,49.091,74.606,55.682,57.058,48.164,63.415,60.796,43.469,52.596,46.83,61.693,72.153,76.4,79.94,86.423,79.396,76.49,75.269,74.349,93.517,77.512,71.877,75.275,74.079,78.726,70.407,81.064,85.682,83.924,75.173,86.19,87.56,87.022,83.063,87.069,95.671,84.396,82.542,84.414,73.343,91.076,78.738,80.156,62.034,79.288,75.837,67.548,70.64,52.752,65.706,46.328,64.264,61.334,50.897,48.744,42.674,38.732,44.737,40.987,44.156,82.823,62.069,81.286,72.632,59.755,54.731,46.089,60.359,53.894,61.005,83.852,85.0,95.449,99.54,87.997,81.382,68.356,95.502,96.125,94.904,79.36,78.924,93.786,96.878,99.987,90.968,100.0,97.995,100.0,99.994,95.06,97.261,100.006,64.306,99.988,100.0,100.0,99.999,100.03,96.735,98.116,96.657,100.001,100.001,100.0,99.988,100.0,99.856,100.001,100.024,100.0,92.703,97.183,93.828,80.078,76.101,76.274,96.208,97.626,94.48,89.964,77.948,67.087,72.255,84.743,90.149,83.864,75.604,62.237,50.377,80.048,71.77,94.774,65.526,88.54,83.936,77.739,98.02,85.651,64.82,79.008,74.647,77.141,62.997,75.927,84.76,84.64,71.19,85.778,63.181,62.571,89.898,83.744,76.183,64.27,56.16,49.623,51.184,61.501,93.494,70.76,51.717,47.567,84.611,89.582,85.628,79.408,64.917,61.86,59.713,51.22,58.642,78.475,63.356,54.306,42.817,57.166,51.891,71.997,43.667,44.056,58.362,47.16,35.784,67.757,69.683,49.617,47.71,53.236,50.52,66.226,78.146,88.361,83.499,100.0,92.637,89.181,92.207,86.663,84.534,79.126,73.165,57.882,63.78,91.399,92.865,92.44,96.896,89.384,83.863,84.449,83.289,75.222,72.769,65.909,75.634,65.862,54.551,63.576,79.186,48.188,99.348,87.38,77.829,98.983,78.235,45.639,55.753,57.32,49.91,57.757,50.257,42.949,88.972,81.052,62.477,62.427,77.207,49.762,59.575,59.618,51.986,73.774,52.841,48.75,41.178,45.305,37.5,40.323,30.975,51.812,63.996,58.29,86.298,94.055,91.914,80.156,95.037,89.45,85.813,95.419,95.006,87.536,95.168,95.79,86.877,79.438,67.805,64.246,62.578,58.547,46.908,47.847,41.107,34.91,52.914,55.568,60.605,55.975,44.51,39.922,72.093,78.486,43.714,47.189,45.819,47.848,43.278,48.817,34.312,49.874,36.644,30.06,38.9,31.262,28.523,34.833,42.386,46.956,45.496,51.017,39.001,52.051,43.744,60.825,84.139,76.878,65.186,75.137,61.877,54.061,73.271,74.79,59.689,74.839,61.56,67.158,84.689,72.183,57.446,64.33,60.598,57.823,70.15,73.833,61.256,71.382,55.299,65.449,55.796,64.33,50.179,95.508,97.452,96.4,100.013,97.769,92.996,92.303,94.713,87.052,92.178,73.109,90.419,87.422,67.739,65.64,63.338,58.517,54.564,60.556,48.44,48.254,60.234,70.664,53.183,44.156,55.46,43.074,55.096,45.741,43.008,54.193,49.462,78.355,71.931,83.026,80.114,66.639,55.34,80.957,95.958,100.0,81.142,88.224,81.352,72.316,85.736,75.269,67.087,73.852,90.054,84.408,83.96,63.912,74.874,73.169,66.208,53.888,78.876,77.016,58.655,64.247,68.703,84.33,71.136,69.743,28.027,72.524,64.563,46.537,54.019,62.818,67.895,70.557,61.089,43.612,81.292,74.3,58.571,69.24,66.286,55.0,77.823,64.018,59.51,54.246,60.951,90.772,93.547,84.468,91.711,93.905,87.129,91.423,80.155,80.532,84.958,84.558,80.801,98.612,100.029,99.999,93.726,100.114,100.001,96.106,99.982,100.097,99.073,100.0,98.576,99.905,100.0,100.012,100.006,99.994,92.482,95.443,94.324,97.673,85.777,80.048,100.0,91.902,95.646,99.898,93.649,83.008,81.507,95.838,85.413,73.05,74.163,60.879,75.849,62.087,84.271,81.136,75.138,77.591,70.976,63.379,70.599,82.357,72.668,84.247,80.472,65.389,67.769,65.694,80.048,80.287,60.61,49.707,80.987,64.611,72.811,88.576,89.952,68.857,73.888,93.307,100.0,100.029,98.086,85.09,99.133,91.776,77.608,81.908,82.626,78.773,80.85,93.11,74.079,87.404,75.711,84.474,73.032,62.326,54.51,62.662,76.483,86.202,62.567,72.123,68.379,79.018,78.6,76.029,66.716,64.928,63.313,79.151,80.807,58.948,78.325,72.476,55.526,64.354,84.205,85.042,70.802,62.279,56.447,57.96,73.392,56.023,60.138,60.825,54.982,54.528,63.582,50.467,49.295,50.09,45.681,46.19,42.788,63.899,68.864,72.554,76.943,65.981,64.809,87.314,77.428,80.981,67.195,46.293,45.323,49.557,83.248,76.262,52.314,84.718,73.517,86.059,92.738,88.038,84.617,73.911,69.719,67.548,66.579,56.734,54.653,64.946,66.244,90.538,65.197,68.493,71.807,73.386,67.853,65.939,60.371,55.371,60.544,65.939,60.999,62.028,66.197,70.819,56.956,89.144,90.294,80.957,62.859,60.831,69.019,62.644,61.412,61.119,65.013,57.111,65.563,68.547,76.561,86.633,95.15,83.349,88.277,75.897,62.979,64.031,35.957,34.474,37.96,66.837,83.35,83.433,56.107,40.628,48.72,60.807,51.065,60.215,51.089,51.292,54.803,53.81,49.683,68.469,52.464,67.835,65.167,56.723,59.539,65.029,58.57,60.944,52.775,41.961,48.188,54.832,48.26,46.525,49.264,43.266,41.124,46.514,40.018,35.162,47.799,45.455,50.132,49.987,43.857,48.229,52.769,45.796,44.821,50.742,46.68,43.672,57.685,44.318,44.121,74.916,68.846,70.455,71.561,62.613,65.61,80.203,70.802,67.064,71.005,78.194,76.196,83.044,84.168,76.154,89.731,73.727,72.799,88.104,72.96,71.058,68.014,67.679,60.185,65.813,57.841,73.002,71.567,68.636,63.917,65.58,66.962,47.53,59.97,35.503,44.24,74.587,80.221,71.878,69.389,65.533,58.583,63.709,53.296,57.758,51.245,49.02,39.199,56.878,49.582,44.289,50.622,56.191,48.302,59.779,51.776,50.084,64.265,56.753,52.291,91.59,96.065,99.869,97.518,90.245,85.048,90.383,87.44,72.53,64.923,61.609,59.57,79.031,72.883,62.99,81.49,92.19,78.565,78.66,62.924,71.424,71.65,56.621,46.226,55.372,69.546,62.488,73.857,69.934,61.375,59.958,67.081,57.457,72.679,66.519,61.154,85.113,89.983,77.255,71.34,57.112,57.076,66.914,55.61,54.223,61.471,67.948,54.815,63.229,60.354,60.928,65.491,55.79,57.051,57.942,62.8,74.588,76.292,66.453,65.424,89.665,100.006,85.819,100.0,92.542,80.186,79.247,81.621,76.011,61.465,50.306,50.819,83.176,75.497,75.718,81.011,96.525,87.242,76.735,88.923,83.983,88.253,82.291,86.214,86.447,79.246,78.9,90.18,83.935,73.481,81.172,90.74,75.992,83.863,80.526,79.312,80.597,71.262,72.501,78.708,76.687,66.777,81.358,95.233,62.548,66.365,85.424,66.418,75.843,76.424,65.126,78.145,76.525,64.934,70.037,70.419,64.84,68.14,67.614,72.195,87.572,88.326,89.755,84.582,82.315,88.69,76.447,81.932,83.181,74.642,78.332,69.492,69.102,61.621,55.819,57.913,61.933,56.345,74.916,56.526,59.39,76.221,60.772,57.673,68.493,73.739,65.054,66.232,66.632,61.161,62.483,52.942,52.883,66.166,57.768,54.79,54.014,57.758,55.885,52.434,47.369,43.463,51.4,54.008,48.941,51.608,55.556,46.273,62.512,51.693,48.588,62.081,65.671,60.245,67.973,67.416,53.804,71.161,56.663,71.615,68.708],&quot;times&quot;:[1488729660,1488729720,1488729780,1488729840,1488729900,1488729960,1488730020,1488730080,1488730140,1488730200,1488730260,1488730320,1488730380,1488730440,1488730500,1488730560,1488730620,1488730680,1488730740,1488730800,1488730860,1488730920,1488730980,1488731040,1488731100,1488731160,1488731220,1488731280,1488731340,1488731400,1488731460,1488731520,1488731580,1488731640,1488731700,1488731760,1488731820,1488731880,1488731940,1488732000,1488732060,1488732120,1488732180,1488732240,1488732300,1488732360,1488732420,1488732480,1488732540,1488732600,1488732660,1488732720,1488732780,1488732840,1488732900,1488732960,1488733020,1488733080,1488733140,1488733200,1488733260,1488733320,1488733380,1488733440,1488733500,1488733560,1488733620,1488733680,1488733740,1488733800,1488733860,1488733920,1488733980,1488734040,1488734100,1488734160,1488734220,1488734280,1488734340,1488734400,1488734460,1488734520,1488734580,1488734640,1488734700,1488734760,1488734820,1488734880,1488734940,1488735000,1488735060,1488735120,1488735180,1488735240,1488735300,1488735360,1488735420,1488735480,1488735540,1488735600,1488735660,1488735720,1488735780,1488735840,1488735900,1488735960,1488736020,1488736080,1488736140,1488736200,1488736260,1488736320,1488736380,1488736440,1488736500,1488736560,1488736620,1488736680,1488736740,1488736800,1488736860,1488736920,1488736980,1488737040,1488737100,1488737160,1488737220,1488737280,1488737340,1488737400,1488737460,1488737520,1488737580,1488737640,1488737700,1488737760,1488737820,1488737880,1488737940,1488738000,1488738060,1488738120,1488738180,1488738240,1488738300,1488738360,1488738420,1488738480,1488738540,1488738600,1488738660,1488738720,1488738780,1488738840,1488738900,1488738960,1488739020,1488739080,1488739140,1488739200,1488739260,1488739320,1488739380,1488739440,1488739500,1488739560,1488739620,1488739680,1488739740,1488739800,1488739860,1488739920,1488739980,1488740040,1488740100,1488740160,1488740220,1488740280,1488740340,1488740400,1488740460,1488740520,1488740580,1488740640,1488740700,1488740760,1488740820,1488740880,1488740940,1488741000,1488741060,1488741120,1488741180,1488741240,1488741300,1488741360,1488741420,1488741480,1488741540,1488741600,1488741660,1488741720,1488741780,1488741840,1488741900,1488741960,1488742020,1488742080,1488742140,1488742200,1488742260,1488742320,1488742380,1488742440,1488742500,1488742560,1488742620,1488742680,1488742740,1488742800,1488742860,1488742920,1488742980,1488743040,1488743100,1488743160,1488743220,1488743280,1488743340,1488743400,1488743460,1488743520,1488743580,1488743640,1488743700,1488743760,1488743820,1488743880,1488743940,1488744000,1488744060,1488744120,1488744180,1488744240,1488744300,1488744360,1488744420,1488744480,1488744540,1488744600,1488744660,1488744720,1488744780,1488744840,1488744900,1488744960,1488745020,1488745080,1488745140,1488745200,1488745260,1488745320,1488745380,1488745440,1488745500,1488745560,1488745620,1488745680,1488745740,1488745800,1488745860,1488745920,1488745980,1488746040,1488746100,1488746160,1488746220,1488746280,1488746340,1488746400,1488746460,1488746520,1488746580,1488746640,1488746700,1488746760,1488746820,1488746880,1488746940,1488747000,1488747060,1488747120,1488747180,1488747240,1488747300,1488747360,1488747420,1488747480,1488747540,1488747600,1488747660,1488747720,1488747780,1488747840,1488747900,1488747960,1488748020,1488748080,1488748140,1488748200,1488748260,1488748320,1488748380,1488748440,1488748500,1488748560,1488748620,1488748680,1488748740,1488748800,1488748860,1488748920,1488748980,1488749040,1488749100,1488749160,1488749220,1488749280,1488749340,1488749400,1488749460,1488749520,1488749580,1488749640,1488749700,1488749760,1488749820,1488749880,1488749940,1488750000,1488750060,1488750120,1488750180,1488750240,1488750300,1488750360,1488750420,1488750480,1488750540,1488750600,1488750660,1488750720,1488750780,1488750840,1488750900,1488750960,1488751020,1488751080,1488751140,1488751200,1488751260,1488751320,1488751380,1488751440,1488751500,1488751560,1488751620,1488751680,1488751740,1488751800,1488751860,1488751920,1488751980,1488752040,1488752100,1488752160,1488752220,1488752280,1488752340,1488752400,1488752460,1488752520,1488752580,1488752640,1488752700,1488752760,1488752820,1488752880,1488752940,1488753000,1488753060,1488753120,1488753180,1488753240,1488753300,1488753360,1488753420,1488753480,1488753540,1488753600,1488753660,1488753720,1488753780,1488753840,1488753900,1488753960,1488754020,1488754080,1488754140,1488754200,1488754260,1488754320,1488754380,1488754440,1488754500,1488754560,1488754620,1488754680,1488754740,1488754800,1488754860,1488754920,1488754980,1488755040,1488755100,1488755160,1488755220,1488755280,1488755340,1488755400,1488755460,1488755520,1488755580,1488755640,1488755700,1488755760,1488755820,1488755880,1488755940,1488756000,1488756060,1488756120,1488756180,1488756240,1488756300,1488756360,1488756420,1488756480,1488756540,1488756600,1488756660,1488756720,1488756780,1488756840,1488756900,1488756960,1488757020,1488757080,1488757140,1488757200,1488757260,1488757320,1488757380,1488757440,1488757500,1488757560,1488757620,1488757680,1488757740,1488757800,1488757860,1488757920,1488757980,1488758040,1488758100,1488758160,1488758220,1488758280,1488758340,1488758400,1488758460,1488758520,1488758580,1488758640,1488758700,1488758760,1488758820,1488758880,1488758940,1488759000,1488759060,1488759120,1488759180,1488759240,1488759300,1488759360,1488759420,1488759480,1488759540,1488759600,1488759660,1488759720,1488759780,1488759840,1488759900,1488759960,1488760020,1488760080,1488760140,1488760200,1488760260,1488760320,1488760380,1488760440,1488760500,1488760560,1488760620,1488760680,1488760740,1488760800,1488760860,1488760920,1488760980,1488761040,1488761100,1488761160,1488761220,1488761280,1488761340,1488761400,1488761460,1488761520,1488761580,1488761640,1488761700,1488761760,1488761820,1488761880,1488761940,1488762000,1488762060,1488762120,1488762180,1488762240,1488762300,1488762360,1488762420,1488762480,1488762540,1488762600,1488762660,1488762720,1488762780,1488762840,1488762900,1488762960,1488763020,1488763080,1488763140,1488763200,1488763260,1488763320,1488763380,1488763440,1488763500,1488763560,1488763620,1488763680,1488763740,1488763800,1488763860,1488763920,1488763980,1488764040,1488764100,1488764160,1488764220,1488764280,1488764340,1488764400,1488764460,1488764520,1488764580,1488764640,1488764700,1488764760,1488764820,1488764880,1488764940,1488765000,1488765060,1488765120,1488765180,1488765240,1488765300,1488765360,1488765420,1488765480,1488765540,1488765600,1488765660,1488765720,1488765780,1488765840,1488765900,1488765960,1488766020,1488766080,1488766140,1488766200,1488766260,1488766320,1488766380,1488766440,1488766500,1488766560,1488766620,1488766680,1488766740,1488766800,1488766860,1488766920,1488766980,1488767040,1488767100,1488767160,1488767220,1488767280,1488767340,1488767400,1488767460,1488767520,1488767580,1488767640,1488767700,1488767760,1488767820,1488767880,1488767940,1488768000,1488768060,1488768120,1488768180,1488768240,1488768300,1488768360,1488768420,1488768480,1488768540,1488768600,1488768660,1488768720,1488768780,1488768840,1488768900,1488768960,1488769020,1488769080,1488769140,1488769200,1488769260,1488769320,1488769380,1488769440,1488769500,1488769560,1488769620,1488769680,1488769740,1488769800,1488769860,1488769920,1488769980,1488770040,1488770100,1488770160,1488770220,1488770280,1488770340,1488770400,1488770460,1488770520,1488770580,1488770640,1488770700,1488770760,1488770820,1488770880,1488770940,1488771000,1488771060,1488771120,1488771180,1488771240,1488771300,1488771360,1488771420,1488771480,1488771540,1488771600,1488771660,1488771720,1488771780,1488771840,1488771900,1488771960,1488772020,1488772080,1488772140,1488772200,1488772260,1488772320,1488772380,1488772440,1488772500,1488772560,1488772620,1488772680,1488772740,1488772800,1488772860,1488772920,1488772980,1488773040,1488773100,1488773160,1488773220,1488773280,1488773340,1488773400,1488773460,1488773520,1488773580,1488773640,1488773700,1488773760,1488773820,1488773880,1488773940,1488774000,1488774060,1488774120,1488774180,1488774240,1488774300,1488774360,1488774420,1488774480,1488774540,1488774600,1488774660,1488774720,1488774780,1488774840,1488774900,1488774960,1488775020,1488775080,1488775140,1488775200,1488775260,1488775320,1488775380,1488775440,1488775500,1488775560,1488775620,1488775680,1488775740,1488775800,1488775860,1488775920,1488775980,1488776040,1488776100,1488776160,1488776220,1488776280,1488776340,1488776400,1488776460,1488776520,1488776580,1488776640,1488776700,1488776760,1488776820,1488776880,1488776940,1488777000,1488777060,1488777120,1488777180,1488777240,1488777300,1488777360,1488777420,1488777480,1488777540,1488777600,1488777660,1488777720,1488777780,1488777840,1488777900,1488777960,1488778020,1488778080,1488778140,1488778200,1488778260,1488778320,1488778380,1488778440,1488778500,1488778560,1488778620,1488778680,1488778740,1488778800,1488778860,1488778920,1488778980,1488779040,1488779100,1488779160,1488779220,1488779280,1488779340,1488779400,1488779460,1488779520,1488779580,1488779640,1488779700,1488779760,1488779820,1488779880,1488779940,1488780000,1488780060,1488780120,1488780180,1488780240,1488780300,1488780360,1488780420,1488780480,1488780540,1488780600,1488780660,1488780720,1488780780,1488780840,1488780900,1488780960,1488781020,1488781080,1488781140,1488781200,1488781260,1488781320,1488781380,1488781440,1488781500,1488781560,1488781620,1488781680,1488781740,1488781800,1488781860,1488781920,1488781980,1488782040,1488782100,1488782160,1488782220,1488782280,1488782340,1488782400,1488782460,1488782520,1488782580,1488782640,1488782700,1488782760,1488782820,1488782880,1488782940,1488783000,1488783060,1488783120,1488783180,1488783240,1488783300,1488783360,1488783420,1488783480,1488783540,1488783600,1488783660,1488783720,1488783780,1488783840,1488783900,1488783960,1488784020,1488784080,1488784140,1488784200,1488784260,1488784320,1488784380,1488784440,1488784500,1488784560,1488784620,1488784680,1488784740,1488784800,1488784860,1488784920,1488784980,1488785040,1488785100,1488785160,1488785220,1488785280,1488785340,1488785400,1488785460,1488785520,1488785580,1488785640,1488785700,1488785760,1488785820,1488785880,1488785940,1488786000,1488786060,1488786120,1488786180,1488786240,1488786300,1488786360,1488786420,1488786480,1488786540,1488786600,1488786660,1488786720,1488786780,1488786840,1488786900,1488786960,1488787020,1488787080,1488787140,1488787200,1488787260,1488787320,1488787380,1488787440,1488787500,1488787560,1488787620,1488787680,1488787740,1488787800,1488787860,1488787920,1488787980,1488788040,1488788100,1488788160,1488788220,1488788280,1488788340,1488788400,1488788460,1488788520,1488788580,1488788640,1488788700,1488788760,1488788820,1488788880,1488788940,1488789000,1488789060,1488789120,1488789180,1488789240,1488789300,1488789360,1488789420,1488789480,1488789540,1488789600,1488789660,1488789720,1488789780,1488789840,1488789900,1488789960,1488790020,1488790080,1488790140,1488790200,1488790260,1488790320,1488790380,1488790440,1488790500,1488790560,1488790620,1488790680,1488790740,1488790800,1488790860,1488790920,1488790980,1488791040,1488791100,1488791160,1488791220,1488791280,1488791340,1488791400,1488791460,1488791520,1488791580,1488791640,1488791700,1488791760,1488791820,1488791880,1488791940,1488792000,1488792060,1488792120,1488792180,1488792240,1488792300,1488792360,1488792420,1488792480,1488792540,1488792600,1488792660,1488792720,1488792780,1488792840,1488792900,1488792960,1488793020,1488793080,1488793140,1488793200,1488793260,1488793320,1488793380,1488793440,1488793500,1488793560,1488793620,1488793680,1488793740,1488793800,1488793860,1488793920,1488793980,1488794040,1488794100,1488794160,1488794220,1488794280,1488794340,1488794400,1488794460,1488794520,1488794580,1488794640,1488794700,1488794760,1488794820,1488794880,1488794940,1488795000,1488795060,1488795120,1488795180,1488795240,1488795300,1488795360,1488795420,1488795480,1488795540,1488795600,1488795660,1488795720,1488795780,1488795840,1488795900,1488795960,1488796020,1488796080,1488796140,1488796200,1488796260,1488796320,1488796380,1488796440,1488796500,1488796560,1488796620,1488796680,1488796740,1488796800,1488796860,1488796920,1488796980,1488797040,1488797100,1488797160,1488797220,1488797280,1488797340,1488797400,1488797460,1488797520,1488797580,1488797640,1488797700,1488797760,1488797820,1488797880,1488797940,1488798000,1488798060,1488798120,1488798180,1488798240,1488798300,1488798360,1488798420,1488798480,1488798540,1488798600,1488798660,1488798720,1488798780,1488798840,1488798900,1488798960,1488799020,1488799080,1488799140,1488799200,1488799260,1488799320,1488799380,1488799440,1488799500,1488799560,1488799620,1488799680,1488799740,1488799800,1488799860,1488799920,1488799980,1488800040,1488800100,1488800160,1488800220,1488800280,1488800340,1488800400,1488800460,1488800520,1488800580,1488800640,1488800700,1488800760,1488800820,1488800880,1488800940,1488801000,1488801060,1488801120,1488801180,1488801240,1488801300,1488801360,1488801420,1488801480,1488801540,1488801600,1488801660,1488801720,1488801780,1488801840,1488801900,1488801960,1488802020,1488802080,1488802140,1488802200,1488802260,1488802320,1488802380,1488802440,1488802500,1488802560,1488802620,1488802680,1488802740,1488802800,1488802860,1488802920,1488802980,1488803040,1488803100,1488803160,1488803220,1488803280,1488803340,1488803400,1488803460,1488803520,1488803580,1488803640,1488803700,1488803760,1488803820,1488803880,1488803940,1488804000,1488804060,1488804120,1488804180,1488804240,1488804300,1488804360,1488804420,1488804480,1488804540,1488804600,1488804660,1488804720,1488804780,1488804840,1488804900,1488804960,1488805020,1488805080,1488805140,1488805200,1488805260,1488805320,1488805380,1488805440,1488805500,1488805560,1488805620,1488805680,1488805740,1488805800,1488805860,1488805920,1488805980,1488806040,1488806100,1488806160,1488806220,1488806280,1488806340,1488806400,1488806460,1488806520,1488806580,1488806640,1488806700,1488806760,1488806820,1488806880,1488806940,1488807000,1488807060,1488807120,1488807180,1488807240,1488807300,1488807360,1488807420,1488807480,1488807540,1488807600,1488807660,1488807720,1488807780,1488807840,1488807900,1488807960,1488808020,1488808080,1488808140,1488808200,1488808260,1488808320,1488808380,1488808440,1488808500,1488808560,1488808620,1488808680,1488808740,1488808800,1488808860,1488808920,1488808980,1488809040,1488809100,1488809160,1488809220,1488809280,1488809340,1488809400,1488809460,1488809520,1488809580,1488809640,1488809700,1488809760,1488809820,1488809880,1488809940,1488810000,1488810060,1488810120,1488810180,1488810240,1488810300,1488810360,1488810420,1488810480,1488810540,1488810600,1488810660,1488810720,1488810780,1488810840,1488810900,1488810960,1488811020,1488811080,1488811140,1488811200,1488811260,1488811320,1488811380,1488811440,1488811500,1488811560,1488811620,1488811680,1488811740,1488811800,1488811860,1488811920,1488811980,1488812040,1488812100,1488812160,1488812220,1488812280,1488812340,1488812400,1488812460,1488812520,1488812580,1488812640,1488812700,1488812760,1488812820,1488812880,1488812940,1488813000,1488813060,1488813120,1488813180,1488813240,1488813300,1488813360,1488813420,1488813480,1488813540,1488813600,1488813660,1488813720,1488813780,1488813840,1488813900,1488813960,1488814020,1488814080,1488814140,1488814200,1488814260,1488814320,1488814380,1488814440,1488814500,1488814560,1488814620,1488814680,1488814740,1488814800,1488814860,1488814920,1488814980,1488815040,1488815100,1488815160,1488815220,1488815280,1488815340,1488815400,1488815460,1488815520,1488815580,1488815640,1488815700,1488815760,1488815820,1488815880,1488815940,1488816000,1488816060,1488816120,1488816180,1488816240,1488816300,1488816360,1488816420,1488816480,1488816540,1488816600,1488816660,1488816720,1488816780,1488816840,1488816900,1488816960,1488817020,1488817080,1488817140,1488817200,1488817260,1488817320,1488817380,1488817440,1488817500,1488817560,1488817620,1488817680,1488817740,1488817800,1488817860,1488817920,1488817980,1488818040,1488818100,1488818160,1488818220,1488818280,1488818340,1488818400,1488818460,1488818520,1488818580,1488818640,1488818700,1488818760,1488818820,1488818880,1488818940,1488819000,1488819060,1488819120,1488819180,1488819240,1488819300,1488819360,1488819420,1488819480,1488819540,1488819600,1488819660,1488819720,1488819780,1488819840,1488819900,1488819960,1488820020,1488820080,1488820140,1488820200,1488820260,1488820320,1488820380,1488820440,1488820500,1488820560,1488820620,1488820680,1488820740,1488820800,1488820860,1488820920,1488820980,1488821040,1488821100,1488821160,1488821220,1488821280,1488821340,1488821400,1488821460,1488821520,1488821580,1488821640,1488821700,1488821760,1488821820,1488821880,1488821940,1488822000,1488822060,1488822120,1488822180,1488822240,1488822300,1488822360,1488822420,1488822480,1488822540,1488822600,1488822660,1488822720,1488822780,1488822840,1488822900,1488822960,1488823020,1488823080,1488823140,1488823200,1488823260,1488823320,1488823380,1488823440,1488823500,1488823560,1488823620,1488823680,1488823740,1488823800,1488823860,1488823920,1488823980,1488824040,1488824100,1488824160,1488824220,1488824280,1488824340,1488824400,1488824460,1488824520,1488824580,1488824640,1488824700,1488824760,1488824820,1488824880,1488824940,1488825000,1488825060,1488825120,1488825180,1488825240,1488825300,1488825360,1488825420,1488825480,1488825540,1488825600,1488825660,1488825720,1488825780,1488825840,1488825900,1488825960,1488826020,1488826080,1488826140,1488826200,1488826260,1488826320,1488826380,1488826440,1488826500,1488826560,1488826620,1488826680,1488826740,1488826800,1488826860,1488826920,1488826980,1488827040,1488827100,1488827160,1488827220,1488827280,1488827340,1488827400,1488827460,1488827520,1488827580,1488827640,1488827700,1488827760,1488827820,1488827880,1488827940,1488828000,1488828060,1488828120,1488828180,1488828240,1488828300,1488828360,1488828420,1488828480,1488828540,1488828600,1488828660,1488828720,1488828780,1488828840,1488828900,1488828960,1488829020,1488829080,1488829140,1488829200,1488829260,1488829320,1488829380,1488829440,1488829500,1488829560,1488829620,1488829680,1488829740,1488829800,1488829860,1488829920,1488829980,1488830040,1488830100,1488830160,1488830220,1488830280,1488830340,1488830400,1488830460,1488830520,1488830580,1488830640,1488830700,1488830760,1488830820,1488830880,1488830940,1488831000,1488831060,1488831120,1488831180,1488831240,1488831300,1488831360,1488831420,1488831480,1488831540,1488831600,1488831660,1488831720,1488831780,1488831840,1488831900,1488831960,1488832020,1488832080,1488832140,1488832200,1488832260,1488832320,1488832380,1488832440,1488832500,1488832560,1488832620,1488832680,1488832740,1488832800,1488832860,1488832920,1488832980,1488833040,1488833100,1488833160,1488833220,1488833280,1488833340,1488833400,1488833460,1488833520,1488833580,1488833640,1488833700,1488833760,1488833820,1488833880,1488833940,1488834000,1488834060,1488834120,1488834180,1488834240,1488834300,1488834360,1488834420,1488834480,1488834540,1488834600,1488834660,1488834720,1488834780,1488834840,1488834900,1488834960,1488835020,1488835080,1488835140,1488835200,1488835260,1488835320,1488835380,1488835440,1488835500,1488835560,1488835620,1488835680,1488835740,1488835800,1488835860,1488835920,1488835980,1488836040,1488836100,1488836160,1488836220,1488836280,1488836340,1488836400,1488836460,1488836520,1488836580,1488836640,1488836700,1488836760,1488836820,1488836880,1488836940,1488837000,1488837060,1488837120,1488837180,1488837240,1488837300,1488837360,1488837420,1488837480,1488837540,1488837600,1488837660,1488837720,1488837780,1488837840,1488837900,1488837960,1488838020,1488838080,1488838140,1488838200,1488838260,1488838320,1488838380,1488838440,1488838500,1488838560,1488838620,1488838680,1488838740,1488838800,1488838860,1488838920,1488838980,1488839040,1488839100,1488839160,1488839220,1488839280,1488839340,1488839400,1488839460,1488839520,1488839580,1488839640,1488839700,1488839760,1488839820,1488839880,1488839940,1488840000,1488840060,1488840120,1488840180,1488840240,1488840300,1488840360,1488840420,1488840480,1488840540,1488840600,1488840660,1488840720,1488840780,1488840840,1488840900,1488840960,1488841020,1488841080,1488841140,1488841200,1488841260,1488841320,1488841380,1488841440,1488841500,1488841560,1488841620,1488841680,1488841740,1488841800,1488841860,1488841920,1488841980,1488842040,1488842100,1488842160,1488842220,1488842280,1488842340,1488842400,1488842460,1488842520,1488842580,1488842640,1488842700,1488842760,1488842820,1488842880,1488842940,1488843000,1488843060,1488843120,1488843180,1488843240,1488843300,1488843360,1488843420,1488843480,1488843540,1488843600,1488843660,1488843720,1488843780,1488843840,1488843900,1488843960,1488844020,1488844080,1488844140,1488844200,1488844260,1488844320,1488844380,1488844440,1488844500,1488844560,1488844620,1488844680,1488844740,1488844800,1488844860,1488844920,1488844980,1488845040,1488845100,1488845160,1488845220,1488845280,1488845340,1488845400,1488845460,1488845520,1488845580,1488845640,1488845700,1488845760,1488845820,1488845880,1488845940,1488846000,1488846060,1488846120,1488846180,1488846240,1488846300,1488846360,1488846420,1488846480,1488846540,1488846600,1488846660,1488846720,1488846780,1488846840,1488846900,1488846960,1488847020,1488847080,1488847140,1488847200,1488847260,1488847320,1488847380,1488847440,1488847500,1488847560,1488847620,1488847680,1488847740,1488847800,1488847860,1488847920,1488847980,1488848040,1488848100,1488848160,1488848220,1488848280,1488848340,1488848400,1488848460,1488848520,1488848580,1488848640,1488848700,1488848760,1488848820,1488848880,1488848940,1488849000,1488849060,1488849120,1488849180,1488849240,1488849300,1488849360,1488849420,1488849480,1488849540,1488849600,1488849660,1488849720,1488849780,1488849840,1488849900,1488849960,1488850020,1488850080,1488850140,1488850200,1488850260,1488850320,1488850380,1488850440,1488850500,1488850560,1488850620,1488850680,1488850740,1488850800,1488850860,1488850920,1488850980,1488851040,1488851100,1488851160,1488851220,1488851280,1488851340,1488851400,1488851460,1488851520,1488851580,1488851640,1488851700,1488851760,1488851820,1488851880,1488851940,1488852000,1488852060,1488852120,1488852180,1488852240,1488852300,1488852360,1488852420,1488852480,1488852540,1488852600,1488852660,1488852720,1488852780,1488852840,1488852900,1488852960,1488853020,1488853080,1488853140,1488853200,1488853260,1488853320,1488853380,1488853440,1488853500,1488853560,1488853620,1488853680,1488853740,1488853800,1488853860,1488853920,1488853980,1488854040,1488854100,1488854160,1488854220,1488854280,1488854340,1488854400,1488854460,1488854520,1488854580,1488854640,1488854700,1488854760,1488854820,1488854880,1488854940,1488855000,1488855060,1488855120,1488855180,1488855240,1488855300,1488855360,1488855420,1488855480,1488855540,1488855600,1488855660,1488855720,1488855780,1488855840,1488855900,1488855960,1488856020,1488856080,1488856140,1488856200,1488856260,1488856320,1488856380,1488856440,1488856500,1488856560,1488856620,1488856680,1488856740,1488856800,1488856860,1488856920,1488856980,1488857040,1488857100,1488857160,1488857220,1488857280,1488857340,1488857400,1488857460,1488857520,1488857580,1488857640,1488857700,1488857760,1488857820,1488857880,1488857940,1488858000,1488858060,1488858120,1488858180,1488858240,1488858300,1488858360,1488858420,1488858480,1488858540,1488858600,1488858660,1488858720,1488858780,1488858840,1488858900,1488858960,1488859020,1488859080,1488859140,1488859200,1488859260,1488859320,1488859380,1488859440,1488859500,1488859560,1488859620,1488859680,1488859740,1488859800,1488859860,1488859920,1488859980,1488860040,1488860100,1488860160,1488860220,1488860280,1488860340,1488860400,1488860460,1488860520,1488860580,1488860640,1488860700,1488860760,1488860820,1488860880,1488860940,1488861000,1488861060,1488861120,1488861180,1488861240,1488861300,1488861360,1488861420,1488861480,1488861540,1488861600,1488861660,1488861720,1488861780,1488861840,1488861900,1488861960,1488862020,1488862080,1488862140,1488862200,1488862260,1488862320,1488862380,1488862440,1488862500,1488862560,1488862620,1488862680,1488862740,1488862800,1488862860,1488862920,1488862980,1488863040,1488863100,1488863160,1488863220,1488863280,1488863340,1488863400,1488863460,1488863520,1488863580,1488863640,1488863700,1488863760,1488863820,1488863880,1488863940,1488864000,1488864060,1488864120,1488864180,1488864240,1488864300,1488864360,1488864420,1488864480,1488864540,1488864600,1488864660,1488864720,1488864780,1488864840,1488864900,1488864960,1488865020,1488865080,1488865140,1488865200,1488865260,1488865320,1488865380,1488865440,1488865500,1488865560,1488865620,1488865680,1488865740,1488865800,1488865860,1488865920,1488865980,1488866040,1488866100,1488866160,1488866220,1488866280,1488866340,1488866400,1488866460,1488866520,1488866580,1488866640,1488866700,1488866760,1488866820,1488866880,1488866940,1488867000,1488867060,1488867120,1488867180,1488867240,1488867300,1488867360,1488867420,1488867480,1488867540,1488867600,1488867660,1488867720,1488867780,1488867840,1488867900,1488867960,1488868020,1488868080,1488868140,1488868200,1488868260,1488868320,1488868380,1488868440,1488868500,1488868560,1488868620,1488868680,1488868740,1488868800,1488868860,1488868920,1488868980,1488869040,1488869100,1488869160,1488869220,1488869280,1488869340,1488869400,1488869460,1488869520,1488869580,1488869640,1488869700,1488869760,1488869820,1488869880,1488869940,1488870000,1488870060,1488870120,1488870180,1488870240,1488870300,1488870360,1488870420,1488870480,1488870540,1488870600,1488870660,1488870720,1488870780,1488870840,1488870900,1488870960,1488871020,1488871080,1488871140,1488871200,1488871260,1488871320,1488871380,1488871440,1488871500,1488871560,1488871620,1488871680,1488871740,1488871800,1488871860,1488871920,1488871980,1488872040,1488872100,1488872160,1488872220,1488872280,1488872340,1488872400,1488872460,1488872520,1488872580,1488872640,1488872700,1488872760,1488872820,1488872880,1488872940,1488873000,1488873060,1488873120,1488873180,1488873240,1488873300,1488873360,1488873420,1488873480,1488873540,1488873600,1488873660,1488873720,1488873780,1488873840,1488873900,1488873960,1488874020,1488874080,1488874140,1488874200,1488874260,1488874320,1488874380,1488874440,1488874500,1488874560,1488874620,1488874680,1488874740,1488874800,1488874860,1488874920,1488874980,1488875040,1488875100,1488875160,1488875220,1488875280,1488875340,1488875400,1488875460,1488875520,1488875580,1488875640,1488875700,1488875760,1488875820,1488875880,1488875940,1488876000,1488876060,1488876120,1488876180,1488876240,1488876300,1488876360,1488876420,1488876480,1488876540,1488876600,1488876660,1488876720,1488876780,1488876840,1488876900,1488876960,1488877020,1488877080,1488877140,1488877200,1488877260,1488877320,1488877380,1488877440,1488877500,1488877560,1488877620,1488877680,1488877740,1488877800,1488877860,1488877920,1488877980,1488878040,1488878100,1488878160,1488878220,1488878280,1488878340,1488878400,1488878460,1488878520,1488878580,1488878640,1488878700,1488878760,1488878820,1488878880,1488878940,1488879000,1488879060,1488879120,1488879180,1488879240,1488879300,1488879360,1488879420,1488879480,1488879540,1488879600,1488879660,1488879720,1488879780,1488879840,1488879900,1488880140,1488880200,1488880260,1488880320,1488880380,1488880440,1488880500,1488880560,1488880620,1488880680,1488880740,1488880800,1488880860,1488880920,1488880980,1488881040,1488881100,1488881160,1488881220,1488881280,1488881340,1488881400,1488881460,1488881520,1488881580,1488881640,1488881700,1488881760,1488881820,1488881880,1488881940,1488882000,1488882060,1488882120,1488882180,1488882240,1488882300,1488882360,1488882420,1488882480,1488882540,1488882600,1488882660,1488882720,1488882780,1488882840,1488882900,1488882960,1488883020,1488883080,1488883140,1488883200,1488883260,1488883320,1488883380,1488883440,1488883500,1488883560,1488883620,1488883680,1488883740,1488883800,1488883860,1488883920,1488883980,1488884040,1488884100,1488884160,1488884220,1488884280,1488884340,1488884400,1488884460,1488884520,1488884580,1488884640,1488884700,1488884760,1488884820,1488884880,1488884940,1488885000,1488885060,1488885120,1488885180,1488885240,1488885300,1488885360,1488885420,1488885480,1488885540,1488885600,1488885660,1488885720,1488885780,1488885840,1488885900,1488885960,1488886020,1488886080,1488886140,1488886200,1488886260,1488886320,1488886380,1488886440,1488886500,1488886560,1488886620,1488886680,1488886740,1488886800,1488886860,1488886920,1488886980,1488887040,1488887100,1488887160,1488887220,1488887280,1488887340,1488887400,1488887460,1488887520,1488887580,1488887640,1488887700,1488887760,1488887820,1488887880,1488887940,1488888000,1488888060,1488888120,1488888180,1488888240,1488888300,1488888360,1488888420,1488888480,1488888540,1488888600,1488888660,1488888720,1488888780,1488888840,1488888900,1488888960,1488889020,1488889080,1488889140,1488889200,1488889260,1488889320,1488889380,1488889440,1488889500,1488889560,1488889620,1488889680,1488889740,1488889800,1488889860,1488889920,1488889980,1488890040,1488890100,1488890160,1488890220,1488890280,1488890340,1488890400,1488890460,1488890520,1488890580,1488890640,1488890700,1488890760,1488890820,1488890880,1488890940,1488891000,1488891060,1488891120,1488891180,1488891240,1488891300,1488891360,1488891420,1488891480,1488891540,1488891600,1488891660,1488891720,1488891780,1488891840,1488891900,1488891960,1488892020,1488892080,1488892140,1488892200,1488892260,1488892320,1488892380,1488892440,1488892500,1488892560,1488892620,1488892680,1488892740,1488892800,1488892920,1488892980,1488893040,1488893100,1488893160,1488893220,1488893280,1488893340,1488893400,1488893460,1488893520,1488893580,1488893640,1488893700,1488893760,1488893820,1488893880,1488893940,1488894000,1488894060,1488894120,1488894180,1488894240,1488894300,1488894360,1488894420,1488894480,1488894540,1488894600,1488894660,1488894720,1488894780,1488894960,1488895020,1488895080,1488895140,1488895200,1488895260,1488895320,1488895380,1488895440,1488895500,1488895560,1488895620,1488895680,1488895740,1488895800,1488895860,1488895920,1488895980,1488896040,1488896100,1488896160,1488896220,1488896280,1488896340,1488896400,1488896460,1488896520,1488896580,1488896640,1488896700,1488896760,1488896820,1488896880,1488896940,1488897000,1488897060,1488897120,1488897180,1488897240,1488897300,1488897360,1488897420,1488897480,1488897540,1488897600,1488897660,1488897720,1488897780,1488897840,1488897900,1488897960,1488898020,1488898080,1488898140,1488898200,1488898260,1488898320,1488898380,1488898440,1488898500,1488898560,1488898620,1488898680,1488898740,1488898800,1488898860,1488898920,1488898980,1488899040,1488899100,1488899160,1488899220,1488899280,1488899340,1488899400,1488899460,1488899520,1488899580,1488899640,1488899700,1488899760,1488899820,1488899880,1488899940,1488900000,1488900060,1488900120,1488900180,1488900240,1488900300,1488900360,1488900420,1488900480,1488900540,1488900600,1488900660,1488900720,1488900780,1488900840,1488900900,1488900960,1488901020,1488901080,1488901140,1488901200,1488901260,1488901320,1488901380,1488901440,1488901500,1488901560,1488901620,1488901680,1488901740,1488901800,1488901860,1488901920,1488901980,1488902040,1488902100,1488902160,1488902220,1488902280,1488902340,1488902400,1488902460,1488902520,1488902580,1488902640,1488902700,1488902760,1488902820,1488902880,1488902940,1488903000,1488903060,1488903120,1488903180,1488903240,1488903300,1488903360,1488903420,1488903480,1488903540,1488903600,1488903660,1488903720,1488903780,1488903840,1488903900,1488903960,1488904020,1488904080,1488904140,1488904200,1488904260,1488904320,1488904380,1488904440,1488904500,1488904560,1488904620,1488904680,1488904740,1488904800,1488904860,1488904920,1488904980,1488905040,1488905100,1488905160,1488905220,1488905280,1488905340,1488905400,1488905460,1488905520,1488905580,1488905640,1488905700,1488905760,1488905820,1488905880,1488905940,1488906000,1488906060,1488906120,1488906180,1488906240,1488906300,1488906360,1488906420,1488906480,1488906540,1488906600,1488906660,1488906720,1488906780,1488906840,1488906900,1488906960,1488907020,1488907080,1488907140,1488907200,1488907260,1488907320,1488907380,1488907440,1488907500,1488907560,1488907620,1488907680,1488907740,1488907800,1488907860,1488907920,1488907980,1488908040,1488908100,1488908160,1488908220,1488908280,1488908340,1488908400,1488908460,1488908520,1488908580,1488908640,1488908700,1488908760,1488908820,1488908880,1488908940,1488909000,1488909060,1488909120,1488909180,1488909240,1488909300,1488909360,1488909420,1488909480,1488909540,1488909600,1488909660,1488909720,1488909780,1488909840,1488909900,1488909960,1488910020,1488910080,1488910140,1488910200,1488910260,1488910320,1488910380,1488910440,1488910500,1488910560,1488910620,1488910680,1488910740,1488910800,1488910860,1488910920,1488910980,1488911040,1488911100,1488911160,1488911220,1488911280,1488911340,1488911400,1488911460,1488911520,1488911580,1488911640,1488911700,1488911760,1488911820,1488911880,1488911940,1488912000,1488912060,1488912120,1488912180,1488912240,1488912300,1488912360,1488912420,1488912480,1488912540,1488912600,1488912660,1488912720,1488912780,1488912840,1488912900,1488912960,1488913020,1488913080,1488913140,1488913200,1488913260,1488913320,1488913380,1488913440,1488913500,1488913560,1488913620,1488913680,1488913740,1488913800,1488913860,1488913920,1488913980,1488914040,1488914100,1488914160,1488914220,1488914280,1488914340,1488914400,1488914460,1488914520,1488914580,1488914640,1488914700,1488914760,1488914820,1488914880,1488914940,1488915000,1488915060,1488915120,1488915180,1488915240,1488915300,1488915360,1488915420,1488915480,1488915540,1488915600,1488915660,1488915720,1488915780,1488915840,1488915900,1488915960,1488916020,1488916080,1488916140,1488916200,1488916260,1488916320,1488916380,1488916440,1488916500,1488916560,1488916620,1488916680,1488916740,1488916800,1488916860,1488916920,1488916980,1488917040,1488917100,1488917160,1488917220,1488917280,1488917340,1488917400,1488917460,1488917520,1488917580,1488917640,1488917700,1488917760,1488917820,1488917880,1488917940,1488918000,1488918060,1488918120,1488918180,1488918240,1488918300,1488918360,1488918420,1488918480,1488918540,1488918600,1488918660,1488918720,1488918780,1488918840,1488918900,1488918960,1488919020,1488919080,1488919140,1488919200,1488919260,1488919320,1488919380,1488919440,1488919500,1488919560,1488919620,1488919680,1488919740,1488919800,1488919860,1488919920,1488919980,1488920040,1488920100,1488920160,1488920220,1488920280,1488920340,1488920400,1488920460,1488920520,1488920580,1488920640,1488920700,1488920760,1488920820,1488920880,1488920940,1488921000,1488921060,1488921120,1488921180,1488921240,1488921300,1488921360,1488921420,1488921480,1488921540,1488921600,1488921660,1488921720,1488921780,1488921840,1488921900,1488921960,1488922020,1488922080,1488922140,1488922200,1488922260,1488922320,1488922380,1488922440,1488922500,1488922560,1488922620,1488922680,1488922740,1488922800,1488922860,1488922920,1488922980,1488923040,1488923100,1488923160,1488923220,1488923280,1488923340,1488923400,1488923460,1488923520,1488923580,1488923640,1488923700,1488923760,1488923820,1488923880,1488923940,1488924000,1488924060,1488924120,1488924180,1488924240,1488924300,1488924360,1488924420,1488924480,1488924540,1488924600,1488924660,1488924720,1488924780,1488924840,1488924900,1488924960,1488925020,1488925080,1488925140,1488925200,1488925260,1488925320,1488925380,1488925440,1488925500,1488925560,1488925620,1488925680,1488925740,1488925800,1488925860,1488925920,1488925980,1488926040,1488926100,1488926160,1488926220,1488926280,1488926340,1488926400,1488926460,1488926520,1488926580,1488926640,1488926700,1488926760,1488926820,1488926880,1488926940,1488927000,1488927060,1488927120,1488927180,1488927240,1488927300,1488927360,1488927420,1488927480,1488927540,1488927600,1488927660,1488927720,1488927780,1488927840,1488927900,1488927960,1488928020,1488928080,1488928140,1488928200,1488928260,1488928320,1488928380,1488928440,1488928500,1488928560,1488928620,1488928680,1488928740,1488928800,1488928860,1488928920,1488928980,1488929040,1488929100,1488929160,1488929220,1488929280,1488929340,1488929400,1488929460,1488929520,1488929580,1488929640,1488929700,1488929760,1488929820,1488929880,1488929940,1488930000,1488930060,1488930120,1488930180,1488930240,1488930300,1488930360,1488930420,1488930480,1488930540,1488930600,1488930660,1488930720,1488930780,1488930840,1488930900,1488930960,1488931020,1488931080,1488931140,1488931200,1488931260,1488931320,1488931380,1488931440,1488931500,1488931560,1488931620,1488931680,1488931740,1488931800,1488931860,1488931920,1488931980,1488932040,1488932100,1488932160,1488932220,1488932280,1488932340,1488932400,1488932460,1488932520,1488932580,1488932640,1488932700,1488932760,1488932820,1488932880,1488932940,1488933000,1488933060,1488933120,1488933180,1488933240,1488933300,1488933360,1488933420,1488933480,1488933540,1488933600,1488933660,1488933720,1488933780,1488933840,1488933900,1488933960,1488934020,1488934080,1488934140,1488934200,1488934260,1488934320,1488934380,1488934440,1488934500,1488934560,1488934620,1488934680,1488934740,1488934800,1488934860,1488934920,1488934980,1488935040,1488935100,1488935160,1488935220,1488935280,1488935340,1488935400,1488935460,1488935520,1488935580,1488935640,1488935700,1488935760,1488935820,1488935880,1488935940,1488936000,1488936060,1488936120,1488936180,1488936240,1488936300,1488936360,1488936420,1488936480,1488936540,1488936600,1488936660,1488936720,1488936780,1488936840,1488936900,1488936960,1488937020,1488937080,1488937140,1488937200,1488937260,1488937320,1488937380,1488937440,1488937500,1488937560,1488937620,1488937680,1488937740,1488937800,1488937860,1488937920,1488937980,1488938040,1488938100,1488938160,1488938220,1488938280,1488938340,1488938400,1488938460,1488938520,1488938580,1488938640,1488938700,1488938760,1488938820,1488938880,1488938940,1488939000,1488939060,1488939120,1488939180,1488939240,1488939300,1488939360,1488939420,1488939480,1488939540,1488939600,1488939660,1488939720,1488939780,1488939840,1488939900,1488939960,1488940020,1488940080,1488940140,1488940200,1488940260,1488940320,1488940380,1488940440,1488940500,1488940560,1488940620,1488940680,1488940740,1488940800,1488940860,1488940920,1488940980,1488941040,1488941100,1488941160,1488941220,1488941280,1488941340,1488941400,1488941460,1488941520,1488941580,1488941640,1488941700,1488941760,1488941820,1488941880,1488941940,1488942000,1488942060,1488942120,1488942180,1488942240,1488942300,1488942360,1488942420,1488942480,1488942540,1488942600,1488942660,1488942720,1488942780,1488942840,1488942900,1488942960,1488943020,1488943080,1488943140,1488943200,1488943260,1488943320,1488943380,1488943440,1488943500,1488943560,1488943620,1488943680,1488943740,1488943800,1488943860,1488943920,1488943980,1488944040,1488944100,1488944160,1488944220,1488944280,1488944340,1488944400,1488944460,1488944520,1488944580,1488944640,1488944700,1488944760,1488944820,1488944880,1488944940,1488945000,1488945060,1488945120,1488945180,1488945240,1488945300,1488945360,1488945420,1488945480,1488945540,1488945600,1488945660,1488945720,1488945780,1488945840,1488945900,1488945960,1488946020,1488946080,1488946140,1488946200,1488946260,1488946320,1488946380,1488946440,1488946500,1488946560,1488946620,1488946680,1488946740,1488946800,1488946860,1488946920,1488946980,1488947040,1488947100,1488947160,1488947220,1488947280,1488947340,1488947400,1488947460,1488947520,1488947580,1488947640,1488947700,1488947760,1488947820,1488947880,1488947940,1488948000,1488948060,1488948120,1488948180,1488948240,1488948300,1488948360,1488948420,1488948480,1488948540,1488948600,1488948660,1488948720,1488948780,1488948840,1488948900,1488948960,1488949020,1488949080,1488949140,1488949200,1488949260,1488949320,1488949380,1488949440,1488949500,1488949560,1488949620,1488949680,1488949740,1488949800,1488949860,1488949920,1488949980,1488950040,1488950100,1488950160,1488950220,1488950280,1488950340,1488950400,1488950460,1488950520,1488950580,1488950640,1488950700,1488950760,1488950820,1488950880,1488950940,1488951000,1488951060,1488951120,1488951180,1488951240,1488951300,1488951360,1488951420,1488951480,1488951540,1488951600,1488951660,1488951720,1488951780,1488951840,1488951900,1488951960,1488952020,1488952080,1488952140,1488952200,1488952260,1488952320,1488952380,1488952440,1488952500,1488952560,1488952620,1488952680,1488952740,1488952800,1488952860,1488952920,1488952980,1488953040,1488953100,1488953160,1488953220,1488953280,1488953340,1488953400,1488953460,1488953520,1488953580,1488953640,1488953700,1488953760,1488953820,1488953880,1488953940,1488954000,1488954060,1488954120,1488954180,1488954240,1488954300,1488954360,1488954420,1488954480,1488954540,1488954600,1488954660,1488954720,1488954780,1488954840,1488954900,1488954960,1488955020,1488955080,1488955140,1488955200,1488955260,1488955320,1488955380,1488955440,1488955500,1488955560,1488955620,1488955680,1488955740,1488955800,1488955860,1488955920,1488955980,1488956040,1488956100,1488956160,1488956220,1488956280,1488956340,1488956400,1488956460,1488956520,1488956580,1488956640,1488956700,1488956760,1488956820,1488956880,1488956940,1488957000,1488957060,1488957120,1488957180,1488957240,1488957300,1488957360,1488957420,1488957480,1488957540,1488957600,1488957660,1488957720,1488957780,1488957840,1488957900,1488957960,1488958020,1488958080,1488958140,1488958200,1488958260,1488958320,1488958380,1488958440,1488958500,1488958560,1488958620,1488958680,1488958740,1488958800,1488958860,1488958920,1488958980,1488959040,1488959100,1488959160,1488959220,1488959280,1488959340,1488959400,1488959460,1488959520,1488959580,1488959640,1488959700,1488959760,1488959820,1488959880,1488959940,1488960000,1488960060,1488960120,1488960180,1488960240,1488960300,1488960360,1488960420,1488960480,1488960540,1488960600,1488960660,1488960720,1488960780,1488960840,1488960900,1488960960,1488961020,1488961080,1488961140,1488961200,1488961260,1488961320,1488961380,1488961440,1488961500,1488961560,1488961620,1488961680,1488961740,1488961800,1488961860,1488961920,1488961980,1488962040,1488962100,1488962160,1488962220,1488962280,1488962340,1488962400,1488962460,1488962520,1488962580,1488962640,1488962700,1488962760,1488962820,1488962880,1488962940,1488963000,1488963060,1488963120,1488963180,1488963240,1488963300,1488963360,1488963420,1488963480,1488963540,1488963600,1488963660,1488963720,1488963780,1488963840,1488963900,1488963960,1488964020,1488964080,1488964140,1488964200,1488964260,1488964320,1488964380,1488964440,1488964500,1488964560,1488964620,1488964680,1488964740,1488964800,1488964860,1488964920,1488964980,1488965040,1488965100,1488965160,1488965220,1488965280,1488965340,1488965400,1488965460,1488965520,1488965580,1488965640,1488965700,1488965760,1488965820,1488965880,1488965940,1488966000,1488966060,1488966120,1488966180,1488966240,1488966300,1488966360,1488966420,1488966480,1488966540,1488966600,1488966660,1488966720,1488966780,1488966840,1488966900,1488966960,1488967020,1488967080,1488967140,1488967200,1488967260,1488967320,1488967380,1488967440,1488967500,1488967560,1488967620,1488967680,1488967740,1488967800,1488967860,1488967920,1488967980,1488968040,1488968100,1488968160,1488968220,1488968280,1488968340,1488968400,1488968460,1488968520,1488968580,1488968640,1488968700,1488968760,1488968820,1488968880,1488968940,1488969000,1488969060,1488969120,1488969180,1488969240,1488969300,1488969360,1488969420,1488969480,1488969540,1488969600,1488969660,1488969720,1488969780,1488969840,1488969900,1488969960,1488970020,1488970080,1488970200,1488970260,1488970320,1488970380,1488970440,1488970500,1488970560,1488970620,1488970680,1488970740,1488970800,1488970860,1488970920,1488970980,1488971040,1488971100,1488971160,1488971220,1488971280,1488971340,1488971400,1488971460,1488971520,1488971580,1488971640,1488971700,1488971760,1488971820,1488971880,1488971940,1488972000,1488972060,1488972120,1488972180,1488972240,1488972300,1488972360,1488972420,1488972480,1488972540,1488972600,1488972660,1488972720,1488972780,1488972840,1488972900,1488972960,1488973020,1488973080,1488973140,1488973200,1488973260,1488973320,1488973380,1488973440,1488973500,1488973560,1488973620,1488973680,1488973740,1488973800,1488973860,1488973920,1488973980,1488974040,1488974100,1488974160,1488974220,1488974280,1488974340,1488974400,1488974460,1488974520,1488974580,1488974640,1488974700,1488974760,1488974820,1488974880,1488974940,1488975000,1488975060,1488975120,1488975180,1488975240,1488975300,1488975360,1488975420,1488975480,1488975540,1488975600,1488975660,1488975720,1488975780,1488975840,1488975900,1488975960,1488976020,1488976080,1488976140,1488976200,1488976260,1488976320,1488976380,1488976440,1488976500,1488976560,1488976620,1488976680,1488976740,1488976800,1488976860,1488976920,1488976980,1488977040,1488977100,1488977160,1488977220,1488977280,1488977340,1488977400,1488977460,1488977520,1488977580,1488977640,1488977700,1488977760,1488977820,1488977880,1488977940,1488978000,1488978060,1488978120,1488978180,1488978240,1488978300,1488978360,1488978420,1488978480,1488978540,1488978600,1488978660,1488978720,1488978780,1488978840,1488978900,1488978960,1488979020,1488979080,1488979140,1488979200,1488979260,1488979320,1488979380,1488979440,1488979500,1488979560,1488979620,1488979680,1488979740,1488979800,1488979860,1488979920,1488979980,1488980040,1488980100,1488980160,1488980220,1488980280,1488980340,1488980400,1488980460,1488980520,1488980580,1488980640,1488980700,1488980760,1488980820,1488980880,1488980940,1488981000,1488981060,1488981120,1488981180,1488981240,1488981300,1488981360,1488981420,1488981480,1488981540,1488981600,1488981660,1488981720,1488981780,1488981840,1488981900,1488981960,1488982020,1488982080,1488982140,1488982200,1488982260,1488982320,1488982380,1488982440,1488982500,1488982560,1488982620,1488982680,1488982740,1488982800,1488982860,1488982920,1488982980,1488983040,1488983100,1488983160,1488983220,1488983280,1488983340,1488983400,1488983460,1488983520,1488983580,1488983640,1488983700,1488983760,1488983820,1488983880,1488983940,1488984000,1488984060,1488984120,1488984180,1488984240,1488984300,1488984360,1488984420,1488984480,1488984540,1488984600,1488984660,1488984720,1488984780,1488984840,1488984900,1488984960,1488985020,1488985080,1488985140,1488985200,1488985260,1488985320,1488985380,1488985440,1488985500,1488985560,1488985620,1488985680,1488985740,1488985800,1488985860,1488985920,1488985980,1488986040,1488986100,1488986160,1488986220,1488986280,1488986340,1488986400,1488986460,1488986520,1488986580,1488986640,1488986700,1488986760,1488986820,1488986880,1488986940,1488987000,1488987060,1488987120,1488987180,1488987240,1488987300,1488987360,1488987420,1488987480,1488987540,1488987600,1488987660,1488987720,1488987780,1488987840,1488987900,1488987960,1488988020,1488988080,1488988140,1488988200,1488988260,1488988320,1488988380,1488988440,1488988500,1488988560,1488988620,1488988680,1488988740,1488988800],&quot;name&quot;:&quot;root&quot;}],&quot;unit&quot;:60,&quot;title&quot;:&quot;队列 absolute_used_capacity&quot;,&quot;flag&quot;:false,&quot;end_time&quot;:1488988800,&quot;y_unit&quot;:&quot;百分比(%)&quot;,&quot;start_time&quot;:1488729600}}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Yarn_RM_User_Chart_20170306_20170312" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="startTime" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1488729600</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">startTime</stringProp>
                </elementProp>
                <elementProp name="endTime" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1488988800</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">endTime</stringProp>
                </elementProp>
                <elementProp name="metric" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">absolute_used_capacity</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">metric</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/yarn/userChart</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1930566488">{&quot;code&quot;:0,&quot;msg&quot;:&quot;success get data&quot;,&quot;data&quot;:{&quot;datas&quot;:[],&quot;startTime&quot;:1488729600,&quot;unit&quot;:&quot;60&quot;,&quot;title&quot;:&quot;&quot;,&quot;y_unit&quot;:&quot;百分比(%)&quot;,&quot;endTime&quot;:1488988800}}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Statistic_Analytic_Comparision" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Comparision_MR_201703060312_201703130319" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="startTimeB" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1488729600</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">startTimeB</stringProp>
                </elementProp>
                <elementProp name="endTimeB" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1489248000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">endTimeB</stringProp>
                </elementProp>
                <elementProp name="startTimeA" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1489334400</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">startTimeA</stringProp>
                </elementProp>
                <elementProp name="endTimeA" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1489852800</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">endTimeA</stringProp>
                </elementProp>
                <elementProp name="typeName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">mr</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">typeName</stringProp>
                </elementProp>
                <elementProp name="metrics" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">totalcount,totaltime,jobtaskcpumilliseconds,failedcount,totaltaskcount,maptaskcount,reducetaskcount,jobfilesystemhdfsbytesread,jobfilesystemhdfsreadopt</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">metrics</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/comparator/data</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-167108022">{&quot;code&quot;:0,&quot;msg&quot;:&quot;success get data&quot;,&quot;data&quot;:{&quot;Job数&quot;:{&quot;title&quot;:&quot;指标Job数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Job数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:2104.0,&quot;desValue&quot;:2208.0,&quot;incrRate&quot;:&quot;4.94&quot;,&quot;incrValue&quot;:104.0,&quot;beforeAvg&quot;:&quot;1&quot;,&quot;afterAvg&quot;:&quot;1&quot;}]},&quot;Reduce数&quot;:{&quot;title&quot;:&quot;指标Reduce数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Reduce数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:9862.0,&quot;desValue&quot;:10290.0,&quot;incrRate&quot;:&quot;4.34&quot;,&quot;incrValue&quot;:428.0,&quot;beforeAvg&quot;:&quot;4.6873&quot;,&quot;afterAvg&quot;:&quot;4.6603&quot;}]},&quot;Hdfs读操作数&quot;:{&quot;title&quot;:&quot;指标Hdfs读操作数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Hdfs读操作数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:3549373.0,&quot;desValue&quot;:3844661.0,&quot;incrRate&quot;:&quot;8.32&quot;,&quot;incrValue&quot;:295288.0,&quot;beforeAvg&quot;:&quot;1,686.9644&quot;,&quot;afterAvg&quot;:&quot;1,741.2414&quot;}]},&quot;heads&quot;:[&quot;username&quot;,&quot;originValue&quot;,&quot;desValue&quot;,&quot;incrRate&quot;,&quot;incrValue&quot;,&quot;beforeAvg&quot;,&quot;afterAvg&quot;],&quot;失败Job数&quot;:{&quot;title&quot;:&quot;指标失败Job数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;失败Job数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;Hdfs读字节数(G)&quot;:{&quot;title&quot;:&quot;指标Hdfs读字节数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Hdfs读字节数(G)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:1677.7,&quot;desValue&quot;:1739.51,&quot;incrRate&quot;:&quot;3.68&quot;,&quot;incrValue&quot;:61.81,&quot;beforeAvg&quot;:&quot;0.7974&quot;,&quot;afterAvg&quot;:&quot;0.7878&quot;}]},&quot;Cpu时间(h)&quot;:{&quot;title&quot;:&quot;指标Cpu时间的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Cpu时间(h)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:528.94,&quot;desValue&quot;:588.72,&quot;incrRate&quot;:&quot;11.3&quot;,&quot;incrValue&quot;:59.78,&quot;beforeAvg&quot;:&quot;0.2514&quot;,&quot;afterAvg&quot;:&quot;0.2666&quot;}]},&quot;总时间(h)&quot;:{&quot;title&quot;:&quot;指标总时间的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;总时间(h)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:256.61,&quot;desValue&quot;:304.51,&quot;incrRate&quot;:&quot;18.67&quot;,&quot;incrValue&quot;:47.9,&quot;beforeAvg&quot;:&quot;0.122&quot;,&quot;afterAvg&quot;:&quot;0.1379&quot;}]},&quot;Task数&quot;:{&quot;title&quot;:&quot;指标Task数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Task数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:49264.0,&quot;desValue&quot;:54149.0,&quot;incrRate&quot;:&quot;9.92&quot;,&quot;incrValue&quot;:4885.0,&quot;beforeAvg&quot;:&quot;23.4144&quot;,&quot;afterAvg&quot;:&quot;24.524&quot;}]},&quot;Map数&quot;:{&quot;title&quot;:&quot;指标Map数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Map数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:39402.0,&quot;desValue&quot;:43859.0,&quot;incrRate&quot;:&quot;11.31&quot;,&quot;incrValue&quot;:4457.0,&quot;beforeAvg&quot;:&quot;18.7272&quot;,&quot;afterAvg&quot;:&quot;19.8637&quot;}]}}}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Comparision_Hive_201703060312_201703130319" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="startTimeB" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1488729600</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">startTimeB</stringProp>
                </elementProp>
                <elementProp name="endTimeB" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1489248000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">endTimeB</stringProp>
                </elementProp>
                <elementProp name="startTimeA" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1489334400</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">startTimeA</stringProp>
                </elementProp>
                <elementProp name="endTimeA" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1489852800</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">endTimeA</stringProp>
                </elementProp>
                <elementProp name="typeName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">hive</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">typeName</stringProp>
                </elementProp>
                <elementProp name="metrics" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">totalcount,totaltime,jobtaskcpumilliseconds,failedcount,totaltaskcount,maptaskcount,reducetaskcount,jobfilesystemhdfsbytesread,jobfilesystemhdfsreadopt</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">metrics</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/comparator/data</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1399205541">{&quot;code&quot;:0,&quot;msg&quot;:&quot;success get data&quot;,&quot;data&quot;:{&quot;Job数&quot;:{&quot;title&quot;:&quot;指标Job数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Job数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:18.0,&quot;desValue&quot;:8.0,&quot;incrRate&quot;:&quot;-55.56&quot;,&quot;incrValue&quot;:-10.0,&quot;beforeAvg&quot;:&quot;1&quot;,&quot;afterAvg&quot;:&quot;1&quot;}]},&quot;Reduce数&quot;:{&quot;title&quot;:&quot;指标Reduce数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Reduce数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;Hdfs读操作数&quot;:{&quot;title&quot;:&quot;指标Hdfs读操作数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Hdfs读操作数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:9451.0,&quot;desValue&quot;:5426.0,&quot;incrRate&quot;:&quot;-42.59&quot;,&quot;incrValue&quot;:-4025.0,&quot;beforeAvg&quot;:&quot;525.0556&quot;,&quot;afterAvg&quot;:&quot;678.25&quot;}]},&quot;heads&quot;:[&quot;username&quot;,&quot;originValue&quot;,&quot;desValue&quot;,&quot;incrRate&quot;,&quot;incrValue&quot;,&quot;beforeAvg&quot;,&quot;afterAvg&quot;],&quot;失败Job数&quot;:{&quot;title&quot;:&quot;指标失败Job数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;失败Job数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;Hdfs读字节数(G)&quot;:{&quot;title&quot;:&quot;指标Hdfs读字节数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Hdfs读字节数(G)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.46,&quot;desValue&quot;:0.25,&quot;incrRate&quot;:&quot;-45.65&quot;,&quot;incrValue&quot;:-0.21,&quot;beforeAvg&quot;:&quot;0.0256&quot;,&quot;afterAvg&quot;:&quot;0.0312&quot;}]},&quot;Cpu时间(h)&quot;:{&quot;title&quot;:&quot;指标Cpu时间的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Cpu时间(h)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:1.0,&quot;desValue&quot;:0.6,&quot;incrRate&quot;:&quot;-40&quot;,&quot;incrValue&quot;:-0.4,&quot;beforeAvg&quot;:&quot;0.0556&quot;,&quot;afterAvg&quot;:&quot;0.075&quot;}]},&quot;总时间(h)&quot;:{&quot;title&quot;:&quot;指标总时间的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;总时间(h)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.21,&quot;desValue&quot;:0.16,&quot;incrRate&quot;:&quot;-23.81&quot;,&quot;incrValue&quot;:-0.05,&quot;beforeAvg&quot;:&quot;0.0117&quot;,&quot;afterAvg&quot;:&quot;0.02&quot;}]},&quot;Task数&quot;:{&quot;title&quot;:&quot;指标Task数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Task数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:1944.0,&quot;desValue&quot;:1115.0,&quot;incrRate&quot;:&quot;-42.64&quot;,&quot;incrValue&quot;:-829.0,&quot;beforeAvg&quot;:&quot;108&quot;,&quot;afterAvg&quot;:&quot;139.375&quot;}]},&quot;Map数&quot;:{&quot;title&quot;:&quot;指标Map数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Map数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:1944.0,&quot;desValue&quot;:1115.0,&quot;incrRate&quot;:&quot;-42.64&quot;,&quot;incrValue&quot;:-829.0,&quot;beforeAvg&quot;:&quot;108&quot;,&quot;afterAvg&quot;:&quot;139.375&quot;}]}}}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Comparision_MR_Hive_201703060312_201703130319" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="startTimeB" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1488729600</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">startTimeB</stringProp>
                </elementProp>
                <elementProp name="endTimeB" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1489248000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">endTimeB</stringProp>
                </elementProp>
                <elementProp name="startTimeA" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1489334400</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">startTimeA</stringProp>
                </elementProp>
                <elementProp name="endTimeA" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1489852800</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">endTimeA</stringProp>
                </elementProp>
                <elementProp name="typeName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">mr_hive</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">typeName</stringProp>
                </elementProp>
                <elementProp name="metrics" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">totalcount,totaltime,jobtaskgctimemillis,jobtaskcpumilliseconds,successfulcount,failedcount,killedcount,totaltaskcount,maptaskcount,reducetaskcount,successfultaskcount,failedtaskcount,killedtaskcount,successfulmaptaskcount,failedmaptaskcount,killedmaptaskcount,successfulreducetaskcount,failedreducetaskcount,killedreducetaskcount,maptime,reducetime,successfultime,failedtime,killedtime,successfulmaptime,failedmaptime,killedmaptime,successfulreducetime,failedreducetime,killedreducetime,jobfileinputformatbytesread,jobfileoutputformatbyteswritten,jobfilesystemfilebytesread,jobfilesystemfilebyteswritten,jobfilesystemfilereadopt,jobfilesystemfilelargereadopt,jobfilesystemfilewriteopt,jobfilesystemhdfsbytesread,jobfilesystemhdfsbyteswritten,jobfilesystemhdfsreadopt,jobfilesystemhdfslargereadopt,jobfilesystemhdfswriteopt,jobjobnumfailedmaps,jobjobnumfailedreduces,jobjobnumkilledmaps,jobjobnumkilledreduces,jobjobtotallaunchedmaps,jobjobtotallaunchedreduces,jobjobotherlocalmaps,jobjobdatalocalmaps,jobjobracklocalmaps,jobjobslotsmillismaps,jobjobslotsmillisreduces,jobjobmillismaps,jobjobmillisreduces,jobjobvcoresmillismaps,jobjobfallowslotsmillismaps,jobjobfallowslotsmillisreduces,jobjobmbmillismaps,jobjobmbmillisreduces,jobtasksplitrawbytes,jobtaskspilledrecords,jobtaskshuffledmaps,jobtaskfailedshuffle,jobtaskcommittedheapbytes,jobtaskphysicalmemorybytes,jobtaskvirtualmemorybytes,jobtaskmapinputrecords,jobtaskmapoutputrecords,jobtaskmapoutputbytes,jobtaskmapoutputmaterializedbytes,jobtaskmapskippedrecords,jobtaskmergedmapoutputs,jobtaskreduceinputgroups,jobtaskreduceshufflebytes,jobtaskreduceinputrecords,jobtaskreduceoutputrecords,jobtaskreduceskippedrecords,jobtaskreduceskippedgroups,jobtaskcombineinputrecords,jobtaskcombineoutputrecords</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">metrics</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/comparator/data</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1931749569">{&quot;code&quot;:0,&quot;msg&quot;:&quot;success get data&quot;,&quot;data&quot;:{&quot;失败MapTask数&quot;:{&quot;title&quot;:&quot;指标失败MapTask数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;失败MapTask数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;Reduce使用槽位总时间&quot;:{&quot;title&quot;:&quot;指标Reduce使用槽位总时间的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Reduce使用槽位总时间&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:5.970882117E9,&quot;desValue&quot;:7.153379603E9,&quot;incrRate&quot;:&quot;19.8&quot;,&quot;incrValue&quot;:1.182497486E9,&quot;beforeAvg&quot;:&quot;2,813,799.3011&quot;,&quot;afterAvg&quot;:&quot;3,228,059.3876&quot;}]},&quot;失败Task数&quot;:{&quot;title&quot;:&quot;指标失败Task数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;失败Task数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;Hdfs大文件读取操作数&quot;:{&quot;title&quot;:&quot;指标Hdfs大文件读取操作数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Hdfs大文件读取操作数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;Reduce输出数据行&quot;:{&quot;title&quot;:&quot;指标Reduce输出数据行的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Reduce输出数据行&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:1513735.0,&quot;desValue&quot;:1722438.0,&quot;incrRate&quot;:&quot;13.79&quot;,&quot;incrValue&quot;:208703.0,&quot;beforeAvg&quot;:&quot;713.353&quot;,&quot;afterAvg&quot;:&quot;777.2735&quot;}]},&quot;本地文件读操作数&quot;:{&quot;title&quot;:&quot;指标本地文件读操作数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;本地文件读操作数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;Hdfs读字节数(G)&quot;:{&quot;title&quot;:&quot;指标Hdfs读字节数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Hdfs读字节数(G)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:1678.17,&quot;desValue&quot;:1739.76,&quot;incrRate&quot;:&quot;3.67&quot;,&quot;incrValue&quot;:61.59,&quot;beforeAvg&quot;:&quot;0.7908&quot;,&quot;afterAvg&quot;:&quot;0.7851&quot;}]},&quot;Cpu时间(h)&quot;:{&quot;title&quot;:&quot;指标Cpu时间的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Cpu时间(h)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:529.94,&quot;desValue&quot;:589.32,&quot;incrRate&quot;:&quot;11.21&quot;,&quot;incrValue&quot;:59.38,&quot;beforeAvg&quot;:&quot;0.2497&quot;,&quot;afterAvg&quot;:&quot;0.2659&quot;}]},&quot;Reduce兆秒总时间&quot;:{&quot;title&quot;:&quot;指标Reduce兆秒总时间的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Reduce兆秒总时间&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:1.2228366575616E13,&quot;desValue&quot;:1.4650121426944E13,&quot;incrRate&quot;:&quot;19.8&quot;,&quot;incrValue&quot;:2.421754851328E12,&quot;beforeAvg&quot;:&quot;5,762,660,968.7163&quot;,&quot;afterAvg&quot;:&quot;6,611,065,625.8773&quot;}]},&quot;启动Reduce数&quot;:{&quot;title&quot;:&quot;指标启动Reduce数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;启动Reduce数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:9862.0,&quot;desValue&quot;:10296.0,&quot;incrRate&quot;:&quot;4.4&quot;,&quot;incrValue&quot;:434.0,&quot;beforeAvg&quot;:&quot;4.6475&quot;,&quot;afterAvg&quot;:&quot;4.6462&quot;}]},&quot;失败Map数&quot;:{&quot;title&quot;:&quot;指标失败Map数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;失败Map数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:8.0,&quot;desValue&quot;:7.0,&quot;incrRate&quot;:&quot;-12.5&quot;,&quot;incrValue&quot;:-1.0,&quot;beforeAvg&quot;:&quot;0.0038&quot;,&quot;afterAvg&quot;:&quot;0.0032&quot;}]},&quot;Split字节数(G)&quot;:{&quot;title&quot;:&quot;指标Split字节数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Split字节数(G)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.01,&quot;desValue&quot;:0.01,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;Reduce毫秒总时间&quot;:{&quot;title&quot;:&quot;指标Reduce毫秒总时间的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Reduce毫秒总时间&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:1.946188539E9,&quot;desValue&quot;:2.287725564E9,&quot;incrRate&quot;:&quot;17.55&quot;,&quot;incrValue&quot;:3.41537025E8,&quot;beforeAvg&quot;:&quot;917,148.2276&quot;,&quot;afterAvg&quot;:&quot;1,032,367.1318&quot;}]},&quot;被杀MapTask数&quot;:{&quot;title&quot;:&quot;指标被杀MapTask数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;被杀MapTask数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;启动Map数&quot;:{&quot;title&quot;:&quot;指标启动Map数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;启动Map数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:41354.0,&quot;desValue&quot;:44981.0,&quot;incrRate&quot;:&quot;8.77&quot;,&quot;incrValue&quot;:3627.0,&quot;beforeAvg&quot;:&quot;19.4882&quot;,&quot;afterAvg&quot;:&quot;20.2983&quot;}]},&quot;Map输出实例化字节(G)&quot;:{&quot;title&quot;:&quot;指标Map输出实例化字节的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Map输出实例化字节(G)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:28.13,&quot;desValue&quot;:27.15,&quot;incrRate&quot;:&quot;-3.48&quot;,&quot;incrValue&quot;:-0.98,&quot;beforeAvg&quot;:&quot;0.0133&quot;,&quot;afterAvg&quot;:&quot;0.0123&quot;}]},&quot;失败Map总时间(h)&quot;:{&quot;title&quot;:&quot;指标失败Map总时间的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;失败Map总时间(h)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;Map兆秒总时间&quot;:{&quot;title&quot;:&quot;指标Map兆秒总时间的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Map兆秒总时间&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:1.5756854380544E13,&quot;desValue&quot;:1.9309428611072E13,&quot;incrRate&quot;:&quot;22.55&quot;,&quot;incrValue&quot;:3.552574230528E12,&quot;beforeAvg&quot;:&quot;7,425,473,317.8812&quot;,&quot;afterAvg&quot;:&quot;8,713,641,069.9783&quot;}]},&quot;输出字节数(G)&quot;:{&quot;title&quot;:&quot;指标输出字节数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;输出字节数(G)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;成功Job总时间(h)&quot;:{&quot;title&quot;:&quot;指标成功Job总时间的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;成功Job总时间(h)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:256.82,&quot;desValue&quot;:304.68,&quot;incrRate&quot;:&quot;18.64&quot;,&quot;incrValue&quot;:47.86,&quot;beforeAvg&quot;:&quot;0.121&quot;,&quot;afterAvg&quot;:&quot;0.1375&quot;}]},&quot;Map数&quot;:{&quot;title&quot;:&quot;指标Map数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Map数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:41346.0,&quot;desValue&quot;:44974.0,&quot;incrRate&quot;:&quot;8.77&quot;,&quot;incrValue&quot;:3628.0,&quot;beforeAvg&quot;:&quot;19.4844&quot;,&quot;afterAvg&quot;:&quot;20.2951&quot;}]},&quot;本地数据Map数&quot;:{&quot;title&quot;:&quot;指标本地数据Map数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;本地数据Map数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:2206.0,&quot;desValue&quot;:1863.0,&quot;incrRate&quot;:&quot;-15.55&quot;,&quot;incrValue&quot;:-343.0,&quot;beforeAvg&quot;:&quot;1.0396&quot;,&quot;afterAvg&quot;:&quot;0.8407&quot;}]},&quot;Reduce数&quot;:{&quot;title&quot;:&quot;指标Reduce数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Reduce数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:9862.0,&quot;desValue&quot;:10290.0,&quot;incrRate&quot;:&quot;4.34&quot;,&quot;incrValue&quot;:428.0,&quot;beforeAvg&quot;:&quot;4.6475&quot;,&quot;afterAvg&quot;:&quot;4.6435&quot;}]},&quot;heads&quot;:[&quot;username&quot;,&quot;originValue&quot;,&quot;desValue&quot;,&quot;incrRate&quot;,&quot;incrValue&quot;,&quot;beforeAvg&quot;,&quot;afterAvg&quot;],&quot;成功Map总时间(h)&quot;:{&quot;title&quot;:&quot;指标成功Map总时间的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;成功Map总时间(h)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:1655.62,&quot;desValue&quot;:2349.69,&quot;incrRate&quot;:&quot;41.92&quot;,&quot;incrValue&quot;:694.07,&quot;beforeAvg&quot;:&quot;0.7802&quot;,&quot;afterAvg&quot;:&quot;1.0603&quot;}]},&quot;Map空闲槽毫秒(h)&quot;:{&quot;title&quot;:&quot;指标Map空闲槽毫秒的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Map空闲槽毫秒(h)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;失败shuffle字节(G)&quot;:{&quot;title&quot;:&quot;指标失败shuffle字节的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;失败shuffle字节(G)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;Hdfs写字节数(G)&quot;:{&quot;title&quot;:&quot;指标Hdfs写字节数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Hdfs写字节数(G)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:169.87,&quot;desValue&quot;:166.68,&quot;incrRate&quot;:&quot;-1.88&quot;,&quot;incrValue&quot;:-3.19,&quot;beforeAvg&quot;:&quot;0.0801&quot;,&quot;afterAvg&quot;:&quot;0.0752&quot;}]},&quot;ShuffleMap数(G)&quot;:{&quot;title&quot;:&quot;指标ShuffleMap数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;ShuffleMap数(G)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;全堆使用字节(G)&quot;:{&quot;title&quot;:&quot;指标全堆使用字节的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;全堆使用字节(G)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:56925.99,&quot;desValue&quot;:60918.79,&quot;incrRate&quot;:&quot;7.01&quot;,&quot;incrValue&quot;:3992.8,&quot;beforeAvg&quot;:&quot;26.8266&quot;,&quot;afterAvg&quot;:&quot;27.4904&quot;}]},&quot;虚拟内存使用量(G)&quot;:{&quot;title&quot;:&quot;指标虚拟内存使用量的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;虚拟内存使用量(G)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:138848.31,&quot;desValue&quot;:149233.44,&quot;incrRate&quot;:&quot;7.48&quot;,&quot;incrValue&quot;:10385.13,&quot;beforeAvg&quot;:&quot;65.4328&quot;,&quot;afterAvg&quot;:&quot;67.3436&quot;}]},&quot;本地RackMap数&quot;:{&quot;title&quot;:&quot;指标本地RackMap数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;本地RackMap数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:697.0,&quot;desValue&quot;:512.0,&quot;incrRate&quot;:&quot;-26.54&quot;,&quot;incrValue&quot;:-185.0,&quot;beforeAvg&quot;:&quot;0.3285&quot;,&quot;afterAvg&quot;:&quot;0.231&quot;}]},&quot;Map使用槽位总时间&quot;:{&quot;title&quot;:&quot;指标Map使用槽位总时间的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Map使用槽位总时间&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:7.693776553E9,&quot;desValue&quot;:9.428431939E9,&quot;incrRate&quot;:&quot;22.55&quot;,&quot;incrValue&quot;:1.734655386E9,&quot;beforeAvg&quot;:&quot;3,625,719.3935&quot;,&quot;afterAvg&quot;:&quot;4,254,707.5537&quot;}]},&quot;本地文件读字节数(G)&quot;:{&quot;title&quot;:&quot;指标本地文件读字节数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;本地文件读字节数(G)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:27.95,&quot;desValue&quot;:26.96,&quot;incrRate&quot;:&quot;-3.54&quot;,&quot;incrValue&quot;:-0.99,&quot;beforeAvg&quot;:&quot;0.0132&quot;,&quot;afterAvg&quot;:&quot;0.0122&quot;}]},&quot;Hdfs写操作数&quot;:{&quot;title&quot;:&quot;指标Hdfs写操作数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Hdfs写操作数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:4071.0,&quot;desValue&quot;:2411.0,&quot;incrRate&quot;:&quot;-40.78&quot;,&quot;incrValue&quot;:-1660.0,&quot;beforeAvg&quot;:&quot;1.9185&quot;,&quot;afterAvg&quot;:&quot;1.088&quot;}]},&quot;失败Reduce数&quot;:{&quot;title&quot;:&quot;指标失败Reduce数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;失败Reduce数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:6.0,&quot;incrRate&quot;:&quot;∞&quot;,&quot;incrValue&quot;:6.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0.0027&quot;}]},&quot;MapTask数&quot;:{&quot;title&quot;:&quot;指标MapTask数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;MapTask数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:41346.0,&quot;desValue&quot;:44974.0,&quot;incrRate&quot;:&quot;8.77&quot;,&quot;incrValue&quot;:3628.0,&quot;beforeAvg&quot;:&quot;19.4844&quot;,&quot;afterAvg&quot;:&quot;20.2951&quot;}]},&quot;Reduce输入数据行&quot;:{&quot;title&quot;:&quot;指标Reduce输入数据行的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Reduce输入数据行&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:1.733094904E9,&quot;desValue&quot;:1.718035032E9,&quot;incrRate&quot;:&quot;-0.87&quot;,&quot;incrValue&quot;:-1.5059872E7,&quot;beforeAvg&quot;:&quot;816,727.099&quot;,&quot;afterAvg&quot;:&quot;775,286.5668&quot;}]},&quot;Hdfs读操作数&quot;:{&quot;title&quot;:&quot;指标Hdfs读操作数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Hdfs读操作数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:3558824.0,&quot;desValue&quot;:3850087.0,&quot;incrRate&quot;:&quot;8.18&quot;,&quot;incrValue&quot;:291263.0,&quot;beforeAvg&quot;:&quot;1,677.1084&quot;,&quot;afterAvg&quot;:&quot;1,737.4039&quot;}]},&quot;输入字节数(G)&quot;:{&quot;title&quot;:&quot;指标输入字节数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;输入字节数(G)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:484.75,&quot;desValue&quot;:478.07,&quot;incrRate&quot;:&quot;-1.38&quot;,&quot;incrValue&quot;:-6.68,&quot;beforeAvg&quot;:&quot;0.2284&quot;,&quot;afterAvg&quot;:&quot;0.2157&quot;}]},&quot;Reduce跳过数据行&quot;:{&quot;title&quot;:&quot;指标Reduce跳过数据行的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Reduce跳过数据行&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;失败Job数&quot;:{&quot;title&quot;:&quot;指标失败Job数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;失败Job数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;成功Reduce总时间(h)&quot;:{&quot;title&quot;:&quot;指标成功Reduce总时间的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;成功Reduce总时间(h)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:631.47,&quot;desValue&quot;:741.32,&quot;incrRate&quot;:&quot;17.4&quot;,&quot;incrValue&quot;:109.85,&quot;beforeAvg&quot;:&quot;0.2976&quot;,&quot;afterAvg&quot;:&quot;0.3345&quot;}]},&quot;MapVcore总时间&quot;:{&quot;title&quot;:&quot;指标MapVcore总时间的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;MapVcore总时间&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:5.762496139E9,&quot;desValue&quot;:8.261403125E9,&quot;incrRate&quot;:&quot;43.37&quot;,&quot;incrValue&quot;:2.498906986E9,&quot;beforeAvg&quot;:&quot;2,715,596.6725&quot;,&quot;afterAvg&quot;:&quot;3,728,070.0023&quot;}]},&quot;Split记录数(G)&quot;:{&quot;title&quot;:&quot;指标Split记录数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Split记录数(G)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:3.23,&quot;desValue&quot;:3.2,&quot;incrRate&quot;:&quot;-0.93&quot;,&quot;incrValue&quot;:-0.03,&quot;beforeAvg&quot;:&quot;0.0015&quot;,&quot;afterAvg&quot;:&quot;0.0014&quot;}]},&quot;Map合并输入数据行&quot;:{&quot;title&quot;:&quot;指标Map合并输入数据行的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Map合并输入数据行&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:2.0750874E7,&quot;desValue&quot;:2.3155532E7,&quot;incrRate&quot;:&quot;11.59&quot;,&quot;incrValue&quot;:2404658.0,&quot;beforeAvg&quot;:&quot;9,778.9227&quot;,&quot;afterAvg&quot;:&quot;10,449.2473&quot;}]},&quot;被杀Task数&quot;:{&quot;title&quot;:&quot;指标被杀Task数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;被杀Task数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;Task数&quot;:{&quot;title&quot;:&quot;指标Task数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Task数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:51208.0,&quot;desValue&quot;:55264.0,&quot;incrRate&quot;:&quot;7.92&quot;,&quot;incrValue&quot;:4056.0,&quot;beforeAvg&quot;:&quot;24.132&quot;,&quot;afterAvg&quot;:&quot;24.9386&quot;}]},&quot;被杀Map数&quot;:{&quot;title&quot;:&quot;指标被杀Map数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;被杀Map数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;Job数&quot;:{&quot;title&quot;:&quot;指标Job数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Job数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:2122.0,&quot;desValue&quot;:2216.0,&quot;incrRate&quot;:&quot;4.43&quot;,&quot;incrValue&quot;:94.0,&quot;beforeAvg&quot;:&quot;1&quot;,&quot;afterAvg&quot;:&quot;1&quot;}]},&quot;Map合并输出数&quot;:{&quot;title&quot;:&quot;指标Map合并输出数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Map合并输出数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:88119.0,&quot;desValue&quot;:95024.0,&quot;incrRate&quot;:&quot;7.84&quot;,&quot;incrValue&quot;:6905.0,&quot;beforeAvg&quot;:&quot;41.5264&quot;,&quot;afterAvg&quot;:&quot;42.8809&quot;}]},&quot;Map合并输出数据行&quot;:{&quot;title&quot;:&quot;指标Map合并输出数据行的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Map合并输出数据行&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:6058771.0,&quot;desValue&quot;:6807634.0,&quot;incrRate&quot;:&quot;12.36&quot;,&quot;incrValue&quot;:748863.0,&quot;beforeAvg&quot;:&quot;2,855.2172&quot;,&quot;afterAvg&quot;:&quot;3,072.037&quot;}]},&quot;物理内存使用量(G)&quot;:{&quot;title&quot;:&quot;指标物理内存使用量的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;物理内存使用量(G)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:41651.08,&quot;desValue&quot;:45374.65,&quot;incrRate&quot;:&quot;8.94&quot;,&quot;incrValue&quot;:3723.57,&quot;beforeAvg&quot;:&quot;19.6282&quot;,&quot;afterAvg&quot;:&quot;20.4759&quot;}]},&quot;Gc时间(h)&quot;:{&quot;title&quot;:&quot;指标Gc时间的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Gc时间(h)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:12.69,&quot;desValue&quot;:12.7,&quot;incrRate&quot;:&quot;0.08&quot;,&quot;incrValue&quot;:0.01,&quot;beforeAvg&quot;:&quot;0.006&quot;,&quot;afterAvg&quot;:&quot;0.0057&quot;}]},&quot;本地文件写操作数&quot;:{&quot;title&quot;:&quot;指标本地文件写操作数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;本地文件写操作数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;被杀Job数&quot;:{&quot;title&quot;:&quot;指标被杀Job数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;被杀Job数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;被杀Reduce总时间(h)&quot;:{&quot;title&quot;:&quot;指标被杀Reduce总时间的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;被杀Reduce总时间(h)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;本地大文件读取数&quot;:{&quot;title&quot;:&quot;指标本地大文件读取数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;本地大文件读取数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;本地文件写字节数(G)&quot;:{&quot;title&quot;:&quot;指标本地文件写字节数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;本地文件写字节数(G)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:62.74,&quot;desValue&quot;:61.23,&quot;incrRate&quot;:&quot;-2.41&quot;,&quot;incrValue&quot;:-1.51,&quot;beforeAvg&quot;:&quot;0.0296&quot;,&quot;afterAvg&quot;:&quot;0.0276&quot;}]},&quot;Map输出字节(G)&quot;:{&quot;title&quot;:&quot;指标Map输出字节的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Map输出字节(G)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:289.4,&quot;desValue&quot;:286.67,&quot;incrRate&quot;:&quot;-0.94&quot;,&quot;incrValue&quot;:-2.73,&quot;beforeAvg&quot;:&quot;0.1364&quot;,&quot;afterAvg&quot;:&quot;0.1294&quot;}]},&quot;Map毫秒总时间(h)&quot;:{&quot;title&quot;:&quot;指标Map毫秒总时间的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Map毫秒总时间(h)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:1600.69,&quot;desValue&quot;:2294.83,&quot;incrRate&quot;:&quot;43.37&quot;,&quot;incrValue&quot;:694.14,&quot;beforeAvg&quot;:&quot;0.7543&quot;,&quot;afterAvg&quot;:&quot;1.0356&quot;}]},&quot;被杀Map总时间(h)&quot;:{&quot;title&quot;:&quot;指标被杀Map总时间的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;被杀Map总时间(h)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;总时间(h)&quot;:{&quot;title&quot;:&quot;指标总时间的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;总时间(h)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:256.82,&quot;desValue&quot;:304.68,&quot;incrRate&quot;:&quot;18.64&quot;,&quot;incrValue&quot;:47.86,&quot;beforeAvg&quot;:&quot;0.121&quot;,&quot;afterAvg&quot;:&quot;0.1375&quot;}]},&quot;成功Job数&quot;:{&quot;title&quot;:&quot;指标成功Job数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;成功Job数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:2122.0,&quot;desValue&quot;:2216.0,&quot;incrRate&quot;:&quot;4.43&quot;,&quot;incrValue&quot;:94.0,&quot;beforeAvg&quot;:&quot;1&quot;,&quot;afterAvg&quot;:&quot;1&quot;}]},&quot;Map输入记录行&quot;:{&quot;title&quot;:&quot;指标Map输入记录行的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Map输入记录行&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:1.85467115E9,&quot;desValue&quot;:1.841837445E9,&quot;incrRate&quot;:&quot;-0.69&quot;,&quot;incrValue&quot;:-1.2833705E7,&quot;beforeAvg&quot;:&quot;874,020.3346&quot;,&quot;afterAvg&quot;:&quot;831,154.0817&quot;}]},&quot;失败ReduceTask数&quot;:{&quot;title&quot;:&quot;指标失败ReduceTask数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;失败ReduceTask数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;Reduce跳过组数&quot;:{&quot;title&quot;:&quot;指标Reduce跳过组数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Reduce跳过组数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;Map总时间(h)&quot;:{&quot;title&quot;:&quot;指标Map总时间的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Map总时间(h)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:1655.62,&quot;desValue&quot;:2349.69,&quot;incrRate&quot;:&quot;41.92&quot;,&quot;incrValue&quot;:694.07,&quot;beforeAvg&quot;:&quot;0.7802&quot;,&quot;afterAvg&quot;:&quot;1.0603&quot;}]},&quot;本地其它Map数&quot;:{&quot;title&quot;:&quot;指标本地其它Map数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;本地其它Map数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:38451.0,&quot;desValue&quot;:42606.0,&quot;incrRate&quot;:&quot;10.81&quot;,&quot;incrValue&quot;:4155.0,&quot;beforeAvg&quot;:&quot;18.1202&quot;,&quot;afterAvg&quot;:&quot;19.2265&quot;}]},&quot;成功ReduceTask数&quot;:{&quot;title&quot;:&quot;指标成功ReduceTask数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;成功ReduceTask数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:9862.0,&quot;desValue&quot;:10290.0,&quot;incrRate&quot;:&quot;4.34&quot;,&quot;incrValue&quot;:428.0,&quot;beforeAvg&quot;:&quot;4.6475&quot;,&quot;afterAvg&quot;:&quot;4.6435&quot;}]},&quot;Map跳过字节(G)&quot;:{&quot;title&quot;:&quot;指标Map跳过字节的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Map跳过字节(G)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;被杀ReduceTask数&quot;:{&quot;title&quot;:&quot;指标被杀ReduceTask数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;被杀ReduceTask数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;失败Job总时间(h)&quot;:{&quot;title&quot;:&quot;指标失败Job总时间的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;失败Job总时间(h)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;Reduce输入组数(G)&quot;:{&quot;title&quot;:&quot;指标Reduce输入组数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Reduce输入组数(G)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;被杀Job总时间(h)&quot;:{&quot;title&quot;:&quot;指标被杀Job总时间的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;被杀Job总时间(h)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;失败Reduce总时间(h)&quot;:{&quot;title&quot;:&quot;指标失败Reduce总时间的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;失败Reduce总时间(h)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;被杀Reduce数&quot;:{&quot;title&quot;:&quot;指标被杀Reduce数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;被杀Reduce数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;ReduceShuffle字节数(G)&quot;:{&quot;title&quot;:&quot;指标ReduceShuffle字节数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;ReduceShuffle字节数(G)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:28.13,&quot;desValue&quot;:27.15,&quot;incrRate&quot;:&quot;-3.48&quot;,&quot;incrValue&quot;:-0.98,&quot;beforeAvg&quot;:&quot;0.0133&quot;,&quot;afterAvg&quot;:&quot;0.0123&quot;}]},&quot;Reduce空闲槽毫秒(h)&quot;:{&quot;title&quot;:&quot;指标Reduce空闲槽毫秒的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Reduce空闲槽毫秒(h)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;成功Task数&quot;:{&quot;title&quot;:&quot;指标成功Task数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;成功Task数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:51208.0,&quot;desValue&quot;:55264.0,&quot;incrRate&quot;:&quot;7.92&quot;,&quot;incrValue&quot;:4056.0,&quot;beforeAvg&quot;:&quot;24.132&quot;,&quot;afterAvg&quot;:&quot;24.9386&quot;}]},&quot;Map输出记录行&quot;:{&quot;title&quot;:&quot;指标Map输出记录行的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Map输出记录行&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:1.747787007E9,&quot;desValue&quot;:1.73438293E9,&quot;incrRate&quot;:&quot;-0.77&quot;,&quot;incrValue&quot;:-1.3404077E7,&quot;beforeAvg&quot;:&quot;823,650.8044&quot;,&quot;afterAvg&quot;:&quot;782,663.7771&quot;}]},&quot;Reduce总时间(h)&quot;:{&quot;title&quot;:&quot;指标Reduce总时间的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Reduce总时间(h)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:631.47,&quot;desValue&quot;:741.32,&quot;incrRate&quot;:&quot;17.4&quot;,&quot;incrValue&quot;:109.85,&quot;beforeAvg&quot;:&quot;0.2976&quot;,&quot;afterAvg&quot;:&quot;0.3345&quot;}]}}}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Comparision_Spark_201702270305_201703060312" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="startTimeB" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1488124800</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">startTimeB</stringProp>
                </elementProp>
                <elementProp name="endTimeB" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1488643200</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">endTimeB</stringProp>
                </elementProp>
                <elementProp name="startTimeA" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1488729600</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">startTimeA</stringProp>
                </elementProp>
                <elementProp name="endTimeA" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1489248000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">endTimeA</stringProp>
                </elementProp>
                <elementProp name="typeName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">spark</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">typeName</stringProp>
                </elementProp>
                <elementProp name="metrics" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">app_sum,app_total_time,spark_executor_memory,jvm_gc_time_sum,job_sum,stage_sum,task_sum,bytes_read,job_total_time,stage_total_time,task_total_time,task_failure_num</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">metrics</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/comparator/data</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-632137037">{&quot;code&quot;:0,&quot;msg&quot;:&quot;success get data&quot;,&quot;data&quot;:{&quot;Job总时间(h)&quot;:{&quot;title&quot;:&quot;指标Job总时间的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Job总时间(h)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:203.16,&quot;desValue&quot;:263.96,&quot;incrRate&quot;:&quot;29.93&quot;,&quot;incrValue&quot;:60.8,&quot;beforeAvg&quot;:&quot;0.1464&quot;,&quot;afterAvg&quot;:&quot;0.1799&quot;}]},&quot;Task总数&quot;:{&quot;title&quot;:&quot;指标Task总数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Task总数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:7575775.0,&quot;desValue&quot;:7837721.0,&quot;incrRate&quot;:&quot;3.46&quot;,&quot;incrValue&quot;:261946.0,&quot;beforeAvg&quot;:&quot;5,458.0512&quot;,&quot;afterAvg&quot;:&quot;5,342.6864&quot;}]},&quot;Stage总时间(h)&quot;:{&quot;title&quot;:&quot;指标Stage总时间的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Stage总时间(h)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:267.01,&quot;desValue&quot;:355.95,&quot;incrRate&quot;:&quot;33.31&quot;,&quot;incrValue&quot;:88.94,&quot;beforeAvg&quot;:&quot;0.1924&quot;,&quot;afterAvg&quot;:&quot;0.2426&quot;}]},&quot;GC总时间(h)&quot;:{&quot;title&quot;:&quot;指标GC总时间的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;GC总时间(h)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:1.97,&quot;desValue&quot;:2.37,&quot;incrRate&quot;:&quot;20.3&quot;,&quot;incrValue&quot;:0.4,&quot;beforeAvg&quot;:&quot;0.0014&quot;,&quot;afterAvg&quot;:&quot;0.0016&quot;}]},&quot;Task总时间(h)&quot;:{&quot;title&quot;:&quot;指标Task总时间的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Task总时间(h)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:7891.28,&quot;desValue&quot;:10988.2,&quot;incrRate&quot;:&quot;39.24&quot;,&quot;incrValue&quot;:3096.92,&quot;beforeAvg&quot;:&quot;5.6854&quot;,&quot;afterAvg&quot;:&quot;7.4903&quot;}]},&quot;读字节数(G)&quot;:{&quot;title&quot;:&quot;指标读字节数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;读字节数(G)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:75.43,&quot;desValue&quot;:97.33,&quot;incrRate&quot;:&quot;29.03&quot;,&quot;incrValue&quot;:21.9,&quot;beforeAvg&quot;:&quot;0.0543&quot;,&quot;afterAvg&quot;:&quot;0.0663&quot;}]},&quot;App总时间(h)&quot;:{&quot;title&quot;:&quot;指标App总时间的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;App总时间(h)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:267.01,&quot;desValue&quot;:355.95,&quot;incrRate&quot;:&quot;33.31&quot;,&quot;incrValue&quot;:88.94,&quot;beforeAvg&quot;:&quot;0.1924&quot;,&quot;afterAvg&quot;:&quot;0.2426&quot;}]},&quot;Task失败数&quot;:{&quot;title&quot;:&quot;指标Task失败数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Task失败数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:67555.0,&quot;desValue&quot;:86992.0,&quot;incrRate&quot;:&quot;28.77&quot;,&quot;incrValue&quot;:19437.0,&quot;beforeAvg&quot;:&quot;48.6707&quot;,&quot;afterAvg&quot;:&quot;59.2993&quot;}]},&quot;Job总数&quot;:{&quot;title&quot;:&quot;指标Job总数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Job总数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:50499.0,&quot;desValue&quot;:52812.0,&quot;incrRate&quot;:&quot;4.58&quot;,&quot;incrValue&quot;:2313.0,&quot;beforeAvg&quot;:&quot;36.3826&quot;,&quot;afterAvg&quot;:&quot;36&quot;}]},&quot;heads&quot;:[&quot;username&quot;,&quot;originValue&quot;,&quot;desValue&quot;,&quot;incrRate&quot;,&quot;incrValue&quot;,&quot;beforeAvg&quot;,&quot;afterAvg&quot;],&quot;App总内存(G)&quot;:{&quot;title&quot;:&quot;指标App总内存的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;App总内存(G)&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:19560.0,&quot;desValue&quot;:19490.0,&quot;incrRate&quot;:&quot;-0.36&quot;,&quot;incrValue&quot;:-70.0,&quot;beforeAvg&quot;:&quot;14.0922&quot;,&quot;afterAvg&quot;:&quot;13.2856&quot;}]},&quot;Stage总数&quot;:{&quot;title&quot;:&quot;指标Stage总数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;Stage总数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:100005.0,&quot;desValue&quot;:104817.0,&quot;incrRate&quot;:&quot;4.81&quot;,&quot;incrValue&quot;:4812.0,&quot;beforeAvg&quot;:&quot;72.0497&quot;,&quot;afterAvg&quot;:&quot;71.4499&quot;}]},&quot;App总数&quot;:{&quot;title&quot;:&quot;指标App总数的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;App总数&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:1388.0,&quot;desValue&quot;:1467.0,&quot;incrRate&quot;:&quot;5.69&quot;,&quot;incrValue&quot;:79.0,&quot;beforeAvg&quot;:&quot;1&quot;,&quot;afterAvg&quot;:&quot;1&quot;}]}}}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Comparision_Hdfs_Audit_201703060312_201703130319" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="startTimeB" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1488729600</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">startTimeB</stringProp>
                </elementProp>
                <elementProp name="endTimeB" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1489248000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">endTimeB</stringProp>
                </elementProp>
                <elementProp name="startTimeA" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1489334400</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">startTimeA</stringProp>
                </elementProp>
                <elementProp name="endTimeA" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">1489852800</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">endTimeA</stringProp>
                </elementProp>
                <elementProp name="typeName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">hdfs_audit</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">typeName</stringProp>
                </elementProp>
                <elementProp name="metrics" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">mkdirs,open,getfileinfo,delete,rename,listStatus,setPermission,contentSummary,create,setReplication,setTimes,concat,append,fsck,setOwner,isFileClosed,allowSnapshot,disallowSnapshot,createSnapshot,renameSnapshot,listSnapshottableDirectory,computeSnapshotDiff,deleteSnapshot,modifyAclEntries,removeAclEntries,removeDefaultAcl,removeAcl,setAcl,addCacheDirective,modifyCacheDirective,removeCacheDirective,listCacheDirectives,addCachePool,modifyCachePool,removeCachePool,listCachePools,startRollingUpgrade,finalizeRollingUpgrade,createSymlink</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">metrics</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/bigdata-web/api/overview/comparator/data</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="870072696">{&quot;code&quot;:0,&quot;msg&quot;:&quot;success get data&quot;,&quot;data&quot;:{&quot;更改AclEntries&quot;:{&quot;title&quot;:&quot;指标更改AclEntries的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;更改AclEntries&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;更改Cache池&quot;:{&quot;title&quot;:&quot;指标更改Cache池的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;更改Cache池&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;打开文件&quot;:{&quot;title&quot;:&quot;指标打开文件的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;打开文件&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:1677458.0,&quot;desValue&quot;:1812599.0,&quot;incrRate&quot;:&quot;8.06&quot;,&quot;incrValue&quot;:135141.0,&quot;beforeAvg&quot;:&quot;11,649.0139&quot;,&quot;afterAvg&quot;:&quot;12,587.4931&quot;}]},&quot;列举可以快照的目录&quot;:{&quot;title&quot;:&quot;指标列举可以快照的目录的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;列举可以快照的目录&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;设置Acl&quot;:{&quot;title&quot;:&quot;指标设置Acl的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;设置Acl&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;删除快照&quot;:{&quot;title&quot;:&quot;指标删除快照的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;删除快照&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;计算快照差异&quot;:{&quot;title&quot;:&quot;指标计算快照差异的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;计算快照差异&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;删除AclEntries&quot;:{&quot;title&quot;:&quot;指标删除AclEntries的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;删除AclEntries&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;内容概览&quot;:{&quot;title&quot;:&quot;指标内容概览的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;内容概览&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:49.0,&quot;desValue&quot;:22.0,&quot;incrRate&quot;:&quot;-55.1&quot;,&quot;incrValue&quot;:-27.0,&quot;beforeAvg&quot;:&quot;0.3403&quot;,&quot;afterAvg&quot;:&quot;0.1528&quot;}]},&quot;新建目录&quot;:{&quot;title&quot;:&quot;指标新建目录的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;新建目录&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:11767.0,&quot;desValue&quot;:12124.0,&quot;incrRate&quot;:&quot;3.03&quot;,&quot;incrValue&quot;:357.0,&quot;beforeAvg&quot;:&quot;81.7153&quot;,&quot;afterAvg&quot;:&quot;84.1944&quot;}]},&quot;添加指令Cache&quot;:{&quot;title&quot;:&quot;指标添加指令Cache的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;添加指令Cache&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;添加Cache池&quot;:{&quot;title&quot;:&quot;指标添加Cache池的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;添加Cache池&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;删除默认AclEntries&quot;:{&quot;title&quot;:&quot;指标删除默认AclEntries的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;删除默认AclEntries&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;createSymlink&quot;:{&quot;title&quot;:&quot;指标createSymlink的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;createSymlink&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;删除文件&quot;:{&quot;title&quot;:&quot;指标删除文件的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;删除文件&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:74513.0,&quot;desValue&quot;:74914.0,&quot;incrRate&quot;:&quot;0.54&quot;,&quot;incrValue&quot;:401.0,&quot;beforeAvg&quot;:&quot;517.4514&quot;,&quot;afterAvg&quot;:&quot;520.2361&quot;}]},&quot;新建快照&quot;:{&quot;title&quot;:&quot;指标新建快照的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;新建快照&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;添加&quot;:{&quot;title&quot;:&quot;指标添加的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;添加&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;查看文件关闭&quot;:{&quot;title&quot;:&quot;指标查看文件关闭的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;查看文件关闭&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;获得文件信息&quot;:{&quot;title&quot;:&quot;指标获得文件信息的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;获得文件信息&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:3713216.0,&quot;desValue&quot;:4002643.0,&quot;incrRate&quot;:&quot;7.79&quot;,&quot;incrValue&quot;:289427.0,&quot;beforeAvg&quot;:&quot;25,786.2222&quot;,&quot;afterAvg&quot;:&quot;27,796.1319&quot;}]},&quot;设置时间&quot;:{&quot;title&quot;:&quot;指标设置时间的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;设置时间&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;列举指令Cache&quot;:{&quot;title&quot;:&quot;指标列举指令Cache的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;列举指令Cache&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;禁止快照&quot;:{&quot;title&quot;:&quot;指标禁止快照的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;禁止快照&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;heads&quot;:[&quot;username&quot;,&quot;originValue&quot;,&quot;desValue&quot;,&quot;incrRate&quot;,&quot;incrValue&quot;,&quot;beforeAvg&quot;,&quot;afterAvg&quot;],&quot;更改指令Cache&quot;:{&quot;title&quot;:&quot;指标更改指令Cache的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;更改指令Cache&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;设置权限&quot;:{&quot;title&quot;:&quot;指标设置权限的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;设置权限&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:23566.0,&quot;desValue&quot;:24682.0,&quot;incrRate&quot;:&quot;4.74&quot;,&quot;incrValue&quot;:1116.0,&quot;beforeAvg&quot;:&quot;163.6528&quot;,&quot;afterAvg&quot;:&quot;171.4028&quot;}]},&quot;删除Cache池&quot;:{&quot;title&quot;:&quot;指标删除Cache池的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;删除Cache池&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;fsck&quot;:{&quot;title&quot;:&quot;指标fsck的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;fsck&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;设置所有者&quot;:{&quot;title&quot;:&quot;指标设置所有者的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;设置所有者&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;列举Cache池&quot;:{&quot;title&quot;:&quot;指标列举Cache池的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;列举Cache池&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;删除Acl&quot;:{&quot;title&quot;:&quot;指标删除Acl的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;删除Acl&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;连接&quot;:{&quot;title&quot;:&quot;指标连接的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;连接&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;查看状态&quot;:{&quot;title&quot;:&quot;指标查看状态的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;查看状态&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:258752.0,&quot;desValue&quot;:284277.0,&quot;incrRate&quot;:&quot;9.86&quot;,&quot;incrValue&quot;:25525.0,&quot;beforeAvg&quot;:&quot;1,796.8889&quot;,&quot;afterAvg&quot;:&quot;1,974.1458&quot;}]},&quot;重命名快照&quot;:{&quot;title&quot;:&quot;指标重命名快照的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;重命名快照&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;删除指令Cache&quot;:{&quot;title&quot;:&quot;指标删除指令Cache的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;删除指令Cache&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;新建文件&quot;:{&quot;title&quot;:&quot;指标新建文件的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;新建文件&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:198343.0,&quot;desValue&quot;:206168.0,&quot;incrRate&quot;:&quot;3.95&quot;,&quot;incrValue&quot;:7825.0,&quot;beforeAvg&quot;:&quot;1,377.3819&quot;,&quot;afterAvg&quot;:&quot;1,431.7222&quot;}]},&quot;重命名&quot;:{&quot;title&quot;:&quot;指标重命名的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;重命名&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:179717.0,&quot;desValue&quot;:186224.0,&quot;incrRate&quot;:&quot;3.62&quot;,&quot;incrValue&quot;:6507.0,&quot;beforeAvg&quot;:&quot;1,248.0347&quot;,&quot;afterAvg&quot;:&quot;1,293.2222&quot;}]},&quot;startRollingUpgrade&quot;:{&quot;title&quot;:&quot;指标startRollingUpgrade的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;startRollingUpgrade&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;finalizeRollingUpgrade&quot;:{&quot;title&quot;:&quot;指标finalizeRollingUpgrade的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;finalizeRollingUpgrade&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]},&quot;设置Replication&quot;:{&quot;title&quot;:&quot;指标设置Replication的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;设置Replication&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:20837.0,&quot;desValue&quot;:22034.0,&quot;incrRate&quot;:&quot;5.74&quot;,&quot;incrValue&quot;:1197.0,&quot;beforeAvg&quot;:&quot;144.7014&quot;,&quot;afterAvg&quot;:&quot;153.0139&quot;}]},&quot;允许快照&quot;:{&quot;title&quot;:&quot;指标允许快照的用户数据对比&quot;,&quot;summaryTitle&quot;:&quot;允许快照&quot;,&quot;highlight&quot;:[&quot;incrRate&quot;,&quot;incrValue&quot;],&quot;summaryHighlight&quot;:&quot;incrRate&quot;,&quot;summaryDisplay&quot;:&quot;desValue&quot;,&quot;datas&quot;:[{&quot;username&quot;:&quot;appuser&quot;,&quot;originValue&quot;:0.0,&quot;desValue&quot;:0.0,&quot;incrRate&quot;:&quot;0&quot;,&quot;incrValue&quot;:0.0,&quot;beforeAvg&quot;:&quot;0&quot;,&quot;afterAvg&quot;:&quot;0&quot;}]}}}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="用表格察看结果" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="断言结果" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
